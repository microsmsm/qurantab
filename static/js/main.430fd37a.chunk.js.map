{"version":3,"sources":["utils/constants.ts","locales/index.ts","store.ts","components/CustomText/CustomText.view.tsx","firebase.js","components/CustomModal/CustomModal.view.tsx","utils/getDateString.ts","locales/ar.ts","assets/imgs/bg.jpg","locales/en.ts","utils/changeLanguage.ts","utils/getNewBackground.ts","utils/useBackgroundFunctions.ts","components/Login/Login.view.tsx","assets/cities sync /^/.//.*/.json$","theme.js","components/Clock/Clock.view.tsx","components/Clock/index.tsx","components/CustomTooltip/CustomTooltip.view.tsx","utils/useLocalizeNumbers.ts","components/AdhkarDayNight/AdhkarDayNight.view.tsx","components/AdhkarDayNight/AdhkarDayNight.index.tsx","components/CustomPopover/CustomPopover.view.tsx","components/DoaaFromQuran/DoaaFromQuran.view.tsx","components/Adhkar/Adhkar.view.tsx","utils/useDirection.ts","components/AudioControls/AudioControls.view.tsx","components/AudioControls/AudioControls.index.tsx","utils/useCustomToast.ts","components/AddLinkForm/AddLinkForm.view.tsx","components/AddLinkForm/AddLinkForm.index.tsx","utils/isEdge.ts","components/CustomIconButton/CustomIconButton.view.tsx","components/QuickLinks/QuickLinks.view.tsx","components/QuickLinks/QuickLinks.index.tsx","components/HijriDate/HijriDate.view.tsx","components/HijriDate/HijriDate.index.tsx","components/CustomSelect/CustomSelect.view.tsx","utils/localizeNumbers.ts","utils/getVerse.ts","utils/useSetVerse.ts","components/ChangeVerseModal/ChangeVerseModal.view.tsx","components/ChangeVerseModal/index.tsx","components/VerseDetails/VerseDetails.view.tsx","components/VerseDetails/index.tsx","utils/isChrome.ts","components/Header/Header.view.tsx","components/Header/index.tsx","components/PopupMenu/PopupMenu.view.tsx","components/TabsTitles/TabsTitles.view.tsx","components/Favourites/Favourites.view.tsx","components/Favourites/index.tsx","components/CreditAuthor/CreditAuthor.view.tsx","components/CreditAuthor/index.tsx","utils/initHotkeys.ts","utils/getTafseer.ts","components/TafseerModal/TafseerModal.view.tsx","components/VerseContentIcon/VerseContentIcon.view.tsx","components/Tafseer/Tafseer.view.tsx","components/Tafseer/index.tsx","utils/useVerseFunctions.ts","utils/zeroFilled.ts","components/VerseAudio/VerseAudio.view.tsx","components/VerseAudio/VerseAudio.index.tsx","components/NextVerseButton/NextVerseButton.view.tsx","components/PreviousVerseButton/PreviousVerseButton.view.tsx","components/AddToFavButton/AddToFavButton.view.tsx","components/TranslationButton/TranslationButton.view.tsx","components/TranslationButton/index.tsx","components/VerseContent/VerseContent.view.tsx","components/VerseContent/index.tsx","utils/isTodayFriday.ts","components/PrayerTab/PrayerTab.constant.js","utils/convertOldCalculationMethodNames.ts","components/AdhanVoice/AdhanVoice.constants.js","utils/usePrayerTimes.ts","components/PrayerTimes/PrayerTimes.view.tsx","components/PrayerTimes/PrayerTimes.index.tsx","components/Toggle/Toggle.view.jsx","components/GeneralTab/GeneralTab.view.tsx","components/GeneralTab/index.tsx","components/VerseTab/recitersDataArray.const.ts","components/VerseTab/VerseTab.view.tsx","components/VerseTab/index.tsx","components/SelectLocation/SelectLocation.view.tsx","components/SelectLocation/SelectLocation.index.tsx","components/AdhanVoice/AdhanVoice.view.tsx","components/AdhanVoice/AdhanVoice.index.tsx","components/CustomInput/CustomInput.view.tsx","components/ManuelPrayerTimesSettings/ManuelPrayerTimesSettings.view.tsx","components/ManuelPrayerTimesSettings/ManuelPrayerTimesSettings.index.tsx","components/PrayerTab/PrayerTab.view.tsx","components/PrayerTab/PrayerTab.index.tsx","components/WhatsNewTab/WhatsNewTab.constant.ts","components/WhatsNewTab/WhatsNewTab.view.tsx","components/HotkeysTab/HotkeysTab.view.tsx","components/BackgroundTab/BackgroundTab.view.tsx","components/BackgroundTab/BackgroundTab.index.tsx","components/SettingsPopup/SettingsPopup.view.tsx","components/Settings/Settings.view.tsx","components/Settings/index.tsx","assets/imgs/personal-pic.jpg","components/AboutMe/AboutMe.view.tsx","components/Background/Background.view.tsx","components/Background/Background.index.tsx","App.tsx","utils/initGA.ts","index.tsx"],"names":["_GENERAL","_VERSE","_PRAYER","_BACKGROUND","_TODO","_WHATSNEW","_HOTKEYS","_CONTACT","MUYASSAR","JALALAYN","_EN","_AR","_FRIDAY","_FAJR","_SUNRISE","_DHUHR","_JUMAA","_ASR","_MAGHRIB","_ISHA","_EN_LOCALE","_AR_LOCALE","_INITIAL_USER_DATA","accountDetails","version","checkedChangeLog","settings","verseFlag","darkThemeFlag","clockFlag","clock24Flag","weatherFlag","weatherCFlag","dateFlag","todoFlag","favouritesFlag","autoSwitchVerse","randomVerseFlag","prayerTimesFlag","dailyGoalFlag","dailyGoalValue","userDailyGoalHistory","selectedLanguageKey","selectedReciter","prayerTimes","prayerMethod","dayNightFlag","manualPrayerTimes","fajr","dhuhr","asr","maghrib","isha","prayerTimesDoneHistory","weatherObject","notificationAudioFlag","translationFlag","backgroundFlag","autoChangeBackgroundFlag","selectedSolidColor","continuesPlayingVerseFlag","quranData","favourites","surahName","surahNameAr","surahNumber","surahEnd","currentAyaNumber","number","currentAyaText","currentTranslationText","direction","todoData","completedTodoFlag","todoFocusFlag","listsOrder","lists","createdDate","todos","todosOrder","backgroundData","backgroundUrl","bgImg","backgroundExpire","backgroundIndex","selectedTranslationKey","selectedAdhanVoice","selectedDateLocale","azkarDayNightTracker","day","night","adhanAudioLevel","verseAudioLevel","_QT_FACEBOOK_LINK","_FACEBOOK_LINK","_TWITTER_LINK","_YOUTUBE_LINK","_PATREON_LINK","_PAYPAL_LINK","_QURAN_TAB_CHROME_LINK","_WAZAKER_ANDROID_LINK","_WAZAKER_IOS_LINK","_QURAN_UTHMANI_MIN","ABDULBASIT_MURATTAL","ABDULLAH_BASFAR","ABDURRAHMAAN_SUDAIS","ABDULSAMAD","SHAATREE","AHMED_AJAMY","ALAFASY","HANI_RIFAI","HUSARY","HUSARY_MUJAWWAD","HUDHAIFY","IBRAHIM_AKHBAR","MAHER_MUAIQLY","MINSHAWI","MINSHAWI_MUJAWWAD","MUHAMMAD_AYYOUB","MUHAMMAD_JIBREEL","SAOOD_SHURAYM","PARHIZGAR","AYMAN_SWOAID","NASSER_ALQATAMI","YASSER_ALDOSSARY","strings","LocalizedStrings","en","ar","data","JSON","parse","localStorage","getItem","updatePropertyDB","obj","shouldDelete","a","userData","uid","_get","db","docRef","collection","doc","update","firebase","FieldValue","delete","useStore","create","set","get","setUserData","value","produce","draft","updateWeatherObject","updateBackgroundData","key","untrackedValues","isPropertyUntracked","updateSettingsProperty","addNewSurahToFavourites","surahKey","ayaKey","addNewAyaToFavourites","removeAyaFromFavourites","Object","keys","length","updateQuranData","updateTranslationVerseData","toggleDayNightFlag","updatePrayerMethod","updateManuelPrayerTime","parsedValue","parseInt","toggleTodoFocusFlag","toggleNotificationAudioFlag","toggleCompletedTodoFlag","updateRecitersData","recitersExpire","recitersData","updateTranslationsData","translationsExpire","translationsData","updateCheckedChangeLog","updateAppVersion","updateSelectedTranslationKey","updateAccountDetails","updateUID","clearAccountDetails","toggleBackgroundFlag","toggleAutoChangeBackgroundFlag","togglePlayDoaaFlag","playDoaaFlag","toggleDateLocale","result","updateSelectedSolidColor","updateLocation","location","updateSelectedAdhanVoice","adhanVoice","updatePrayerTimesObject","prayerTimesObject","updateAzkarDayNightTracker","index","type","undefined","updateAzkarDayNightExpire","azkarDayNightExpire","updateAudioControls","addQuickLink","name","domain","quickLinksArray","push","deleteQuickLink","splice","CustomText","children","hasArabic","forceArabicMode","isVerse","props","store","fontFamily","pt","dir","firebaseApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","enablePersistence","synchronizeTabs","catch","err","code","console","error","auth","functions","CustomModal","header","className","size","footer","isScrollInside","scrollBehavior","textAlign","borderBottomWidth","zIndex","withTime","dayjs","format","language","darkTheme","weather","date","clock","clock24","addToFavourites","favouritesEmpty","languageKey","document","documentElement","style","cssText","setLanguage","getNewBackground","httpsCallable","state","setNewBackground","backgroundList","newBackgroundExpire","getDateString","photoLength","nextBackgroundIndex","dpr","window","devicePixelRatio","width","innerWidth","bgPath","username","profile_url","fetchNewBackground","resultArray","uiConfig","signInFlow","credentialHelper","signInOptions","EmailAuthProvider","EMAIL_PASSWORD_SIGN_IN_METHOD","Login","useBackgroundFunctions","useDisclosure","isOpen","onOpen","onClose","useState","isSignedIn","setIsSignedIn","setState","initUserData","user","currentUser","email","displayName","exists","then","info","changeLanguage","generateNewBackground","useEffect","setItem","stringify","unregisterAuthObserver","onAuthStateChanged","variant","onClick","global","confirm","signOut","logout","login","firebaseAuth","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","resolve","module","exports","theme","extendTheme","styles","body","color","mode","components","Tooltip","baseStyle","fontSize","fontWeight","paddingTop","Button","variants","ghost","_hover","bg","Clock","timeoutVar","is24Flag","clockFormat","setClockFormat","clearTimeout","generateTime","Date","locale","toLocaleTimeString","hourCycle","hour","minute","setTimeout","split","ClockData","shallow","arabicProps","CustomTooltip","isImmediately","label","aria-label","hasArrow","openDelay","localizeNumbers","toString","replace","AdhkarDayNightModal","newAzkarDayNightExpire","verseStyles","useLocalizeNumbers","isTrackCompleted","currentTrack","repetition","colorScheme","generateFooter","item","currentTrackValue","justify","bless","cursor","mr","repeat","updateTracker","isFitted","defaultIndex","azkarMassa","azkarSabah","azkarMassaList","opening","zekr","azkarSabahList","getSize","CustomPopover","TriggerComponent","maxW","m","maxHeight","overflow","DoaaFromQuran","doaaList","py","borderBottom","addBottomBorder","text","AzkarDayNight","setDirStyle","isRTL","useDirection","modalType","setModalType","TextStyles","mx","openModal","adhkar","isLazy","whiteSpace","my","justifyContent","azkarSabahMassa","quranicDoaa","AudioControls","generateAudioSlider","defaultValue","alignItems","flexShrink","step","onChangeEnd","activeButtonStyles","bgColor","_active","toast","useToast","params","description","status","duration","isClosable","AddLinkForm","useCustomToast","setName","isNameValid","setIsNameValid","setDomain","isDomainValid","setIsDomainValid","saveNewLink","trim","addLinkSuccess","inputProps","isRequired","onKeyPress","addLink","add","isInvalid","onBlur","onChange","target","autoFocus","link","placeholder","check1","navigator","userAgent","indexOf","check2","CustomIconButton","QuickLinks","ButtonProps","linkProps","isExternal","rel","flex","display","gap","quickLinks","isEdge","chrome","tabs","query","url","chromeTab","apps","w","href","src","alt","icon","removeQuickLink","HijriDate","dateFormat","setDateFormat","toLocaleDateString","month","year","h","d","px","CustomSelect","options","isSearchable","fullWidth","menuPlacement","colors","primary25","neutral0","neutral80","container","provided","minWidth","transformOrigin","option","getVerse","translationKey","getLocalVerse","getTranslation","axios","englishName","numberOfAyahs","ayahs","juz","hizbQuarter","customTranslationKey","formatString","fetchError","translations","ChangeVerseModal","setVerse","useSetVerse","isLoading","setIsLoading","allSurahData","setAllSurahData","surahNamesArray","setSurahNamesArray","surahVerseNumbersArray","setSurahVerseNumbersArray","selectedSurahNumber","setSelectedSurahNumber","selectedVerseNumber","setSelectedVerseNumber","getAllSurahData","getSurahVerseNumbers","totalVerses","_range","changeVerse","loadingText","apply","find","VerseDetails","hizb","Math","ceil","quranInfoTooltip","Header","isChrome","PopupMenu","flag","onCancel","right","popupClasses","classNames","TabsTitles","titlesArray","selectedTitleKey","setSelectedTitleKey","isTabActive","tabClasses","Favourites","favouritesData","popupFlag","setPopupFlag","tabsTitlesArray","setTabsTitlesArray","selectedSurahKey","setSelectedSurahKey","tabData","setTabData","generateTabsTitles","generateTabData","arr","_isEmpty","_sortBy","forEach","surahIndex","surahTitle","ayaLength","ayaNumber","base","sm","CreditAuthor","isPopupOpen","querySelector","prevBtn","click","nextBtn","playBtn","tafseerBtn","getTafseerMuyassar","getTafseerJalalayn","url2","getTafseer","Promise","all","tafseerMuyassar","tafseerJalalayn","TafseerModal","tafseerObj","setTafseerObj","selectedTab","setSelectedTab","loadingFlag","setLoadingFlag","getTafseerData","tafseerObjResult","tafseer","changeSelectedTab","tabKey","tafseerTabClasses","tafseerTabContentClasses","muyassar","jalalayn","VerseContentIcon","tooltipText","Tafseer","data-hotkeys","getRandomVerse","randomSurahNumber","_random","randomAyaNumber","getNextVerseData","shouldIgnoreRandomVerseFlag","currentSurahNumber","currentSurahEnd","nextSurahNumber","nextAyaNumber","nextAya","previousAya","previousSurah","previousAyaNumber","param","substr","VerseAudio","useVerseFunctions","audioURLsArray","setAudioURLsArray","isAudioPlaying","setIsAudioPlaying","isAudioLoading","setIsAudioLoading","audioRef","useRef","generateAudioURLs","playVerse","current","volume","load","pauseVerse","pause","urls","zeroFilled","opacity","boxShadow","continuesPlayingVerse","playPauseAudio","ref","onEnded","onLoadedData","play","onLoadStart","onError","log","verseAudioError","onPlaying","NextVerseButton","onClickEvent","next","PreviousVerseButton","previous","AddToFavButton","isActive","TranslationButton","selectedTranslationValue","setSelectedTranslationValue","translationArray","setTranslationArray","getTranslationData","fetchTranslationData","filter","identifier","translationsExpiryDate","submitNewTranslation","ReactGA","event","category","action","translation","mt","VerseContent","autoSwitchVerseDoneFlag","setAutoSwitchVerseDoneFlag","isLoadingFlag","setIsLoadingFlag","shouldFillTranslationText","loadVerse","addEventListener","initHotkeys","removeEventListener","getNextVerse","getPreviousVerse","fav","isTodayFriday","weekday","_MUSLIM_WORLD_LEAGUE","_NORTH_AMERICA","_EGYPTIAN","_UMM_ALQURA","old","new","ADHAN_VOICES_ARRAY","setPrayerAlarms","shouldForceAlarms","alarms","getAll","isDayEnded","now","runtime","sendMessage","warn","message","sendMessageToSetAlarms","clearPrayerAlarms","extend","utc","customParseFormat","timeNowInterval","PrayerTimes","timeNow","initPrayerTimes","usePrayerTimes","nextPrayerObject","setNextPrayerObject","generatePrayerTimesObject","times","prayerKeys","timeValue","valueOf","labelEn","labelAr","generateTimes","coordinates","adhan","Coordinates","lat","lng","calculationMethod","convertOldCalculationMethodNames","CalculationMethod","highLatitudeRule","HighLatitudeRule","TwilightAngle","adjustments","getNextPrayer","diff","prayerTime","prevPrayerKey","prayerKeysArray","nextPrayerIndex","findIndex","prevPrayerTime","subtract","prevNextPrayersDiff","remainingTime","remainingPercentage","abs","shouldShowRedLine","remainingTimeSplit","hours","minutes","asMinutes","getPrayerTimesRowClasses","p","height","settingsElem","prayerTabElem","chooseLocation","as","setTimeNow","clearInterval","setInterval","Toggle","toggleClasses","GeneralTab","generalToggles","title","languageOptions","getDropdownValue","VerseTab","verseToggles","flagValue","selectedReciterValue","reciters","recitersDataArray","SelectLocation","updatePrayerAlarms","_debounce","country","selectedCountry","setSelectedCountry","selectCountry","entries","countries","city","selectCity","parseFloat","_isEqual","updateLocationData","require","React","memo","AdhanVoice","isAdhanVoicePlaying","setIsAdhanVoicePlaying","shouldShowAdhanAudioIcon","toggleAdhanVoice","process","CustomInput","prayerTimesKeys","ManuelPrayerTimesSettings","adjustPrayerTimes","paddingLeft","paddingRight","maxWidth","updatePrayerTime","PrayerTab","calculationMethodOptions","getSelectedCalculationMethod","daylightSavingTime","playDoaa","_CHANGE_LOG","changes","WhatsNewTab","change","HotkeysTab","BackgroundTab","isImageLoading","setIsImageLoading","shouldBeDisabled","condition","pointerEvents","loadNewBackground","natureBackgrounds","autoChangeBackground","SettingsPopup","menuTitles","selectedTabKey","setSelectedTabKey","Settings","popupMenuFlag","setPopupMenuFlag","settingsClasses","togglePopupMenuFlag","defaultOptions","autoplay","loop","AboutMe","buttonStyles","linkStyles","textDecoration","marginLeft","QuranTabLink","trackEvent","WazakerLinks","burstRef","runAnimation","isRound","personalPic","whoAmI","pb","supportMe","spacing","leftIcon","align","findMeHere","isInline","QT_page","Background","backgroundImage","backgroundColor","App","initialize","ga","pageview","setColorMode","useColorMode","GlobalStyles","css","ReactDOM","render","customTheme","resetCSS","getElementById"],"mappings":"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a,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAAa,IACb,YAA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sD,KAAM,QACNtD,MAAO,wBAIb,CACE6G,KAAM,gBACNslB,QAAS,CACP,CACE7oB,KAAM,QACNtD,MAAO,wEAET,CACEsD,KAAM,QACNtD,MAAO,wBAIb,CACE6G,KAAM,gBACNslB,QAAS,CACP,CACE7oB,KAAM,QACNtD,MAAO,qBAET,CACEsD,KAAM,QACNtD,MAAO,gCAIb,CACE6G,KAAM,iBACNslB,QAAS,CACP,CACE7oB,KAAM,QACNtD,MAAO,iDAET,CACEsD,KAAM,QACNtD,MAAO,wBAIb,CACE6G,KAAM,iBACNslB,QAAS,CACP,CACE7oB,KAAM,QACNtD,MAAO,wCAET,CACEsD,KAAM,QACNtD,MAAO,8FAET,CACEsD,KAAM,UACNtD,MACE,kGAIR,CACE6G,KAAM,iBACNslB,QAAS,CACP,CACE7oB,KAAM,QACNtD,MAAO,qDAET,CACEsD,KAAM,QACNtD,MAAO,wDAET,CACEsD,KAAM,QACNtD,MAAO,gFAIb,CACE6G,KAAM,gBACNslB,QAAS,CACP,CACE7oB,KAAM,QACNtD,MAAO,yGAET,CACEsD,KAAM,QACNtD,MAAO,6CAET,CACEsD,KAAM,QACNtD,MAAO,oDAET,CACEsD,KAAM,QACNtD,MAAO,6CAIb,CACE6G,KAAM,oBACNslB,QAAS,CACP,CACE7oB,KAAM,QACNtD,MAAO,+CAET,CACEsD,KAAM,QACNtD,MAAO,2DAET,CACEsD,KAAM,QACNtD,MAAO,0DAET,CACEsD,KAAM,QACNtD,MAAO,4CAIb,CACE6G,KAAM,oBACNslB,QAAS,CACP,CACE7oB,KAAM,QACNtD,MAAO,kDAIb,CACE6G,KAAM,oBACNslB,QAAS,CACP,CACE7oB,KAAM,QACNtD,MAAO,wCAIb,CACE6G,KAAM,oBACNslB,QAAS,CACP,CACE7oB,KAAM,UACNtD,MAAO,gEAET,CACEsD,KAAM,QACNtD,MAAO,+CAET,CACEsD,KAAM,QACNtD,MAAO,+BAET,CACEsD,KAAM,QACNtD,MAAO,sCAET,CACEsD,KAAM,QACNtD,MAAO,qCAIb,CACE6G,KAAM,oBACNslB,QAAS,CACP,CACE7oB,KAAM,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","file":"static/js/main.430fd37a.chunk.js","sourcesContent":["import { version } from '../../package.json';\nimport bgImg from '../assets/imgs/bg.jpg';\n\nexport const _GENERAL = 'General';\nexport const _VERSE = 'Verse settings';\nexport const _PRAYER = 'Prayer settings';\nexport const _BACKGROUND = 'Background settings';\nexport const _TODO = 'Todo';\nexport const _WHATSNEW = 'What\\'s new';\nexport const _HOTKEYS = 'Hot keys';\nexport const _CONTACT = 'Contact';\nexport const _NUMBER = 'number';\nexport const MUYASSAR = 'muyassar';\nexport const JALALAYN = 'jalalayn';\nexport const _ERROR = 'error';\nexport const _EN = 'en';\nexport const _AR = 'ar';\nexport const _FRIDAY = 'Friday';\nexport const _FAJR = 'fajr';\nexport const _SUNRISE = 'sunrise';\nexport const _DHUHR = 'dhuhr';\nexport const _JUMAA = 'jumaa';\nexport const _ASR = 'asr';\nexport const _MAGHRIB = 'maghrib';\nexport const _ISHA = 'isha';\nexport const _DEFAULT_RECITER = 'ar.husary';\nexport const _EN_LOCALE = 'en-US';\nexport const _AR_LOCALE = 'ar-SA';\nexport const _INITIAL_USER_DATA = {\n  accountDetails: {}, // will hold user's data like email and displayName\n  version, // I couldn't move this to constans file becasue I couldn't access package.js from there\n  checkedChangeLog: false, // This indicates whether user checked the new addition in 'what's new' tab or not\n  settings: {\n    verseFlag: true,\n    darkThemeFlag: true,\n    clockFlag: true,\n    clock24Flag: false,\n    weatherFlag: true,\n    weatherCFlag: true,\n    dateFlag: true,\n    todoFlag: true,\n    favouritesFlag: true,\n    autoSwitchVerse: true,\n    randomVerseFlag: false,\n    prayerTimesFlag: true,\n    dailyGoalFlag: true,\n    dailyGoalValue: 10,\n    userDailyGoalHistory: [\n      // {date: date, totalValue: int, userValue: int} //shape of the object\n    ],\n    selectedLanguageKey: _EN,\n    selectedReciter: 'ar.husary',\n    prayerTimes: {\n      prayerMethod: 'Makkah',\n      dayNightFlag: false,\n    },\n    manualPrayerTimes: {\n      fajr: 0,\n      dhuhr: 0,\n      asr: 0,\n      maghrib: 0,\n      isha: 0,\n    },\n    prayerTimesDoneHistory: [\n      // {date: date, prayerTimes: [prayerKey, prayerType]]} //shape of the object\n    ],\n    weatherObject: {},\n    notificationAudioFlag: true,\n    translationFlag: true,\n    backgroundFlag: true,\n    autoChangeBackgroundFlag: true,\n    selectedSolidColor: '#1a202c',\n    continuesPlayingVerseFlag: true,\n  },\n  quranData: {\n    favourites: {},\n    surahName: 'al-Fatihah',\n    surahNameAr: 'الفاتحة',\n    surahNumber: 1,\n    surahEnd: 7,\n    currentAyaNumber: 1, // because albasmala is 'Aya' number 1\n    number: 1,\n    currentAyaText: 'بِسْمِ اللَّهِ الرَّحْمَٰنِ الرَّحِيم',\n    currentTranslationText: 'In the name of Allah, The Most Gracious, the Most Merciful',\n    direction: 'rtl',\n  },\n  todoData: {\n    completedTodoFlag: true,\n    todoFocusFlag: true,\n    listsOrder: ['to-do'],\n    lists: {\n      'to-do': {\n        createdDate: 0,\n        todos: {},\n        todosOrder: [],\n      },\n    },\n  },\n  backgroundData: {\n    backgroundUrl: bgImg,\n    backgroundExpire: '',\n    backgroundIndex: 0,\n  },\n  selectedTranslationKey: 'en.ahmedraza',\n  selectedAdhanVoice: 'adhan-abdulbasit-abdusamad',\n  selectedDateLocale: _AR_LOCALE,\n  azkarDayNightTracker: {\n    day: [],\n    night: []\n  },\n  adhanAudioLevel: 1,\n  verseAudioLevel: 1,\n};\nexport const _QT_FACEBOOK_LINK = 'https://www.facebook.com/QuranTabChrome';\nexport const _FACEBOOK_LINK = 'https://www.facebook.com/programmingAdvice';\nexport const _TWITTER_LINK = 'https://twitter.com/mohamed_abusrea';\nexport const _INSTAGRAM_LINK = 'http://instagram.com/mohamed_abusrea';\nexport const _YOUTUBE_LINK = 'https://www.youtube.com/mohamedabusrea';\n// export const _BY_ME_COFFEE_LINK = 'https://www.buymeacoffee.com/mohamedabusrea';\nexport const _PATREON_LINK = 'https://www.patreon.com/mohamedabusrea';\nexport const _PAYPAL_LINK = 'https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=N6DTGKRQFX672';\nexport const _QURAN_TAB_CHROME_LINK = 'https://chrome.google.com/webstore/detail/quran-tab/afaihcdgkjebgabomemccdneglknjkdd';\nexport const _QURAN_TAB_FIREFOX_LINK = 'https://addons.mozilla.org/en-US/firefox/addon/quran-tab/';\nexport const _WAZAKER_ANDROID_LINK = 'https://play.google.com/store/apps/details?id=com.wazakerdailyaya';\nexport const _WAZAKER_IOS_LINK = 'https://apps.apple.com/app/apple-store/id1453500014';\nexport const _QURAN_UTHMANI_MIN = 'quran-uthmani-min';\nexport const ABDULBASIT_MURATTAL = 'ar.abdulbasitmurattal';\nexport const ABDULLAH_BASFAR = 'ar.abdullahbasfar';\nexport const ABDURRAHMAAN_SUDAIS = 'ar.abdurrahmaansudais';\nexport const ABDULSAMAD = 'ar.abdulsamad';\nexport const SHAATREE = 'ar.shaatree';\nexport const AHMED_AJAMY = 'ar.ahmedajamy';\nexport const ALAFASY = 'ar.alafasy';\nexport const HANI_RIFAI = 'ar.hanirifai';\nexport const HUSARY = 'ar.husary';\nexport const HUSARY_MUJAWWAD = 'ar.husarymujawwad';\nexport const HUDHAIFY = 'ar.hudhaify';\nexport const IBRAHIM_AKHBAR = 'ar.ibrahimakhbar';\nexport const MAHER_MUAIQLY = 'ar.mahermuaiqly';\nexport const MINSHAWI = 'ar.minshawi';\nexport const MINSHAWI_MUJAWWAD = 'ar.minshawimujawwad';\nexport const MUHAMMAD_AYYOUB = 'ar.muhammadayyoub';\nexport const MUHAMMAD_JIBREEL = 'ar.muhammadjibreel';\nexport const SAOOD_SHURAYM = 'ar.saoodshuraym';\nexport const PARHIZGAR = 'ar.parhizgar';\nexport const AYMAN_SWOAID = 'ar.aymanswoaid';\nexport const NASSER_ALQATAMI = 'nasser_alqatami';\nexport const YASSER_ALDOSSARY = 'yasser_aldossary';\n","import LocalizedStrings from 'react-localization';\nimport ar from './ar';\nimport en from './en';\n\nconst strings: any = new LocalizedStrings({\n  en,\n  ar,\n});\n\nexport default strings;\n","import create from 'zustand';\nimport produce from 'immer';\nimport _get from 'lodash/get';\n// import { devtools } from 'zustand/middleware';\n\nimport { _AR_LOCALE, _EN_LOCALE, _INITIAL_USER_DATA } from './utils/constants';\nimport * as firebase from 'firebase/app';\nimport { db } from './firebase';\n\nconst data = JSON.parse(localStorage.getItem('userData') as string);\n\nconst updatePropertyDB = async (obj: string | any, shouldDelete?: boolean) => {\n  // const user = auth && auth.currentUser;\n  const userData = JSON.parse(localStorage.getItem('userData') as string)\n  const uid = _get(userData, 'uid');\n\n  if (uid && db && obj) {\n    const docRef = db.collection('users').doc(uid);\n\n    if (shouldDelete) {\n      await docRef.update({\n        [obj]: firebase.firestore.FieldValue.delete(),\n        [`untrackedValues.${obj}`]: true,\n      });\n    }\n    else {\n      await docRef.update({\n        ...obj,\n      });\n    }\n  }\n};\n\n// export const [useStore, api] = create(devtools(store, 'userData App Store'));\nexport const useStore = create<AppState>((set: any, get: any) => ({\n  userData: data || _INITIAL_USER_DATA,\n  setUserData: value => set(produce(draft => {//don't update db here. we already do that in Login component\n    draft.userData = value;\n  }), 'setUserData'),\n  updateWeatherObject: value => set(produce(draft => {\n    draft.userData.settings.weatherObject = value;\n    updatePropertyDB({ 'settings.weatherObject': value });\n  }), 'updateWeatherObject'),\n  updateBackgroundData: (value) => set(produce(draft => {\n    const key = 'backgroundData';\n    const untrackedValues = get().userData.untrackedValues;\n    const isPropertyUntracked = _get(untrackedValues, key);\n\n    draft.userData.backgroundData = {\n      ...draft.userData.backgroundData,\n      ...value,\n    };\n    !isPropertyUntracked && updatePropertyDB(key, true);\n  }), 'updateBackgroundData'),\n  updateSettingsProperty: (key, value) => set(produce(draft => {\n    draft.userData.settings[key] = value;\n    updatePropertyDB({ [`settings.${key}`]: value });\n  }), 'updateSettingsProperty'),\n  addNewSurahToFavourites: (surahKey, ayaKey) => set(produce(draft => { /*Add new surah(group) to the favourite list*/\n    draft.userData.quranData.favourites[surahKey] = { [ayaKey]: true };\n    updatePropertyDB({ [`quranData.favourites.${surahKey}`]: { [ayaKey]: true } });\n  }), 'addNewSurahToFavourites'),\n  addNewAyaToFavourites: (surahKey, ayaKey) => set(produce(draft => {\n    draft.userData.quranData.favourites[surahKey][ayaKey] = true;\n    updatePropertyDB({ [`quranData.favourites.${surahKey}.${ayaKey}`]: true });\n  }), 'addNewAyaToFavourites'),\n  removeAyaFromFavourites: (surahKey, ayaKey) => set(produce(draft => {\n    delete draft.userData.quranData.favourites[surahKey][ayaKey];\n    !Object.keys(draft.userData.quranData.favourites[surahKey]).length && delete draft.userData.quranData.favourites[surahKey];\n    updatePropertyDB({ [`quranData.favourites.${surahKey}.${ayaKey}`]: firebase.firestore.FieldValue.delete() });\n  }), 'removeAyaFromFavourites'),\n  updateQuranData: (data) => set(produce(draft => {\n    draft.userData.quranData = {\n      favourites: { ...draft.userData.quranData.favourites },\n      ...data\n    };\n    if (!draft.userData.settings.randomVerseFlag) {\n      updatePropertyDB({\n        'quranData.surahNumber': data.surahNumber,\n        'quranData.surahName': data.surahName,\n        'quranData.surahNameAr': data.surahNameAr,\n        'quranData.surahEnd': data.surahEnd,\n        'quranData.currentAyaNumber': data.currentAyaNumber,\n        'quranData.currentAyaText': data.currentAyaText,\n        'quranData.number': data.number,\n      });\n    }\n  }), 'updateQuranData'),\n  updateTranslationVerseData: (currentTranslationText, direction) => set(produce(draft => {\n    draft.userData.quranData.currentTranslationText = currentTranslationText;\n    draft.userData.quranData.direction = direction;\n    if (!draft.userData.settings.randomVerseFlag) {\n      updatePropertyDB({\n        'quranData.currentTranslationText': currentTranslationText,\n        'quranData.direction': direction\n      });\n    }\n  }), 'updateTranslationVerseData'),\n  toggleDayNightFlag: () => set(produce(draft => {\n    const value = !draft.userData.settings.prayerTimes.dayNightFlag;\n    draft.userData.settings.prayerTimes.dayNightFlag = value;\n    updatePropertyDB({ 'settings.prayerTimes.dayNightFlag': value });\n  }), 'toggleDayNightFlag'),\n  updatePrayerMethod: (prayerMethod) => set(produce(draft => {\n    draft.userData.settings.prayerTimes.prayerMethod = prayerMethod;\n    updatePropertyDB({ 'settings.prayerTimes.prayerMethod': prayerMethod });\n  }), 'updatePrayerMethod'),\n  updateManuelPrayerTime: (key, value) => set(produce(draft => {\n    let parsedValue = value;\n\n    if (typeof parsedValue === \"string\") {\n      parsedValue = parseInt(parsedValue);\n    }\n    if (draft.userData.settings.manualPrayerTimes) {\n      draft.userData.settings.manualPrayerTimes[key] = parsedValue;\n    }\n    else {\n      draft.userData.settings.manualPrayerTimes = {\n        ..._INITIAL_USER_DATA.settings.manualPrayerTimes,\n        [key]: parsedValue,\n      };\n    }\n\n    updatePropertyDB({ [`settings.manualPrayerTimes.${key}`]: parsedValue });\n  }), 'updateManuelPrayerTime'),\n  toggleTodoFocusFlag: () => set(produce(draft => {\n    const value = !draft.userData.todoData.todoFocusFlag;\n    draft.userData.todoData.todoFocusFlag = value;\n    updatePropertyDB({ 'todoData.todoFocusFlag': value });\n  }), 'toggleTodoFocusFlag'),\n  toggleNotificationAudioFlag: () => set(produce(draft => {//local only. no need for db.\n    draft.userData.settings.notificationAudioFlag = !draft.userData.settings.notificationAudioFlag;\n  }), 'toggleNotificationAudioFlag'),\n  toggleCompletedTodoFlag: () => set(produce(draft => {\n    const value = !draft.userData.todoData.completedTodoFlag;\n    draft.userData.todoData.completedTodoFlag = value;\n    updatePropertyDB({ 'todoData.completedTodoFlag': value });\n  }), 'toggleCompletedTodoFlag'),\n  updateRecitersData: (recitersExpire, recitersData) => set(produce(draft => {\n    const key = 'settings.recitersData';\n    const untrackedValues = get().userData.untrackedValues;\n    const isPropertyUntracked = _get(untrackedValues, key);\n\n    draft.userData.settings.recitersExpire = recitersExpire;\n    draft.userData.settings.recitersData = recitersData;\n\n    if (!isPropertyUntracked) {\n      updatePropertyDB(key, true);\n      updatePropertyDB('settings.recitersExpire', true);\n    }\n  }), 'updateRecitersData'),\n  updateTranslationsData: (translationsExpire, translationsData) => set(produce(draft => {\n    const key = 'translationsData';\n    const untrackedValues = get().userData.untrackedValues;\n    const isPropertyUntracked = _get(untrackedValues, key);\n\n    draft.userData.translationsExpire = translationsExpire;\n    draft.userData.translationsData = translationsData;\n\n    if (!isPropertyUntracked) {\n      updatePropertyDB(key, true);\n      updatePropertyDB('translationsExpire', true);\n    }\n  }), 'updateTranslationsData'),\n  updateCheckedChangeLog: (checkedChangeLog) => set(produce(draft => {\n    draft.userData.checkedChangeLog = checkedChangeLog;\n    updatePropertyDB({ 'checkedChangeLog': checkedChangeLog });\n  }), 'updateCheckedChangeLog'),\n  updateAppVersion: (value) => set(produce(draft => {\n    draft.userData.version = value;\n    updatePropertyDB({ 'version': value });\n  }), 'updateAppVersion'),\n  updateSelectedTranslationKey: (value) => set(produce(draft => {\n    draft.userData.selectedTranslationKey = value;\n    updatePropertyDB({ 'selectedTranslationKey': value });\n  }), 'updateSelectedTranslationKey'),\n  updateAccountDetails: (accountDetails) => set(produce(draft => {\n    draft.userData.accountDetails = accountDetails;\n    updatePropertyDB({ 'accountDetails': accountDetails });\n  }), 'updateAccountDetails'),\n  updateUID: (uid: string) => set(produce(draft => {\n    draft.userData.uid = uid;\n  }), 'updateUID'),\n  clearAccountDetails: () => set(produce(draft => {\n    delete draft.userData[\"accountDetails\"];\n    delete draft.userData[\"uid\"];\n  }), 'clearAccountDetails'),\n  toggleBackgroundFlag: () => set(produce(draft => {\n    const value = draft.userData.settings.backgroundFlag === false;\n\n    draft.userData.settings.backgroundFlag = value;\n    updatePropertyDB({ 'settings.backgroundFlag': value });\n  }), 'toggleBackgroundFlag'),\n  toggleAutoChangeBackgroundFlag: () => set(produce(draft => {\n    const value = draft.userData.settings.autoChangeBackgroundFlag === false;\n\n    draft.userData.settings.autoChangeBackgroundFlag = value;\n    updatePropertyDB({ 'settings.autoChangeBackgroundFlag': value });\n  }), 'toggleAutoChangeBackgroundFlag'),\n  togglePlayDoaaFlag: () => set(produce(draft => {\n    draft.userData.settings.playDoaaFlag = (draft.userData.settings.playDoaaFlag === false);\n  }), 'togglePlayDoaaFlag'),\n  toggleDateLocale: () => set(produce(draft => {\n    let result = _AR_LOCALE;\n\n    if (draft.userData.selectedDateLocale === _AR_LOCALE) {\n      result = _EN_LOCALE;\n    }\n    draft.userData.selectedDateLocale = result;\n  }), 'toggleDateLocale'),\n  updateSelectedSolidColor: (value) => set(produce(draft => {\n    draft.userData.settings.selectedSolidColor = value;\n    updatePropertyDB({ 'settings.selectedSolidColor': value });\n  }), 'updateSelectedSolidColor'),\n  updateLocation: (data) => set(produce(draft => {\n    draft.userData.location = data;\n  }), 'updateLocation'),\n  updateSelectedAdhanVoice: (adhanVoice) => set(produce(draft => {\n    draft.userData.selectedAdhanVoice = adhanVoice;\n  }), 'updateSelectedAdhanVoice'),\n  updatePrayerTimesObject: (prayerTimesObject) => set(produce(draft => {\n    draft.userData.prayerTimesObject = prayerTimesObject;\n  }), 'updatePrayerTimesObject'),\n  updateAzkarDayNightTracker: (index, type) => set(produce(draft => {\n    if (index === undefined || !draft.userData.azkarDayNightTracker) {\n      draft.userData.azkarDayNightTracker = {\n        day: [],\n        night: []\n      };\n    }\n    if (index !== undefined && type) {\n      if (!draft.userData.azkarDayNightTracker[type][index]) {\n        draft.userData.azkarDayNightTracker[type][index] = 1;\n      }\n      else {\n        draft.userData.azkarDayNightTracker[type][index] += 1;\n      }\n    }\n  }), 'updateAzkarDayNightTracker'),\n  updateAzkarDayNightExpire: (azkarDayNightExpire) => set(produce(draft => {\n    draft.userData.azkarDayNightExpire = azkarDayNightExpire;\n  }), 'updateAzkarDayNightExpire'),\n  updateAudioControls: (key, value) => set(produce(draft => {\n    draft.userData[key] = value;\n  }), 'updateAudioControls'),\n  addQuickLink: (name, domain) => set(produce(draft => {\n    if (!draft.userData.quickLinksArray) {\n      draft.userData.quickLinksArray = [];\n    }\n\n    draft.userData.quickLinksArray.push({ name, domain });\n  }), 'addQuickLink'),\n  deleteQuickLink: (index) => set(produce(draft => {\n    draft.userData.quickLinksArray.splice(index, 1);\n  }), 'deleteQuickLink'),\n}));\n\n//todo untrack more data\n//todo unit testing this after release\n","import React from 'react';\nimport { Text, TextProps } from '@chakra-ui/react'\n\nimport { useStore } from '../../store'\nimport { _AR } from \"../../utils/constants\";\n\ntype CustomTextProps = {\n  children?: {};\n  hasArabic?: boolean;\n  forceArabicMode?: boolean;\n  isVerse?: boolean;\n};\n\nconst CustomText = ({ children, hasArabic, forceArabicMode, isVerse, ...props }: TextProps & CustomTextProps) => {\n  const selectedLanguageKey = useStore((store: AppState) => store.userData.settings.selectedLanguageKey);\n\n  const getProps = () => {\n    if (isVerse) {\n      return ({\n        fontFamily: 'var(--verse-font-family)',\n        pt: 1,\n        dir: 'rtl'\n      })\n    }\n    else if (forceArabicMode || (hasArabic && (selectedLanguageKey === _AR))) {\n      return ({\n        fontFamily: 'var(--ar-font-family)',\n        pt: 1,\n        dir: 'rtl'\n      })\n    }\n\n    return {};\n  };\n\n  return (\n    <Text {...getProps()}\n          {...props}>\n      {children}\n    </Text>\n  );\n};\n\nexport default CustomText;\n","/* istanbul ignore file */\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/functions';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyC4Zs-Y7WKURp8idQDrC4JcCYvlcTt64Ck',\n  authDomain: 'quran-tab.firebaseapp.com',\n  databaseURL: 'https://quran-tab.firebaseio.com',\n  projectId: 'quran-tab',\n  storageBucket: 'quran-tab.appspot.com',\n  messagingSenderId: '993517777595',\n  appId: '1:993517777595:web:649ba3a714687e8656af9e',\n});\n\nfirebase.firestore()\n        .enablePersistence({ synchronizeTabs: true })\n        .catch((err) => {\n          if (err.code === 'failed-precondition') {\n            /*eslint-disable-next-line*/\n            console.error('firebase failed-precondition error', err);\n          }\n          else if (err.code === 'unimplemented') {\n            /*eslint-disable-next-line*/\n            console.error('firebase unimplemented error', err);\n          }\n        });\n\nexport const auth = firebaseApp ? firebase.auth() : undefined;\nexport const db = firebaseApp ? firebase.firestore() : undefined;\nexport const functions = firebaseApp ? firebase.functions() : undefined;\n","import React from 'react';\nimport {\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalFooter,\n  ModalCloseButton,\n  ModalContent,\n  ModalOverlay,\n  ModalProps,\n} from \"@chakra-ui/react\";\n\nimport './CustomModal.styles.scss';\n\ntype CustomModalProps = {\n  header?: string | {};\n  className?: string;\n  children: {};\n  size?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"full\";\n  footer?: React.ReactNode;\n  isScrollInside?: boolean;\n}\n\nconst CustomModal = ({\n                       header,\n                       className,\n                       children,\n                       size,\n                       footer,\n                       isScrollInside,\n                       ...props\n                     }: CustomModalProps & ModalProps) => {\n  return (\n    <Modal {...size && { size }}\n           {...isScrollInside && { scrollBehavior: \"inside\" }}\n           {...props}>\n      <ModalOverlay />\n      <ModalContent className={className}>\n        {header && <ModalHeader textAlign=\"center\"\n                                borderBottomWidth=\"1px\">\n          {header}\n        </ModalHeader>}\n        <ModalCloseButton zIndex={2} />\n        <ModalBody>\n          {children}\n        </ModalBody>\n        {footer && <ModalFooter>\n          {footer}\n        </ModalFooter>}\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default CustomModal;\n","import dayjs from 'dayjs'\n\nexport default (withTime?: boolean) => {\n  if (withTime) {\n    return dayjs().format('DD-MM-YYYY HH');\n  }\n\n  return dayjs().format('DD-MM-YYYY');\n}\n","import { _BACKGROUND, _CONTACT, _GENERAL, _HOTKEYS, _PRAYER, _TODO, _VERSE, _WHATSNEW } from '../utils/constants';\n\nexport default {\n  ar: 'العربية',\n  en: 'English',\n  language: 'اللغة',\n  darkTheme: 'التصميم الغامق',\n  weather: 'الطقس',\n  weatherCFlag: 'الطقس - سيلزيوس',\n  date: 'التاريخ',\n  clock: 'الساعة',\n  clock24: 'نظام الساعة ٢٤',\n  favourites: 'التفضيلات',\n  prayerTimes: 'مواعيد الصلاة',\n  addToFavourites: 'أضف إلي المفضلة',\n  favouritesEmpty: 'قائمة التفضيلات فارغة',\n  [_GENERAL]: 'عام',\n  [_VERSE]: 'إعدادت الأية',\n  [_PRAYER]: 'إعدادات الصلاة',\n  [_BACKGROUND]: 'إعدادات الخلفية',\n  [_TODO]: 'قائمة المهام',\n  [_WHATSNEW]: 'ما الجديد',\n  [_HOTKEYS]: 'إختصارات',\n  [_CONTACT]: 'تواصل معنا',\n  twitter: 'تويتر',\n  facebook: 'فيسبوك',\n  email: 'البريد الإلكترونى',\n  previousVerse: 'الأية السابقة',\n  nextVerse: 'الأية التالية',\n  bookmarkVerse: 'أضف إلى المفضلة',\n  decreaseGoalsNumber: 'تقليل عدد الأهداف',\n  playPauseAudio: 'تشغيل/إيقاف الصوت',\n  showTafseer: 'إظهار التفسير',\n  tafseer: 'التفسير',\n  todo: 'قائمة المهام',\n  showCompletedTodo: 'إظهار المهام المنتهية',\n  enableTodoFocus: 'تفعيل خاصية التركيز',\n  autoSwitchVerse: 'التغيير التلقائي للأية',\n  randomVerse: 'أية بشكل عشوائي',\n  translation: 'الترجمة',\n  dailyGoal: 'الورد اليومي',\n  daylightSavingTime: 'التوقيت الصيفي',\n  calculationMethod: 'نظام الحساب',\n  calculationMethodMwl: 'رابطة العالم الإسلامي',\n  calculationMethodIsna: 'الجمعية الإسلامية لأمريكا الشمالية',\n  calculationMethodEgypt: 'الهيئة المصرية العامة للمساحة',\n  calculationMethodMakkah: 'جامعة أم القرى',\n  calculationMethodKarachi: 'جامعة العلوم الإسلامية بكراتشي',\n  calculationMethodDubai: 'دبي',\n  calculationMethodQatar: 'قطر',\n  calculationMethodKuwait: 'الكويت',\n  calculationMethodMoonsightingCommittee: 'لجنة الهلال',\n  calculationMethodSingapore: 'سنغافورة',\n  calculationMethodTurkey: 'تركيا',\n  calculationMethodTehran: 'طهران',\n  adjustPrayerTimes: 'تعديل مواعيد الصلاة',\n  fajr: 'الفجر',\n  sunrise: 'الشروق',\n  dhuhr: 'الظهر',\n  jumaa: 'الجمعة',\n  asr: 'العصر',\n  maghrib: 'المغرب',\n  isha: 'العشاء',\n  dailyGoalVerses: 'عدد الأيات اليومية',\n  reciters: 'القراء',\n  recitersList: 'قائمة القراء',\n  previous: 'السابق',\n  next: 'التالي',\n  muyassar: 'التفسير الميسر',\n  jalalayn: 'تفسير الجلالين',\n  showVerse: 'إظهار الأية',\n  showTranslation: 'إظهار الترجمة',\n  verseAudioError: 'للأسف لم نستطع تشغيل المقطع الصوتي. من فضلك تأكد من إتصالك بالإنترنت.',\n  fetchError: 'للأسف لم نستطع تحميل {0}. من فضلك تأكد من إتصالك بالإنترنت.',\n  changeVerse: 'تغيير الأية',\n  apply: 'تطبيق',\n  add: 'إضافة',\n  login: 'تسجيل الدخول',\n  logout: 'تسجيل الخروج',\n  whoAmI: \"إسمي محمد أبوسريع. أعمل بمجال البرمجة وأحاول أن أساهم في إثراء المجتمع الإسلامي عن طريق تطوير برامج مفيده مثل:\",\n  findMeHere: \"يمكنك أن تجدني هنا:\",\n  supportMe: \"العمل علي هذه البرامج يستغرق الكثير من الوقت والمجهود بدءا من تحضير الأفكار وتنفيذها بأفضل شكل ممكن ثم التأكد من عملها بشكل صحيح وتجربتها بشكل كافي قبل إطلاقها. إذا أعجبك البرنامج وأردت رؤية المزيد من هذه البرامج المفيده والمزيد من التحديثات ومشاركة الثواب, يمكنك دعمي من خلال هذه الروابط:\",\n  translations: 'الترجمات',\n  translationsList: 'قائمة الترجمات',\n  warning: \"تنبية\",\n  QT_page: \"صفحة تواصل قرأن تاب:\",\n  quickLinks: 'روابط سريعة',\n  chromeTab: 'صفحة كروم',\n  apps: 'التطبيقات',\n  natureBackgrounds: 'خلفيات مناظر طبيعية',\n  autoChangeBackground: 'التغيير التلقائي للخلفيات',\n  loadNewBackground: 'تحميل خلفية جديدة',\n  selectedSolidColor: 'درجة اللون',\n  continuesPlayingVerse: 'التشغيل المستمر للأيات',\n  chooseLocation: 'إختر موقعك',\n  selectCountry: 'إختر البلد',\n  selectCity: 'إختر المدينة',\n  country: \"البلد\",\n  city: \"المدينة\",\n  'no-audio': 'صامت',\n  'adhan-abdulbasit-abdusamad': 'عبد الباسط عبد الصمد',\n  'adhan-abul-ainain-shuaisha': 'أبو العينين شعيشع',\n  'adhan-ali-ibn-ahmad-mala': 'علي بن أحمد ملا',\n  'adhan-mahmoud-ali-al-banna': 'محمود علي البنا',\n  'adhan-muhammad-refaat': 'محمد رفعت',\n  'adhan-mustafa-ismail': 'مصطفي إسماعيل',\n  'adhan-nasser-al-qatami': 'ناصر القطامي',\n  adhanVoice: \"المؤذن\",\n  selectAdhanVoice: 'إختر المؤذن',\n  azkarSabahMassa: \"أذكار الصباح والمساء\",\n  azkarSabah: 'أذكار الصباح',\n  azkarMassa: 'أذكار المساء',\n  repetition: 'عدد التكرارات: ',\n  playDoaa: 'تشغيل دعاء بعد الأذان',\n  adhanAudioLevel: 'مستوي صوت الأذان',\n  verseAudioLevel: 'مستوي صوت الأية',\n  adhkar: 'أذكار وأدعية 🤲',\n  quranicDoaa: 'أدعية قرآنية',\n  addLink: \"إضافة رابط\",\n  name: \"الإسم\",\n  link: \"الرابط\",\n  addLinkSuccess: \"تم إضافة الرابط بنجاح\",\n  \"ar.abdulbasitmurattal\": \"عبد الباسط عبد الصمد المرتل\",\n  \"ar.abdullahbasfar\": \"عبد الله بصفر\",\n  \"ar.abdurrahmaansudais\": \"عبدالرحمن السديس\",\n  \"ar.abdulsamad\": \"عبدالباسط عبدالصمد\",\n  \"ar.shaatree\": \"أبو بكر الشاطري\",\n  \"ar.ahmedajamy\": \"أحمد بن علي العجمي\",\n  \"ar.alafasy\": \"مشاري العفاسي\",\n  \"ar.hanirifai\": \"هاني الرفاعي\",\n  \"ar.husary\": \"محمود خليل الحصري\",\n  \"ar.husarymujawwad\": \"محمود خليل الحصري (المجود)\",\n  \"ar.hudhaify\": \"علي بن عبدالرحمن الحذيفي\",\n  \"ar.ibrahimakhbar\": \"إبراهيم الأخضر\",\n  \"ar.mahermuaiqly\": \"ماهر المعيقلي\",\n  \"ar.minshawi\": \"محمد صديق المنشاوي\",\n  \"ar.minshawimujawwad\": \"محمد صديق المنشاوي (المجود)\",\n  \"ar.muhammadayyoub\": \"محمد أيوب\",\n  \"ar.muhammadjibreel\": \"محمد جبريل\",\n  \"ar.saoodshuraym\": \"سعود الشريم\",\n  \"ar.parhizgar\": \"شهریار پرهیزگار\",\n  \"ar.aymanswoaid\": \"أيمن سويد\",\n  \"nasser_alqatami\": \"ناصر القطامي\",\n  \"yasser_aldossary\": \"ياسر الدوسري\",\n  juz: \"جزء\",\n  hizb: \"حزب\",\n};\n","export default __webpack_public_path__ + \"static/media/bg.8106a0ae.jpg\";","import { _BACKGROUND, _CONTACT, _GENERAL, _HOTKEYS, _PRAYER, _TODO, _VERSE, _WHATSNEW } from '../utils/constants';\n\nexport default {\n  ar: 'العربية',\n  en: 'English',\n  language: 'Language',\n  darkTheme: 'Dark Theme',\n  weather: 'Weather',\n  weatherCFlag: 'Weather Celsius',\n  date: 'Date',\n  clock: 'Clock',\n  clock24: 'Clock 24',\n  favourites: 'Favourites',\n  prayerTimes: 'Prayer Times',\n  addToFavourites: 'Add to favourites',\n  favouritesEmpty: 'Favourite list is empty',\n  [_GENERAL]: 'General',\n  [_VERSE]: 'Verse settings',\n  [_PRAYER]: 'Prayer settings',\n  [_BACKGROUND]: 'Background settings',\n  [_TODO]: 'Todo',\n  [_WHATSNEW]: 'What\\'s new',\n  [_HOTKEYS]: 'Hot keys',\n  [_CONTACT]: 'Contact',\n  twitter: 'Twitter',\n  facebook: 'Facebook',\n  email: 'Email',\n  previousVerse: 'Previous Verse',\n  nextVerse: 'Next Verse',\n  bookmarkVerse: 'Bookmark Verse',\n  decreaseGoalsNumber: 'Decrease Goals Number',\n  playPauseAudio: 'Play/Pause Audio',\n  showTafseer: 'Show Tafseer',\n  tafseer: 'Tafseer',\n  todo: 'Todo',\n  showCompletedTodo: 'Show Completed tasks',\n  enableTodoFocus: 'Enable Todo Focus',\n  autoSwitchVerse: 'Auto Switch Verse',\n  randomVerse: 'Random Verse',\n  translation: 'Translation',\n  dailyGoal: 'Daily Goal',\n  daylightSavingTime: 'Daylight Saving Time',\n  calculationMethod: 'Calculation Method',\n  calculationMethodMwl: 'Muslim World League',\n  calculationMethodIsna: 'Islamic Society of North America',\n  calculationMethodEgypt: 'Egyptian General Authority of Survey',\n  calculationMethodMakkah: 'Umm al-Qura University, Makkah',\n  calculationMethodKarachi: 'University of Islamic Sciences, Karachi',\n  calculationMethodDubai: 'Dubai',\n  calculationMethodQatar: 'Qatar',\n  calculationMethodKuwait: 'Kuwait',\n  calculationMethodMoonsightingCommittee: 'Moonsighting Committee',\n  calculationMethodSingapore: 'Singapore',\n  calculationMethodTurkey: 'Turkey',\n  calculationMethodTehran: 'Tehran',\n  adjustPrayerTimes: 'Adjust Prayer Times',\n  fajr: 'Fajr',\n  sunrise: 'Sunrise',\n  dhuhr: 'Dhuhr',\n  jumaa: 'Jumaa',\n  asr: 'Asr',\n  maghrib: 'Maghrib',\n  isha: 'Isha',\n  dailyGoalVerses: 'Daily Goal Verses',\n  reciters: 'Reciters',\n  recitersList: 'Reciters List',\n  previous: 'Previous',\n  next: 'Next',\n  muyassar: 'Muyassar',\n  jalalayn: 'Jalalayn',\n  showVerse: 'Show Verse',\n  showTranslation: 'Show Translation',\n  verseAudioError: 'Sorry, We couldn\\'t load the sound. Please check you internet connection.',\n  fetchError: \"Sorry, We couldn't load {0}. Please check you internet connection.\",\n  changeVerse: 'Change Verse',\n  apply: 'Apply',\n  add: 'Add',\n  login: 'Login',\n  logout: 'Logout',\n  whoAmI: `My name is Mohamed Abusrea. I'm a passionate developer who's trying to contribute\n   to the Muslim community by creating useful apps like:`,\n  findMeHere: \"You can find me here:\",\n  supportMe: \"Working on those apps takes a lot of time starting from getting the idea, developing it, and finally, testing it well before adding it to the next release. if you want to see more apps like Quran Tab and share the Thawab, you can support me from here:\",\n  translations: 'Translation',\n  translationsList: 'Translation List',\n  warning: \"Warning\",\n  QT_page: \"Quran Tab's page:\",\n  quickLinks: 'Quick Links',\n  chromeTab: 'Chrome Tab',\n  apps: 'Apps',\n  natureBackgrounds: 'Nature Backgrounds',\n  autoChangeBackground: 'Auto Change Background',\n  loadNewBackground: 'Load New Background',\n  selectedSolidColor: 'Selected solid color',\n  continuesPlayingVerse: 'Continues Playing Verse',\n  chooseLocation: 'Choose your location',\n  selectCountry: 'Select your country',\n  selectCity: 'Select your city',\n  country: \"Country\",\n  city: \"City\",\n  'no-audio': 'Silent',\n  'adhan-abdulbasit-abdusamad': 'Abdulbasit Abdusamad',\n  'adhan-abul-ainain-shuaisha': 'Abul Ainain Shuaisha',\n  'adhan-ali-ibn-ahmad-mala': 'Ali Ibn Ahmad Mala',\n  'adhan-mahmoud-ali-al-banna': 'Mahmoud Ali Al Banna',\n  'adhan-muhammad-refaat': 'Muhammad Refaat',\n  'adhan-mustafa-ismail': 'Mustafa Ismail',\n  'adhan-nasser-al-qatami': 'Nasser Al Qatami',\n  adhanVoice: \"Voice of Adhan\",\n  selectAdhanVoice: 'Select a voice',\n  azkarSabahMassa: \"Morning and Evening Adhkar\",\n  azkarSabah: 'Morning Adhkar',\n  azkarMassa: 'Evening Adhkar',\n  repetition: 'repeat: ',\n  playDoaa: 'Play Doaa After Adhan',\n  adhanAudioLevel: 'Adhan Audio Level',\n  verseAudioLevel: 'Verse Audio Level',\n  adhkar: 'Adhkar 🤲',\n  quranicDoaa: 'Doaa from The Quran',\n  addLink: \"Add Link\",\n  name: \"Name\",\n  link: \"Link\",\n  addLinkSuccess: \"Link has been added successfully\",\n  \"ar.abdulbasitmurattal\": \"Abdul Basit\",\n  \"ar.abdullahbasfar\": \"Abdullah Basfar\",\n  \"ar.abdurrahmaansudais\": \"Abdurrahmaan As-Sudais\",\n  \"ar.abdulsamad\": \"Abdul Samad\",\n  \"ar.shaatree\": \"Abu Bakr Ash-Shaatree\",\n  \"ar.ahmedajamy\": \"Ahmed ibn Ali al-Ajamy\",\n  \"ar.alafasy\": \"Alafasy\",\n  \"ar.hanirifai\": \"Hani Rifai\",\n  \"ar.husary\": \"Husary\",\n  \"ar.husarymujawwad\": \"Husary (Mujawwad)\",\n  \"ar.hudhaify\": \"Hudhaify\",\n  \"ar.ibrahimakhbar\": \"Ibrahim Akhdar\",\n  \"ar.mahermuaiqly\": \"Maher Al Muaiqly\",\n  \"ar.minshawi\": \"Minshawi\",\n  \"ar.minshawimujawwad\": \"Minshawy (Mujawwad)\",\n  \"ar.muhammadayyoub\": \"Muhammad Ayyoub\",\n  \"ar.muhammadjibreel\": \"Muhammad Jibreel\",\n  \"ar.saoodshuraym\": \"Saood bin Ibraaheem Ash-Shuraym\",\n  \"ar.parhizgar\": \"Parhizgar\",\n  \"ar.aymanswoaid\": \"Ayman Sowaid\",\n  \"nasser_alqatami\": \"Nasser Al Qatami\",\n  \"yasser_aldossary\": \"Yassir Al Dosari\",\n  juz: \"Juz\",\n  hizb: \"Hizb\",\n};\n","import strings from '../locales/index';\n\nexport default (languageKey: string): void => {\n  document.documentElement.style.cssText = `--default-font-family: var(--${languageKey}-font-family);--default-direction: var(--direction-${languageKey})`;\n  strings.setLanguage(languageKey);\n};\n","import { functions } from '../firebase.js';\n\nexport default async (): Promise<{ data?: any }> => {\n  if (functions) {\n    const getNewBackground = functions.httpsCallable('getNewBackground');\n    return getNewBackground();\n  }\n\n  return {};\n};\n","import _get from \"lodash/get\";\nimport { useStore } from \"../store\";\nimport getDateString from \"./getDateString\";\nimport getNewBackground from \"./getNewBackground\";\n\nexport default () => {\n  const backgroundIndex = useStore(state => _get(state.userData, 'backgroundData.backgroundIndex', 0));\n\n  const updateBackgroundData = useStore(state => state.updateBackgroundData);\n\n  const setNewBackground = async (backgroundList: []) => {\n    const newBackgroundExpire = getDateString();\n    const photoLength = backgroundList.length;\n    const nextBackgroundIndex = (backgroundIndex < photoLength - 1) ? (backgroundIndex + 1) : 0;\n    const dpr = window.devicePixelRatio;\n    const width = window.innerWidth;\n    const bgPath = _get(backgroundList[nextBackgroundIndex], `urls.raw`);\n\n    updateBackgroundData({\n      backgroundUrl: bgPath && `${bgPath}&w=${width}&dpr=${dpr}`,\n      username: _get(backgroundList[nextBackgroundIndex], 'user.name'),\n      profile_url: _get(backgroundList[nextBackgroundIndex], 'user.links.html'),\n      backgroundIndex: nextBackgroundIndex,\n      backgroundExpire: newBackgroundExpire,\n      backgroundList: backgroundList,\n    });\n  }\n\n  const fetchNewBackground = async () => {\n    const result = await getNewBackground();\n    const resultArray = result.data;\n\n    await setNewBackground(resultArray);\n  }\n\n  return ({ fetchNewBackground, setNewBackground });\n};\n","import React, { useState, useEffect } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport * as firebase from 'firebase/app';\nimport _get from 'lodash/get';\nimport { Button, useDisclosure } from '@chakra-ui/react'\n\nimport { auth, db } from '../../firebase.js';\nimport { useStore } from '../../store';\nimport strings from '../../locales/index';\nimport CustomModal from '../CustomModal/CustomModal.view';\nimport { _INITIAL_USER_DATA, _EN, _AR } from '../../utils/constants';\nimport changeLanguage from '../../utils/changeLanguage';\nimport getDateString from \"../../utils/getDateString\";\nimport CustomText from \"../CustomText/CustomText.view\";\nimport useBackgroundFunctions from '../../utils/useBackgroundFunctions';\n\nimport './Login.styles.scss';\n\nconst uiConfig = { // Configure FirebaseUI.\n  signInFlow: 'popup',\n  credentialHelper: 'none',\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.EMAIL_PASSWORD_SIGN_IN_METHOD,\n  ],\n};\n\nconst Login = () => {\n  const { fetchNewBackground } = useBackgroundFunctions();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  const userData = useStore(state => state.userData);\n\n  const updateAppVersion = useStore(state => state.updateAppVersion);\n\n  const updateCheckedChangeLog = useStore(state => state.updateCheckedChangeLog);\n\n  const updateAccountDetails = useStore(state => state.updateAccountDetails);\n\n  const updateUID = useStore(state => state.updateUID);\n\n  const clearAccountDetails = useStore(state => state.clearAccountDetails);\n\n  const setState = useStore(state => state.setUserData);\n\n  const initUserData = async (): Promise<void> => {\n    const user = auth && auth.currentUser;\n    let data = { ...userData };\n\n    if (user && db) { //Get the data from the database and apply the changes\n      const accountDetails = {\n        email: user.email,\n        displayName: user.displayName,\n      };\n      const docRef = db.collection('users').doc(user.uid);\n      const doc = await docRef.get();\n\n      if (!doc.exists) { //user don't have data in db yet so we will create a new record for him\n        docRef.set({\n          ...data,\n          accountDetails,\n        })\n          // eslint-disable-next-line no-console\n          .then(() => console.info('Document successfully written!'))\n          .catch((error: object) => console.error('Error writing document: ', error));\n      }\n      else { //user has data in db so we gonna get this data and use it\n        data = {\n          ...userData,\n          ...doc.data(),\n        };\n        const randomVerseFlag = _get(data, 'settings.randomVerseFlag');\n\n        if (randomVerseFlag) {//don't sync verse if randomVerseFlag is true\n          setState({\n            ...data,\n            quranData: { ...userData.quranData },\n          });\n        }\n        else {\n          setState(data); //Data is auto saved in the localStorage by the useEffect function\n        }\n\n        if (!data.accountDetails) {\n          updateAccountDetails(accountDetails);\n        }\n      }\n\n      if (!userData.uid) {\n        updateUID(user.uid);\n      }\n    }\n\n    //Apply arabic language\n    const selectedLanguageKey = _get(data, 'settings.selectedLanguageKey', _EN);\n\n    if (selectedLanguageKey === _AR) {\n      changeLanguage(selectedLanguageKey);\n    }\n\n    if (_INITIAL_USER_DATA.version !== data.version) { //Check if there's a new version\n      updateAppVersion(_INITIAL_USER_DATA.version);\n      updateCheckedChangeLog(false);\n    }\n\n    const shouldLoadNewBackground = _get(data, 'settings.backgroundFlag', true) && _get(data, 'settings.autoChangeBackgroundFlag', true);\n\n    if (shouldLoadNewBackground) {\n      await generateNewBackground(_get(data, 'backgroundData.backgroundExpire'));\n    }\n  };\n\n  useEffect(() => {\n    if (userData) {\n      localStorage.setItem('userData', JSON.stringify(userData));\n    }\n  }, [userData]);\n\n  useEffect(() => {\n    initUserData();\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [isSignedIn]);\n\n  useEffect(() => {\n    let unregisterAuthObserver: () => void;\n\n    if (auth) {\n      unregisterAuthObserver = auth.onAuthStateChanged((user) => setIsSignedIn(!!user));\n      return () => unregisterAuthObserver();\n    }\n  }, []);\n\n  const toggleModalFlag = (): void => {\n    if (isSignedIn) {\n      const result = global.confirm('Are you sure you want to logout. The app wil stop syncing your data');\n\n      if (result && auth) {\n        auth.signOut();\n        setIsSignedIn(false);\n        clearAccountDetails();\n      }\n    }\n    else {\n      onOpen();\n    }\n  };\n\n  const generateNewBackground = async (backgroundExpire: string): Promise<void> => {\n    const newBackgroundExpire = getDateString();\n\n    if (backgroundExpire !== newBackgroundExpire) {\n      await fetchNewBackground();\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <Button variant=\"ghost\"\n              onClick={toggleModalFlag}>\n        <CustomText hasArabic>\n          {!isSignedIn ? strings.login : strings.logout}\n        </CustomText>\n      </Button>\n\n      <CustomModal\n        isOpen={isOpen && !isSignedIn}\n        header={strings.login}\n        onClose={onClose}\n        size=\"xs\"\n        className=\"element-has-ar\"\n      >\n        <StyledFirebaseAuth\n          uiConfig={uiConfig}\n          firebaseAuth={auth}\n        />\n      </CustomModal>\n    </div>\n  );\n};\n\nexport default Login;\n","var map = {\n\t\"./AD.json\": 400,\n\t\"./AE.json\": 401,\n\t\"./AF.json\": 402,\n\t\"./AG.json\": 403,\n\t\"./AI.json\": 404,\n\t\"./AL.json\": 405,\n\t\"./AM.json\": 406,\n\t\"./AO.json\": 407,\n\t\"./AQ.json\": 408,\n\t\"./AR.json\": 409,\n\t\"./AS.json\": 410,\n\t\"./AT.json\": 411,\n\t\"./AU.json\": 412,\n\t\"./AW.json\": 413,\n\t\"./AX.json\": 414,\n\t\"./AZ.json\": 415,\n\t\"./BA.json\": 416,\n\t\"./BB.json\": 417,\n\t\"./BD.json\": 418,\n\t\"./BE.json\": 419,\n\t\"./BF.json\": 420,\n\t\"./BG.json\": 421,\n\t\"./BH.json\": 422,\n\t\"./BI.json\": 423,\n\t\"./BJ.json\": 424,\n\t\"./BL.json\": 425,\n\t\"./BM.json\": 426,\n\t\"./BN.json\": 427,\n\t\"./BO.json\": 428,\n\t\"./BQ.json\": 429,\n\t\"./BR.json\": 430,\n\t\"./BS.json\": 431,\n\t\"./BT.json\": 432,\n\t\"./BV.json\": 433,\n\t\"./BW.json\": 434,\n\t\"./BY.json\": 435,\n\t\"./BZ.json\": 436,\n\t\"./CA.json\": 437,\n\t\"./CC.json\": 438,\n\t\"./CD.json\": 439,\n\t\"./CF.json\": 440,\n\t\"./CG.json\": 441,\n\t\"./CH.json\": 442,\n\t\"./CI.json\": 443,\n\t\"./CK.json\": 444,\n\t\"./CL.json\": 445,\n\t\"./CM.json\": 446,\n\t\"./CN.json\": 447,\n\t\"./CO.json\": 448,\n\t\"./CR.json\": 449,\n\t\"./CU.json\": 450,\n\t\"./CV.json\": 451,\n\t\"./CW.json\": 452,\n\t\"./CX.json\": 453,\n\t\"./CY.json\": 454,\n\t\"./CZ.json\": 455,\n\t\"./DE.json\": 456,\n\t\"./DJ.json\": 457,\n\t\"./DK.json\": 458,\n\t\"./DM.json\": 459,\n\t\"./DO.json\": 460,\n\t\"./DZ.json\": 461,\n\t\"./EC.json\": 462,\n\t\"./EE.json\": 463,\n\t\"./EG.json\": 464,\n\t\"./EH.json\": 465,\n\t\"./ER.json\": 466,\n\t\"./ES.json\": 467,\n\t\"./ET.json\": 468,\n\t\"./FI.json\": 469,\n\t\"./FJ.json\": 470,\n\t\"./FK.json\": 471,\n\t\"./FM.json\": 472,\n\t\"./FO.json\": 473,\n\t\"./FR.json\": 474,\n\t\"./GA.json\": 475,\n\t\"./GB.json\": 476,\n\t\"./GD.json\": 477,\n\t\"./GE.json\": 478,\n\t\"./GF.json\": 479,\n\t\"./GG.json\": 480,\n\t\"./GH.json\": 481,\n\t\"./GI.json\": 482,\n\t\"./GL.json\": 483,\n\t\"./GM.json\": 484,\n\t\"./GN.json\": 485,\n\t\"./GP.json\": 486,\n\t\"./GQ.json\": 487,\n\t\"./GR.json\": 488,\n\t\"./GS.json\": 489,\n\t\"./GT.json\": 490,\n\t\"./GU.json\": 491,\n\t\"./GW.json\": 492,\n\t\"./GY.json\": 493,\n\t\"./HK.json\": 494,\n\t\"./HM.json\": 495,\n\t\"./HN.json\": 496,\n\t\"./HR.json\": 497,\n\t\"./HT.json\": 498,\n\t\"./HU.json\": 499,\n\t\"./ID.json\": 500,\n\t\"./IE.json\": 501,\n\t\"./IM.json\": 502,\n\t\"./IN.json\": 503,\n\t\"./IO.json\": 504,\n\t\"./IQ.json\": 505,\n\t\"./IR.json\": 506,\n\t\"./IS.json\": 507,\n\t\"./IT.json\": 508,\n\t\"./JE.json\": 509,\n\t\"./JM.json\": 510,\n\t\"./JO.json\": 511,\n\t\"./JP.json\": 512,\n\t\"./KE.json\": 513,\n\t\"./KG.json\": 514,\n\t\"./KH.json\": 515,\n\t\"./KI.json\": 516,\n\t\"./KM.json\": 517,\n\t\"./KN.json\": 518,\n\t\"./KP.json\": 519,\n\t\"./KR.json\": 520,\n\t\"./KW.json\": 521,\n\t\"./KY.json\": 522,\n\t\"./KZ.json\": 523,\n\t\"./LA.json\": 524,\n\t\"./LB.json\": 525,\n\t\"./LC.json\": 526,\n\t\"./LI.json\": 527,\n\t\"./LK.json\": 528,\n\t\"./LR.json\": 529,\n\t\"./LS.json\": 530,\n\t\"./LT.json\": 531,\n\t\"./LU.json\": 532,\n\t\"./LV.json\": 533,\n\t\"./LY.json\": 534,\n\t\"./MA.json\": 535,\n\t\"./MC.json\": 536,\n\t\"./MD.json\": 537,\n\t\"./ME.json\": 538,\n\t\"./MF.json\": 539,\n\t\"./MG.json\": 540,\n\t\"./MH.json\": 541,\n\t\"./MK.json\": 542,\n\t\"./ML.json\": 543,\n\t\"./MM.json\": 544,\n\t\"./MN.json\": 545,\n\t\"./MO.json\": 546,\n\t\"./MP.json\": 547,\n\t\"./MQ.json\": 548,\n\t\"./MR.json\": 549,\n\t\"./MS.json\": 550,\n\t\"./MT.json\": 551,\n\t\"./MU.json\": 552,\n\t\"./MV.json\": 553,\n\t\"./MW.json\": 554,\n\t\"./MX.json\": 555,\n\t\"./MY.json\": 556,\n\t\"./MZ.json\": 557,\n\t\"./NA.json\": 558,\n\t\"./NC.json\": 559,\n\t\"./NE.json\": 560,\n\t\"./NF.json\": 561,\n\t\"./NG.json\": 562,\n\t\"./NI.json\": 563,\n\t\"./NL.json\": 564,\n\t\"./NO.json\": 565,\n\t\"./NP.json\": 566,\n\t\"./NR.json\": 567,\n\t\"./NU.json\": 568,\n\t\"./NZ.json\": 569,\n\t\"./OM.json\": 570,\n\t\"./PA.json\": 571,\n\t\"./PE.json\": 572,\n\t\"./PF.json\": 573,\n\t\"./PG.json\": 574,\n\t\"./PH.json\": 575,\n\t\"./PK.json\": 576,\n\t\"./PL.json\": 577,\n\t\"./PM.json\": 578,\n\t\"./PN.json\": 579,\n\t\"./PR.json\": 580,\n\t\"./PS.json\": 581,\n\t\"./PT.json\": 582,\n\t\"./PW.json\": 583,\n\t\"./PY.json\": 584,\n\t\"./QA.json\": 585,\n\t\"./RE.json\": 586,\n\t\"./RO.json\": 587,\n\t\"./RS.json\": 588,\n\t\"./RU.json\": 589,\n\t\"./RW.json\": 590,\n\t\"./SA.json\": 591,\n\t\"./SB.json\": 592,\n\t\"./SC.json\": 593,\n\t\"./SD.json\": 594,\n\t\"./SE.json\": 595,\n\t\"./SG.json\": 596,\n\t\"./SH.json\": 597,\n\t\"./SI.json\": 598,\n\t\"./SJ.json\": 599,\n\t\"./SK.json\": 600,\n\t\"./SL.json\": 601,\n\t\"./SM.json\": 602,\n\t\"./SN.json\": 603,\n\t\"./SO.json\": 604,\n\t\"./SR.json\": 605,\n\t\"./SS.json\": 606,\n\t\"./ST.json\": 607,\n\t\"./SV.json\": 608,\n\t\"./SX.json\": 609,\n\t\"./SY.json\": 610,\n\t\"./SZ.json\": 611,\n\t\"./TC.json\": 612,\n\t\"./TD.json\": 613,\n\t\"./TF.json\": 614,\n\t\"./TG.json\": 615,\n\t\"./TH.json\": 616,\n\t\"./TJ.json\": 617,\n\t\"./TK.json\": 618,\n\t\"./TL.json\": 619,\n\t\"./TM.json\": 620,\n\t\"./TN.json\": 621,\n\t\"./TO.json\": 622,\n\t\"./TR.json\": 623,\n\t\"./TT.json\": 624,\n\t\"./TV.json\": 625,\n\t\"./TW.json\": 626,\n\t\"./TZ.json\": 627,\n\t\"./UA.json\": 628,\n\t\"./UG.json\": 629,\n\t\"./UM.json\": 630,\n\t\"./US.json\": 631,\n\t\"./UY.json\": 632,\n\t\"./UZ.json\": 633,\n\t\"./VA.json\": 634,\n\t\"./VC.json\": 635,\n\t\"./VE.json\": 636,\n\t\"./VG.json\": 637,\n\t\"./VI.json\": 638,\n\t\"./VN.json\": 639,\n\t\"./VU.json\": 640,\n\t\"./WF.json\": 641,\n\t\"./WS.json\": 642,\n\t\"./XK.json\": 643,\n\t\"./YE.json\": 644,\n\t\"./YT.json\": 645,\n\t\"./ZA.json\": 646,\n\t\"./ZM.json\": 647,\n\t\"./ZW.json\": 648\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 399;","import { extendTheme } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\"\n\nconst theme = extendTheme({\n  styles: {\n    global: (props) => {\n      return ({\n        body: {\n          fontFamily: \"var(--en-font-family)\",\n          color: mode(\"var(--color-dark1)\", \"var(--color-light1)\")(props),\n        },\n      })\n    },\n  },\n  components: {\n    Tooltip: {\n      baseStyle: {\n        fontSize: \"lg\",\n        fontWeight: \"bold\",\n        paddingTop: \"6px\"\n      }\n    },\n    Button: {\n      variants: {\n        ghost: {\n          _hover: {\n            bg: \"rgba(255,255,255,0.08)\"\n          }\n        }\n      },\n    }\n  }\n});\n\nexport default extendTheme(theme);\n","import React, { useEffect, useState } from 'react';\nimport { _AR, _AR_LOCALE, _EN_LOCALE } from \"../../utils/constants\";\n\nimport './Clock.styles.scss';\n\ntype ClockProps = {\n  is24Flag?: boolean;\n  selectedLanguageKey?: string;\n}\n\nconst Clock = ({ is24Flag, selectedLanguageKey }: ClockProps) => {\n  const [clockFormat, setClockFormat] = useState('00:00');\n\n  let timeoutVar: NodeJS.Timeout;\n\n  useEffect(() => {\n    timeoutVar && clearTimeout(timeoutVar);\n    generateTime();\n\n    return () => clearTimeout(timeoutVar);\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [is24Flag, selectedLanguageKey]);\n\n  const generateTime = () => {\n    const date = new Date();\n    const locale = selectedLanguageKey === _AR ? _AR_LOCALE : _EN_LOCALE;\n    const data = date.toLocaleTimeString(locale, {\n      // @ts-ignore\n      hourCycle: is24Flag ? \"h23\" : \"h12\",\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n\n    setClockFormat(data);\n    timeoutVar = setTimeout(() => generateTime(), 60000);\n  };\n\n  return (\n    <div className=\"Clock element-has-ar\">\n      {clockFormat.split(' ')[0]}\n      {!is24Flag && <span className=\"Clock__text\">{clockFormat.split(' ')[1]}</span>}\n    </div>\n  );\n};\n\nexport default Clock;\n","import * as React from 'react';\nimport shallow from 'zustand/shallow';\nimport Clock from './Clock.view';\nimport { useStore } from '../../store';\n\nconst ClockData = () => {\n  const [is24Flag, clockFlag, selectedLanguageKey] = useStore(state => [\n    state.userData.settings.clock24Flag,\n    state.userData.settings.clockFlag,\n    state.userData.settings.selectedLanguageKey,\n  ], shallow);\n\n  if (!clockFlag) {\n    return null;\n  }\n\n  return <Clock is24Flag={is24Flag}\n                selectedLanguageKey={selectedLanguageKey} />;\n};\n\nexport default ClockData;\n","import React from 'react';\nimport { Tooltip, TooltipProps } from \"@chakra-ui/react\";\n\ntype CustomTooltipProps = {\n  children: {};\n  hasArabic?: boolean;\n  isImmediately?: boolean;\n}\n\nconst arabicProps = {\n  fontFamily: \"var(--ar-font-family)\",\n  dir: 'rtl'\n};\n\nconst CustomTooltip = ({ children, hasArabic, isImmediately, ...props }: CustomTooltipProps & TooltipProps) => {\n  return (\n    <Tooltip label={props.label}\n             aria-label=\"A tooltip\"\n             fontSize=\"sm\"\n             fontWeight=\"medium\"\n             hasArrow\n             {...!isImmediately && { openDelay: 500 }}\n             {...hasArabic && arabicProps}>\n      {children}\n    </Tooltip>\n  );\n};\n\nexport default CustomTooltip;\n","import _get from \"lodash/get\";\nimport { useStore } from \"../store\";\nimport { _AR } from \"./constants\";\n\nexport default () => {\n  const selectedLanguageKey = useStore((state: AppState) => _get(state.userData, 'settings.selectedLanguageKey', 'en'));\n\n  const localizeNumbers = (value: number | string = 0) => {\n    let result = value;\n\n    if (selectedLanguageKey === _AR) {\n      const id = ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];\n      result = (value.toString()).replace(/[0-9]/g, (index: string) => id[+index]);\n    }\n\n    return result;\n  };\n\n  return ({ localizeNumbers });\n};\n","import React, { useEffect } from 'react';\nimport _get from 'lodash/get';\nimport { Box, Button, HStack, Tab, TabList, TabPanel, TabPanels, Tabs } from \"@chakra-ui/react\";\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\nimport CustomText from \"../CustomText/CustomText.view\";\nimport CustomTooltip from \"../CustomTooltip/CustomTooltip.view\";\nimport strings from \"../../locales\";\nimport azkarMassaList from \"./azkar_massa.json\";\nimport azkarSabahList from \"./azkar_sabah.json\";\nimport useLocalizeNumbers from \"../../utils/useLocalizeNumbers\";\nimport getDateString from \"../../utils/getDateString\";\n\nimport './AdhkarDayNight.styles.scss';\n\ntype GenerateFooter = (index: number,\n                       item: {\n                         repeat: number;\n                         bless: string;\n                       }, type: \"day\" | \"night\") => void;\n\ntype AdhkarDayNightModalProps = {\n  azkarDayNightTracker: AppState[\"userData\"][\"azkarDayNightTracker\"];\n  azkarDayNightExpire: AppState[\"userData\"][\"azkarDayNightExpire\"];\n  updateAzkarDayNightTracker: AppState[\"updateAzkarDayNightTracker\"];\n  updateAzkarDayNightExpire: AppState[\"updateAzkarDayNightExpire\"];\n}\n\nconst AdhkarDayNightModal = ({\n                               azkarDayNightTracker,\n                               azkarDayNightExpire,\n                               updateAzkarDayNightTracker,\n                               updateAzkarDayNightExpire,\n                             }: AdhkarDayNightModalProps) => {\n  useEffect(() => {\n    const newAzkarDayNightExpire = getDateString();\n\n    if (azkarDayNightExpire !== newAzkarDayNightExpire) {\n      updateAzkarDayNightTracker();\n      updateAzkarDayNightExpire(newAzkarDayNightExpire);\n    }\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, []);\n\n  const verseStyles = {\n    isVerse: true,\n    fontSize: '22px',\n  }\n\n  const { localizeNumbers } = useLocalizeNumbers();\n\n  const updateTracker = (index: number, repetition: number, type: \"day\" | \"night\") => {\n    if (!azkarDayNightTracker[type][index] || (azkarDayNightTracker[type][index] < repetition)) {\n      updateAzkarDayNightTracker(index, type);\n    }\n  }\n\n  const isTrackCompleted = (currentTrack: number, repetition: number) => {\n    if (currentTrack === repetition) {\n      return ({ colorScheme: \"green\" });\n    }\n  }\n\n  const generateFooter: GenerateFooter = (index, item, type) => {\n    const currentTrackValue = _get(azkarDayNightTracker, `${type}[${index}]`, 0);\n\n    return (\n      <HStack justify=\"center\">\n        {item.bless &&\n        <CustomTooltip label={item.bless}\n                       hasArabic\n                       isImmediately>\n          <Box cursor=\"pointer\" mr=\"5px\">\n            <BsFillInfoCircleFill color=\"var(--color-dark3)\" />\n          </Box>\n        </CustomTooltip>}\n        <Button variant=\"outline\"\n                {...isTrackCompleted(currentTrackValue, item.repeat)}\n                onClick={() => updateTracker(index, item.repeat, type)}>\n          <CustomText hasArabic>\n            {localizeNumbers(currentTrackValue)} / {localizeNumbers(item.repeat)}\n          </CustomText>\n        </Button>\n      </HStack>\n    );\n  }\n\n  return (\n    <Tabs isFitted\n          defaultIndex={1}>\n      <TabList className='AzkarDayNight__tabList'>\n        <Tab>\n          <CustomText hasArabic>{strings.azkarMassa}</CustomText>\n        </Tab>\n        <Tab>\n          <CustomText hasArabic>{strings.azkarSabah}</CustomText>\n        </Tab>\n      </TabList>\n\n      <TabPanels>\n        <TabPanel>\n          {azkarMassaList.map((item, index) =>\n            <div className=\"AzkarDayNight__rowContent\"\n                 key={index}>\n              {item.opening && <CustomText isVerse>{item.opening}</CustomText>}\n              <CustomText className=\"AzkarDayNight__zekr\"\n                          forceArabicMode\n                          {...item.isVerse && verseStyles}>\n                {item.zekr}\n              </CustomText>\n              {generateFooter(index, item, \"night\")}\n            </div>)}\n        </TabPanel>\n        <TabPanel>\n          {azkarSabahList.map((item, index) =>\n            <div className=\"AzkarDayNight__rowContent\" key={index}>\n              {item.opening && <CustomText isVerse>{item.opening}</CustomText>}\n              <CustomText className=\"AzkarDayNight__zekr\"\n                          forceArabicMode\n                          {...item.isVerse && verseStyles}>\n                {item.zekr}\n              </CustomText>\n              {generateFooter(index, item, \"day\")}\n            </div>)}\n        </TabPanel>\n      </TabPanels>\n    </Tabs>\n  );\n}\nexport default AdhkarDayNightModal;\n","import React from 'react';\nimport { useStore } from '../../store';\nimport AdhkarDayNight from './AdhkarDayNight.view';\n\nexport default () => {\n  const azkarDayNightTracker = useStore(state => state.userData.azkarDayNightTracker);\n\n  const azkarDayNightExpire = useStore(state => state.userData.azkarDayNightExpire);\n\n  const updateAzkarDayNightTracker = useStore(state => state.updateAzkarDayNightTracker);\n\n  const updateAzkarDayNightExpire = useStore(state => state.updateAzkarDayNightExpire);\n\n  return (\n    <AdhkarDayNight azkarDayNightTracker={azkarDayNightTracker}\n                    azkarDayNightExpire={azkarDayNightExpire}\n                    updateAzkarDayNightTracker={updateAzkarDayNightTracker}\n                    updateAzkarDayNightExpire={updateAzkarDayNightExpire} />\n  );\n}\n","import React, { ReactElement } from 'react';\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverArrow,\n  PopoverProps\n} from \"@chakra-ui/react\";\n\ntype CustomPopoverProps = {\n  header?: string | {};\n  TriggerComponent: ReactElement;\n  size?: \"sm\" | \"md\" | \"lg\";\n  children: {};\n}\n\nconst getSize = (size: CustomPopoverProps[\"size\"]) => {\n  switch (size) {\n    case \"sm\":\n      return \"10rem\";\n    case \"md\":\n      return \"15rem\";\n    case \"lg\":\n      return \"25rem\";\n  }\n}\n\nconst CustomPopover = ({\n                         TriggerComponent,\n                         header,\n                         size,\n                         children,\n                         ...props\n                       }: CustomPopoverProps & PopoverProps) => {\n  return (\n    <Popover {...props}>\n      <PopoverTrigger>\n        {TriggerComponent}\n      </PopoverTrigger>\n      <PopoverContent maxW={getSize(size)}\n                      m=\"0 auto\">\n        <PopoverArrow />\n        {header && <PopoverHeader>{header}</PopoverHeader>}\n        <PopoverBody maxHeight=\"300px\"\n                     overflow=\"auto\">\n          {children}\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default CustomPopover;\n","import React from 'react';\nimport { Box } from '@chakra-ui/react';\n\nimport doaaList from './DoaaFromQuran.json';\nimport CustomText from \"../../components/CustomText/CustomText.view\";\n\ntype DoaaListObject = { surahName: string, text: string };\n\nconst DoaaFromQuran = () => {\n  const addBottomBorder = (index: number) => {\n    if (index !== doaaList.length - 1) {\n      return { borderBottom: \"1px solid var(--color-border-theme)\" }\n    }\n    return {}\n  }\n\n  return (\n    <div>\n      {\n        doaaList.map((data: DoaaListObject, index) =>\n          <Box key={index}\n               py=\"var(--default-padding)\"\n               {...addBottomBorder(index)}>\n            <CustomText textAlign=\"center\"\n                        fontSize=\"22px\"\n                        isVerse>\n              {data.text}\n            </CustomText>\n            <CustomText textAlign=\"center\"\n                        fontSize=\"18px\"\n                        pt=\"var(--default-padding)\"\n                        isVerse>\n              ﴿ {data.surahName} ﴾\n            </CustomText>\n          </Box>\n        )\n      }\n    </div>\n  );\n}\n\nexport default DoaaFromQuran;\n","import React, { useState } from 'react';\nimport { Button, useDisclosure, VStack, } from \"@chakra-ui/react\";\nimport useDirection from '../../utils/useDirection';\n\nimport CustomModal from \"../CustomModal/CustomModal.view\";\nimport CustomText from \"../CustomText/CustomText.view\";\nimport strings from \"../../locales\";\nimport AdhkarDayNight from \"../AdhkarDayNight/AdhkarDayNight.index\";\nimport CustomPopover from \"../CustomPopover/CustomPopover.view\";\nimport DoaaFromQuran from \"../DoaaFromQuran/DoaaFromQuran.view\";\n\ntype ModalType = \"adhkarDayNight\" | \"doaaFromQuran\";\n\nconst AzkarDayNight = () => {\n  const { setDirStyle } = useDirection();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [modalType, setModalType] = useState<ModalType>('adhkarDayNight');\n\n  const TextStyles = ({\n    mx: 2,\n    fontSize: \"sm\",\n  });\n\n  const ButtonStyles = () => {\n    return ({\n      variant: \"link\",\n      my: 1,\n      justifyContent: \"left\",\n      width: \"100%\",\n    });\n  };\n\n  const TriggerComponent = () => {\n    return (\n      <Button variant=\"ghost\"\n              color=\"var(--color-light1)\">\n        <CustomText hasArabic>{strings.adhkar}</CustomText>\n      </Button>\n    );\n  }\n\n  const openModal = (type: ModalType) => {\n    setModalType(type)\n    onOpen();\n  }\n\n  return (\n    <div>\n      <CustomPopover TriggerComponent={TriggerComponent()}\n                     size=\"md\"\n                     isLazy>\n        <VStack>\n          <Button whiteSpace=\"pre-wrap\"\n                  {...setDirStyle()}\n                  {...ButtonStyles()}\n                  onClick={() => openModal(\"adhkarDayNight\")}>\n            <CustomText {...TextStyles} hasArabic>\n              {strings.azkarSabahMassa}\n            </CustomText>\n          </Button>\n          <Button whiteSpace=\"pre-wrap\"\n                  {...setDirStyle()}\n                  {...ButtonStyles()}\n                  onClick={() => openModal(\"doaaFromQuran\")}>\n            <CustomText {...TextStyles} hasArabic>\n              {strings.quranicDoaa}\n            </CustomText>\n          </Button>\n        </VStack>\n      </CustomPopover>\n      <CustomModal isOpen={isOpen}\n                   {...(modalType === \"doaaFromQuran\") && {\n                     header: <CustomText hasArabic>{strings.quranicDoaa}</CustomText>\n                   }}\n                   size=\"xl\"\n                   onClose={onClose}\n                   isScrollInside>\n        {modalType === \"adhkarDayNight\" ?\n          <AdhkarDayNight />\n          : <DoaaFromQuran />}\n      </CustomModal>\n    </div>);\n};\n\nexport default AzkarDayNight;\n","import { useStore } from \"../store\";\nimport { _AR } from \"./constants\";\n\nexport default () => {\n  const selectedLanguageKey = useStore(state => state.userData.settings.selectedLanguageKey);\n\n  const setDirStyle = () => {\n    if (selectedLanguageKey === _AR) {\n      return ({ dir: \"rtl\" });\n    }\n    return {};\n  };\n\n  const isRTL = (selectedLanguageKey === _AR);\n\n  return { setDirStyle, isRTL };\n};\n","import React from 'react';\nimport {\n  Button,\n  VStack,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n} from '@chakra-ui/react';\nimport { MdVolumeUp } from 'react-icons/md'\nimport CustomPopover from \"../CustomPopover/CustomPopover.view\";\nimport strings from \"../../locales\";\nimport CustomText from \"../CustomText/CustomText.view\";\n\ntype SliderKey = \"adhanAudioLevel\" | \"verseAudioLevel\";\n\ntype AudioControlsProps = {\n  adhanAudioLevel: AppState[\"userData\"][\"adhanAudioLevel\"];\n  verseAudioLevel: AppState[\"userData\"][\"verseAudioLevel\"];\n  updateAudioControls: AppState[\"updateAudioControls\"];\n};\n\nconst AudioControls = ({ adhanAudioLevel, verseAudioLevel, updateAudioControls }: AudioControlsProps) => {\n  const TriggerComponent = () => {\n    const activeButtonStyles = {\n      bgColor: \"#EDF2F7\",\n      color: \"var(--color-dark1)\"\n    };\n\n    return (\n      <Button bgColor={\"#E2E8F0\"}\n              color=\"var(--color-dark2)\"\n              mx=\"10px\"\n              _hover={activeButtonStyles}\n              _active={activeButtonStyles}>\n        <MdVolumeUp size=\"20px\" />\n      </Button>\n    )\n  }\n\n  const onChangeEnd = (key: SliderKey, value: number) => {\n    updateAudioControls(key, (value / 100));\n  }\n\n  const generateAudioSlider = (key: SliderKey) => {\n    const defaultValue = key === \"adhanAudioLevel\" ? adhanAudioLevel * 100 : verseAudioLevel * 100;\n\n    return (\n      <VStack alignItems=\"flexStart\">\n        <CustomText fontSize=\"sm\"\n                    flexShrink={0}\n                    hasArabic>{strings[key]}:</CustomText>\n        <Slider aria-label={key}\n                step={10}\n                defaultValue={defaultValue}\n                onChangeEnd={value => onChangeEnd(key, value)}>\n          <SliderTrack>\n            <SliderFilledTrack />\n          </SliderTrack>\n          <SliderThumb />\n        </Slider>\n      </VStack>\n    );\n  }\n\n  return (\n    <CustomPopover TriggerComponent={TriggerComponent()}\n                   size=\"md\"\n                   isLazy>\n      <VStack alignItems=\"stretch\" py={\"10px\"}>\n        {generateAudioSlider(\"adhanAudioLevel\")}\n        {generateAudioSlider(\"verseAudioLevel\")}\n      </VStack>\n    </CustomPopover>\n  );\n};\n\nexport default AudioControls;\n","import React from 'react';\nimport { useStore } from \"../../store\";\nimport AudioControls from \"./AudioControls.view\";\n\nexport default () => {\n  const adhanAudioLevel = useStore(state => state.userData.adhanAudioLevel);\n\n  const verseAudioLevel = useStore(state => state.userData.verseAudioLevel);\n\n  const updateAudioControls = useStore(state => state.updateAudioControls);\n\n  return (\n    <AudioControls adhanAudioLevel={adhanAudioLevel ?? 1}\n                   verseAudioLevel={verseAudioLevel ?? 1}\n                   updateAudioControls={updateAudioControls} />\n  );\n};\n","import { useToast } from \"@chakra-ui/react\";\n\ntype ShowToastParams = {\n  description: string;\n  status?: \"success\" | \"error\" | \"warning\" | \"info\";\n}\ntype ShowToast = (arg0: ShowToastParams) => void;\n\nexport default () => {\n  const toast = useToast();\n\n  const showToast: ShowToast = (params) => {\n    toast({\n      description: params.description,\n      status: params.status || \"warning\",\n      duration: 5000,\n      isClosable: true,\n    });\n  };\n\n  return showToast;\n};\n","import React, { useState } from 'react';\nimport { Input, Button, InputGroup, InputLeftAddon } from \"@chakra-ui/react\";\n\nimport CustomText from \"../CustomText/CustomText.view\";\nimport useCustomToast from '../../utils/useCustomToast'\nimport strings from \"../../locales\";\nimport CustomModal from \"../CustomModal/CustomModal.view\";\n\ntype AddLinkFormProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  addQuickLink: AppState[\"addQuickLink\"];\n}\n\nconst AddLinkForm = ({ isOpen, onClose, addQuickLink }: AddLinkFormProps) => {\n  const toast = useCustomToast();\n\n  const [name, setName] = useState('');\n\n  const [isNameValid, setIsNameValid] = useState(true);\n\n  const [domain, setDomain] = useState('');\n\n  const [isDomainValid, setIsDomainValid] = useState(true);\n\n  const saveNewLink = () => {\n    if (name.trim() && domain.trim()) {\n      addQuickLink(name, domain);\n      setName('');\n      setDomain('');\n      onClose();\n      toast({\n        description: strings.addLinkSuccess,\n        status: \"success\"\n      });\n    }\n    else if (!name.trim()) {\n      setIsNameValid(false);\n    }\n    else if (!domain.trim()) {\n      setIsDomainValid(false)\n    }\n  }\n\n  const generateHeader = () => {\n    return <CustomText hasArabic>{strings.addLink}</CustomText>;\n  }\n\n  const generateFooter = () => {\n    return <Button onClick={saveNewLink}>\n      <CustomText hasArabic>{strings.add}</CustomText>\n    </Button>;\n  }\n\n  const inputProps = {\n    isRequired: true,\n    onKeyPress: (e: React.KeyboardEvent<HTMLInputElement>) => (e.key === \"Enter\") && saveNewLink(),\n  }\n\n  return (\n    <CustomModal isOpen={isOpen}\n                 size=\"xs\"\n                 header={generateHeader()}\n                 footer={generateFooter()}\n                 onClose={onClose}>\n      <CustomText my={2} hasArabic>{strings.name}:</CustomText>\n      <Input value={name}\n             isInvalid={!isNameValid}\n             onBlur={() => setIsNameValid(!!name.trim())}\n             onChange={value => setName(value.target.value)}\n             autoFocus\n             {...inputProps} />\n      <CustomText my={2} hasArabic>{strings.link}:</CustomText>\n      <InputGroup size=\"sm\">\n        <InputLeftAddon children=\"https://\" />\n        <Input value={domain}\n               placeholder=\"example.com\"\n               isInvalid={!isDomainValid}\n               onBlur={() => setIsDomainValid(!!domain.trim())}\n               onChange={value => setDomain(value.target.value)}\n               {...inputProps} />\n      </InputGroup>\n    </CustomModal>\n  );\n}\n\nexport default AddLinkForm;\n","import React from 'react';\nimport { useStore } from \"../../store\";\nimport AddLinkForm from \"./AddLinkForm.view\";\n\ntype AddLinkFormProps = {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default ({ isOpen, onClose }: AddLinkFormProps) => {\n  const addQuickLink = useStore(state => state.addQuickLink);\n\n  return <AddLinkForm isOpen={isOpen}\n                      onClose={onClose}\n                      addQuickLink={addQuickLink} />\n};\n","// @ts-ignore\nexport default () => {\n  const check1 = navigator.userAgent.indexOf(\"Edge\");\n  const check2 = navigator.userAgent.indexOf(\"Edg\"); //Note some versions of Edge report user agent as Edg (missing last \"e\")\n\n  return (check1 !== -1) || (check2 !== -1);\n}\n","import React from 'react';\nimport { IconButton, IconButtonProps } from '@chakra-ui/react';\n\nconst CustomIconButton = ({ ...props }: IconButtonProps) => {\n  return <IconButton variant=\"ghost\"\n                     {...props}\n                     fontSize=\"xl\"\n                     color=\"var(--color-light1)\" />\n};\n\nexport default CustomIconButton;\n","import React from 'react';\nimport { Button, VStack, HStack, Link, useDisclosure } from '@chakra-ui/react';\nimport { IoMdApps, IoLogoChrome, IoMdAdd, IoMdClose } from 'react-icons/io';\n\nimport AddLinkForm from '../AddLinkForm/AddLinkForm.index';\nimport { useStore } from \"../../store\";\nimport strings from \"../../locales\";\nimport CustomPopover from \"../CustomPopover/CustomPopover.view\";\nimport { _AR } from \"../../utils/constants\";\nimport CustomText from \"../CustomText/CustomText.view\";\nimport isEdge from \"../../utils/isEdge\";\nimport CustomIconButton from \"../CustomIconButton/CustomIconButton.view\";\n\nimport './QuickLinks.styles.scss'\n\ntype QuickLinksProps = {\n  quickLinksArray: AppState[\"userData\"][\"quickLinksArray\"];\n  deleteQuickLink: AppState[\"deleteQuickLink\"];\n}\n\n\nconst QuickLinks = ({\n                      quickLinksArray,\n                      deleteQuickLink,\n                    }: QuickLinksProps) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const openChromeTab = () => {\n    chrome.tabs.query({}, () => {\n      chrome.tabs.create({ url: \"chrome-search://local-ntp/local-ntp.html\" })\n    });\n  }\n\n  const openChromeApps = () => {\n    chrome.tabs.query({}, () => {\n      chrome.tabs.create({ url: \"chrome://apps/\" })\n    });\n  }\n\n  const selectedLanguageKey = useStore(state => state.userData.settings.selectedLanguageKey);\n\n  const TriggerComponent = () => {\n    return (\n      <Button variant=\"ghost\"\n              color=\"var(--color-light1)\">\n        <CustomText hasArabic>{strings.quickLinks}</CustomText>\n      </Button>)\n  };\n\n  const TextStyles = ({\n    mx: 2,\n    fontSize: \"sm\",\n  });\n\n  const ButtonProps = () => {\n    let styles = {\n      variant: \"link\",\n      my: 1,\n      justifyContent: \"left\",\n      dir: \"ltr\",\n      width: \"100%\"\n    };\n\n    if (selectedLanguageKey === _AR) {\n      styles = {\n        ...styles,\n        dir: \"rtl\"\n      }\n    }\n    return styles;\n  };\n\n  const linkProps = {\n    isExternal: true,\n    rel: \"noopener noreferrer\",\n    dir: \"auto\",\n    flex: 1,\n    fontSize: \"sm\",\n    display: \"flex\",\n    alignItems: \"center\",\n    style: { gap: \"0.5rem\" }\n  };\n\n  const removeQuickLink = (index: number) => {\n    const result = window.confirm(\"Are you sure you want to delete this link?\");\n    if (result) {\n      deleteQuickLink(index);\n    }\n  }\n\n  return (\n    <div>\n      <CustomPopover TriggerComponent={TriggerComponent()}\n                     size=\"md\"\n                     isLazy>\n        <VStack>\n          {!isEdge() &&\n          <Button {...ButtonProps()}\n                  onClick={openChromeTab}>\n            <HStack>\n              <IoLogoChrome />\n              <CustomText {...TextStyles}\n                          hasArabic>\n                {strings.chromeTab}\n              </CustomText>\n            </HStack>\n          </Button>}\n          <Button {...ButtonProps()}\n                  onClick={openChromeApps}>\n            <HStack>\n              <IoMdApps />\n              <CustomText {...TextStyles}\n                          hasArabic>\n                {strings.apps}\n              </CustomText>\n            </HStack>\n          </Button>\n          {quickLinksArray.map((data, index) =>\n            <HStack w=\"100%\"\n                    key={index}\n                    className=\"QuickLinks__row\">\n              <Link {...linkProps}\n                    href={`https://${data.domain}`}>\n                <img src={`https://s2.googleusercontent.com/s2/favicons?domain=${data.domain}`}\n                     alt=\"favicon\" />\n                {data.name}\n              </Link>\n              <CustomIconButton className=\"QuickLinks__closeButton\"\n                                aria-label=\"remove-link\"\n                                size=\"xs\"\n                                icon={<IoMdClose size=\"16px\" color={\"var(--color-light3)\"} />}\n                                onClick={() => removeQuickLink(index)} />\n            </HStack>\n          )}\n          <Button {...ButtonProps()}\n                  onClick={onOpen}>\n            <HStack>\n              <IoMdAdd />\n              <CustomText {...TextStyles}\n                          hasArabic>\n                {strings.addLink}\n              </CustomText>\n            </HStack>\n          </Button>\n        </VStack>\n      </CustomPopover>\n      <AddLinkForm isOpen={isOpen}\n                   onClose={onClose} />\n    </div>\n  );\n}\nexport default QuickLinks;\n","import React from 'react';\nimport { useStore } from \"../../store\";\nimport QuickLinks from \"./QuickLinks.view\";\n\nexport default () => {\n  const quickLinksArray = useStore(state => state.userData.quickLinksArray);\n\n  const deleteQuickLink = useStore(state => state.deleteQuickLink);\n\n  return <QuickLinks quickLinksArray={quickLinksArray || []}\n                     deleteQuickLink={deleteQuickLink} />\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button } from '@chakra-ui/react';\n\nimport CustomText from \"../CustomText/CustomText.view\";\n\ntype HijriDateProps = {\n  selectedDateLocale: AppState[\"userData\"][\"selectedDateLocale\"];\n  toggleDateLocale: AppState[\"toggleDateLocale\"];\n}\n\nconst HijriDate = ({ selectedDateLocale, toggleDateLocale }: HijriDateProps) => {\n  const [dateFormat, setDateFormat] = useState<string>();\n\n  useEffect(() => {\n    const date = new Date();\n    const dateFormat = date.toLocaleDateString(selectedDateLocale, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    });\n\n    setDateFormat(dateFormat);\n  }, [selectedDateLocale]);\n\n  return (\n    <Button variant=\"ghost\"\n            color=\"var(--color-light1)\"\n            fontWeight=\"700\"\n            onClick={toggleDateLocale}>\n      <CustomText hasArabic\n                  h={10}\n                  d=\"flex\"\n                  alignItems=\"center\"\n                  px={4}>\n        {dateFormat}\n      </CustomText>\n    </Button>\n  );\n};\n\nexport default HijriDate;\n","import React from 'react';\n\nimport HijriDate from \"./HijriDate.view\";\nimport { useStore } from \"../../store\";\nimport { _AR_LOCALE } from \"../../utils/constants\";\n\nexport default () => {\n  const selectedDateLocale = useStore(state => state.userData.selectedDateLocale) || _AR_LOCALE;\n\n  const toggleDateLocale = useStore(state => state.toggleDateLocale);\n\n  return (<HijriDate selectedDateLocale={selectedDateLocale}\n                     toggleDateLocale={toggleDateLocale} />);\n};\n","import React from 'react';\nimport Select from 'react-select';\nimport { useStore } from \"../../store\";\n\ntype CustomSelectProps = {\n  isSearchable?: boolean;\n  fullWidth?: boolean;\n  value: {};\n  onChange: (arg0: any) => void;\n  options: {\n    label?: string,\n    value?: string,\n  }[];\n}\n\nconst CustomSelect = ({\n                        options,\n                        isSearchable,\n                        value,\n                        onChange,\n                        fullWidth,\n                      }: CustomSelectProps) => {\n  const darkThemeFlag = useStore(state => state.userData.settings.darkThemeFlag);\n\n  return (\n    <Select options={options}\n            menuPlacement=\"auto\"\n            isSearchable={isSearchable}\n            className={`popupMenu__selectContainer ${fullWidth ? 'popupMenu__selectContainer--fullWidth' : ''}`}\n            theme={(theme) => {\n              let obj = {\n                ...theme,\n                colors: {\n                  ...theme.colors,\n                  primary25: darkThemeFlag ? \"#4A5568\" : \"#EDF2F7\",\n                },\n              };\n\n              if (darkThemeFlag) {\n                obj = ({\n                  ...obj,\n                  colors: {\n                    ...obj.colors,\n                    // primary: 'var(--color-border-theme)',\n                    // @ts-ignore\n                    neutral0: 'var(--color-dark1-theme)',\n                    neutral80: 'var(--color-light1-theme)',\n                  },\n                });\n              }\n\n              return obj;\n            }}\n            styles={{\n              container: (provided) => ({\n                ...provided,\n                minWidth: 150,\n                transformOrigin: 'right',\n                zIndex: 1,\n              }),\n              option: /*istanbul ignore next*/\n                (provided) => {\n                  let obj = { ...provided };\n\n                  if (darkThemeFlag) {\n                    obj = {\n                      ...obj,\n                      color: 'var(--color-light1)',\n                    };\n                  }\n                  return obj;\n                },\n            }}\n            value={value}\n            onChange={onChange} />\n  );\n};\n\nexport default CustomSelect;\n","export default (value: number): string => {\n  const id = ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];\n  return (value.toString()).replace(/[0-9]/g, (index: string) => id[+index]);\n};\n","import axios from 'axios';\nimport _get from 'lodash/get';\n\ntype GetVerseReturn = Omit<AppState[\"userData\"][\"quranData\"], \"favourites\">;\n\ntype GetVerseFunction = (surahNumber: number, currentAyaNumber: number, translationKey?: string) => Promise<GetVerseReturn>;\n\nconst getVerse = async (surahNumber = 1, currentAyaNumber = 1, translationKey?: string): Promise<GetVerseReturn> => {\n  if (!translationKey) {\n    return await getLocalVerse(surahNumber, currentAyaNumber);\n  }\n  else {\n    return await getTranslation(surahNumber, currentAyaNumber, translationKey);\n  }\n};\n\nconst getLocalVerse: GetVerseFunction = async (surahNumber, currentAyaNumber) => {\n  const result = await axios.get(`data/surah/surah_${surahNumber}.json`);\n\n  return ({\n    surahName: result.data.englishName,\n    surahNameAr: result.data.name,\n    surahNumber,\n    currentAyaNumber,\n    surahEnd: result.data.numberOfAyahs,\n    currentAyaText: result.data.ayahs[currentAyaNumber - 1].text,\n    number: result.data.ayahs[currentAyaNumber - 1].number,\n    direction: \"rtl\",\n    juz: result.data.ayahs[currentAyaNumber - 1].juz,\n    hizbQuarter: result.data.ayahs[currentAyaNumber - 1].hizbQuarter,\n  });\n}\n\nconst getTranslation: GetVerseFunction = async (surahNumber, currentAyaNumber, translationKey) => {\n  const url = `http://api.alquran.cloud/v1/ayah/${surahNumber}:${currentAyaNumber}/${translationKey}`;\n\n  const { data } = await axios.get(url);\n\n  return ({\n    surahName: _get(data, 'data.surah.englishName'),\n    surahNameAr: _get(data, 'data.surah.name'),\n    surahNumber,\n    currentAyaNumber,\n    surahEnd: _get(data, 'data.surah.numberOfAyahs'),\n    currentAyaText: _get(data, 'data.text'),\n    direction: _get(data, 'data.edition.direction', \"rtl\"),\n    juz: _get(data, 'data.juz'),\n    hizbQuarter: _get(data, 'data.hizbQuarter'),\n  });\n}\n\nexport default getVerse;\n","import getVerse from \"../utils/getVerse\";\nimport { useStore } from \"../store\";\nimport { _INITIAL_USER_DATA, _QURAN_UTHMANI_MIN } from \"./constants\";\nimport strings from \"../locales\";\nimport useCustomToast from \"./useCustomToast\";\n\nexport default () => {\n  const toast = useCustomToast();\n\n  const translationFlag = useStore((state: AppState) => state.userData.settings.translationFlag);\n\n  const selectedTranslationKey = useStore((state: AppState) => state.userData.selectedTranslationKey);\n\n  const updateQuranData = useStore((state: AppState) => state.updateQuranData);\n\n  const updateTranslationVerseData = useStore((state: AppState) => state.updateTranslationVerseData);\n\n  return async (surahNumber: number, currentAyaNumber: number, customTranslationKey?: string) => {\n    //get arabic verse\n    const obj = await getVerse(surahNumber, currentAyaNumber);\n    updateQuranData(obj);\n\n    if (translationFlag !== false) { //get translation verse\n      let translationKey = customTranslationKey || selectedTranslationKey;\n\n      if (\n        !translationKey ||\n        translationKey === _QURAN_UTHMANI_MIN ||\n        translationKey === 'quran-simple') {\n        translationKey = _INITIAL_USER_DATA.selectedTranslationKey;\n      }\n\n      try {\n        const data = await getVerse(surahNumber, currentAyaNumber, translationKey);\n        updateTranslationVerseData(data.currentAyaText, data.direction);\n      }\n      catch {\n        const description = strings.formatString(strings.fetchError, strings.translations);\n        toast({ description });\n      }\n    }\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport _range from 'lodash/range';\nimport { Button, Text } from \"@chakra-ui/react\";\n\nimport useCustomToast from '../../utils/useCustomToast';\nimport CustomModal from '../CustomModal/CustomModal.view';\nimport CustomSelect from '../CustomSelect/CustomSelect.view';\nimport strings from '../../locales';\nimport { _AR } from '../../utils/constants';\nimport localizeNumbers from \"../../utils/localizeNumbers\";\nimport useSetVerse from \"../../utils/useSetVerse\";\n\nimport './ChangeVerseModal.styles.scss';\n\ntype ChangeVerseModalProps = {\n  isOpen: boolean,\n  onClose: () => void,\n  quranData: AppState[\"userData\"][\"quranData\"],\n  selectedLanguageKey: AppState[\"userData\"][\"settings\"][\"selectedLanguageKey\"],\n}\n\ntype SurahNamesArray = {\n  name: string;\n  englishName: string;\n  number: number;\n};\n\nconst ChangeVerseModal = ({\n                            isOpen,\n                            onClose,\n                            quranData,\n                            selectedLanguageKey,\n                          }: ChangeVerseModalProps) => {\n  const toast = useCustomToast();\n\n  const setVerse = useSetVerse();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [allSurahData, setAllSurahData] = useState([]);\n\n  const [surahNamesArray, setSurahNamesArray] = useState([]);\n\n  const [surahVerseNumbersArray, setSurahVerseNumbersArray] = useState([]);\n\n  const [selectedSurahNumber, setSelectedSurahNumber] = useState(quranData.surahNumber);\n\n  const [selectedVerseNumber, setSelectedVerseNumber] = useState(quranData.currentAyaNumber);\n\n  useEffect(() => {\n    getAllSurahData();\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [selectedLanguageKey]);\n\n  useEffect(() => {\n    getSurahVerseNumbers();\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [surahNamesArray, selectedSurahNumber]);\n\n  useEffect(() => {\n    setSelectedSurahNumber(quranData.surahNumber);\n    setSelectedVerseNumber(quranData.currentAyaNumber);\n  }, [quranData.surahNumber, quranData.currentAyaNumber]);\n\n  const getAllSurahData = async () => {\n    const { data } = await axios.get('data/surah.json');\n    const surahNamesArray = data.map((item: SurahNamesArray) => {\n      let label = item.englishName;\n      let surahNumber: number | string = item.number;\n\n      if (selectedLanguageKey === _AR) {\n        label = item.name;\n        surahNumber = localizeNumbers(item.number);\n      }\n      return {\n        label: `${label} (${surahNumber})`,\n        value: item.number,\n      }\n    });\n\n    setAllSurahData(data);\n    setSurahNamesArray(surahNamesArray);\n  };\n\n  const getSurahVerseNumbers = () => {\n    if (allSurahData.length) {\n      // @ts-ignore\n      const totalVerses = allSurahData[selectedSurahNumber - 1].numberOfAyahs;\n      const surahVerseNumbersArray = _range(1, totalVerses + 1).map(item => ({\n        label: selectedLanguageKey === _AR ? localizeNumbers(item) : item,\n        // @ts-ignore\n        value: parseInt(item),\n      }));\n\n      // @ts-ignore\n      setSurahVerseNumbersArray(surahVerseNumbersArray);\n    }\n  };\n\n  const changeSurahNumber = ({ value }: { value: number }) => {\n    setSelectedSurahNumber(value);\n    setSelectedVerseNumber(1);\n  };\n\n  const changeSurahVerseNumber = ({ value }: { value: number }) => {\n    setSelectedVerseNumber(value);\n  };\n\n  const submitChangeVerse = () => {\n    if (selectedSurahNumber !== quranData.surahNumber || selectedVerseNumber !== quranData.currentAyaNumber) {\n      setIsLoading(true);\n      try {\n        setVerse(selectedSurahNumber, selectedVerseNumber);\n      }\n      catch {\n        const description = strings.formatString(strings.fetchError, strings.translations);\n        toast({ description });\n      }\n      setIsLoading(false);\n    }\n\n    onClose();\n  };\n\n  const getSelectedSurahObj = (): {} => {\n    // @ts-ignore\n    return surahNamesArray.find(obj => obj.value === selectedSurahNumber);\n  }\n\n  const getSelectedVerseObj = (): {} => {\n    // @ts-ignore\n    return surahVerseNumbersArray.find(obj => obj.value === selectedVerseNumber);\n  }\n\n  return (\n    <div className='ChangeVerseModal'>\n      <CustomModal header={<Text className=\"element-has-ar\">{strings.changeVerse}</Text>}\n                   isOpen={isOpen}\n                   onClose={onClose}\n                   className={'ChangeVerseModal'}\n                   footer={<Button onClick={submitChangeVerse}\n                                   className=\"element-has-ar\"\n                                   isLoading={isLoading}\n                                   loadingText={strings.apply}>{strings.apply}</Button>}\n                   size=\"xs\">\n        <div className='ChangeVerseModal__content element-has-ar'>\n          <div className='ChangeVerseModal__customSelectContent ChangeVerseModal__customSelectContent--highIndex'>\n            <CustomSelect options={surahNamesArray}\n                          value={getSelectedSurahObj()}\n                          onChange={changeSurahNumber}\n                          isSearchable\n                          fullWidth />\n          </div>\n          <div className='ChangeVerseModal__customSelectContent'>\n            <CustomSelect options={surahVerseNumbersArray}\n                          value={getSelectedVerseObj()}\n                          onChange={changeSurahVerseNumber}\n                          isSearchable\n                          fullWidth />\n          </div>\n        </div>\n      </CustomModal>\n    </div>\n  );\n};\n\nexport default ChangeVerseModal;\n","import React from 'react';\nimport ChangeVerseModal from './ChangeVerseModal.view'\nimport shallow from \"zustand/shallow\";\n\nimport { useStore } from '../../store'\n\ntype defaultProps = {\n  isOpen: boolean;\n  onClose: () => void,\n};\n\nexport default ({\n                  isOpen,\n                  onClose,\n                }: defaultProps) => {\n  const {\n    quranData,\n    selectedLanguageKey,\n  } = useStore(state => ({\n    quranData: state.userData.quranData,\n    selectedLanguageKey: state.userData.settings.selectedLanguageKey,\n  }), shallow);\n\n  return (<ChangeVerseModal isOpen={isOpen}\n                            onClose={onClose}\n                            quranData={quranData}\n                            selectedLanguageKey={selectedLanguageKey} />);\n}\n;\n","import React from 'react';\nimport { Box, Button, useDisclosure } from '@chakra-ui/react';\n\nimport { _AR } from '../../utils/constants';\nimport useLocalizeNumbers from '../../utils/useLocalizeNumbers';\nimport ChangeVerseModal from '../ChangeVerseModal/index';\nimport CustomText from \"../CustomText/CustomText.view\";\n\nimport './VerseDetails.styles.scss';\nimport { BsFillInfoCircleFill } from \"react-icons/bs\";\nimport CustomTooltip from \"../CustomTooltip/CustomTooltip.view\";\nimport strings from \"../../locales\";\n\ntype VerseDetailsProps = {\n  quranData: AppState[\"userData\"][\"quranData\"];\n  selectedLanguageKey: AppState[\"userData\"][\"settings\"][\"selectedLanguageKey\"];\n  verseFlag?: AppState[\"userData\"][\"settings\"][\"verseFlag\"];\n};\n\nconst VerseDetails = ({\n                        quranData,\n                        selectedLanguageKey,\n                        verseFlag,\n                      }: VerseDetailsProps) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { localizeNumbers } = useLocalizeNumbers();\n\n  const quranInfoTooltip = () => {\n    const { juz, hizbQuarter } = quranData;\n\n    if (juz && hizbQuarter) {\n      const hizb = Math.ceil(hizbQuarter / 4);\n      const label = <>\n        <CustomText hasArabic>{strings.juz}: {localizeNumbers(juz)}</CustomText>\n        <CustomText hasArabic>{strings.hizb}: {localizeNumbers(hizb)}</CustomText>\n      </>;\n\n      return <CustomTooltip label={label}\n                            hasArabic\n                            isImmediately>\n        <Box cursor=\"pointer\" py={1}>\n          <BsFillInfoCircleFill color=\"var(--color-light1)\" />\n        </Box>\n      </CustomTooltip>\n    }\n  };\n\n  if (verseFlag === false) {\n    // verseFlag could be undefined for old users\n    return null;\n  }\n\n  return (\n    <>\n      <Button variant=\"ghost\"\n              color=\"var(--color-light1)\"\n              onClick={onOpen}>\n        <CustomText mr={2} hasArabic>\n          {selectedLanguageKey === _AR ? quranData.surahNameAr : quranData.surahName}\n          {' '} -\n          (\n          {localizeNumbers(quranData.surahEnd)}\n          /\n          {localizeNumbers(quranData.currentAyaNumber)}\n          )\n        </CustomText>\n        {quranInfoTooltip()}\n      </Button>\n      <ChangeVerseModal isOpen={isOpen}\n                        onClose={onClose} />\n    </>\n  );\n};\n\nexport default VerseDetails;\n","import React from 'react';\nimport shallow from \"zustand/shallow\";\n\nimport VerseDetails from './VerseDetails.view';\nimport { useStore } from '../../store'\n\nexport default () => {\n  const {\n    quranData,\n    selectedLanguageKey,\n    verseFlag,\n  } = useStore(state => ({\n    quranData: state.userData.quranData,\n    selectedLanguageKey: state.userData.settings.selectedLanguageKey,\n    verseFlag: state.userData.settings.verseFlag,\n  }), shallow);\n\n  return (<VerseDetails quranData={quranData}\n                        selectedLanguageKey={selectedLanguageKey}\n                        verseFlag={verseFlag} />);\n}\n","// @ts-ignore\nexport default navigator.userAgent.indexOf(\"Chrome\") !== -1;\n","import React from 'react';\n\nimport Adhkar from \"../Adhkar/Adhkar.view\";\nimport AudioControls from \"../AudioControls/AudioControls.index\";\nimport QuickLinks from \"../QuickLinks/QuickLinks.index\";\nimport HijriDate from '../HijriDate/HijriDate.index';\nimport VerseDetails from '../VerseDetails/index';\nimport isChrome from \"../../utils/isChrome\";\n\nimport './Header.style.scss';\n\ntype HeaderProps = {\n  dateFlag?: boolean;\n}\n\nconst Header = ({ dateFlag }: HeaderProps) => (\n  <header className=\"Header\">\n    <VerseDetails />\n    {isChrome && <QuickLinks />}\n    <div className=\"Header__topRight\">\n      <Adhkar />\n      {dateFlag !== false && <HijriDate />}\n      <AudioControls />\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nimport Header from \"./Header.view\";\nimport { useStore } from \"../../store\";\n\nexport default () => {\n  const dateFlag = useStore(state => state.userData.settings.dateFlag);\n\n  return (<Header dateFlag={dateFlag} />)\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './PopupMenu.styles.scss';\n\ntype PopupMenuProps = {\n  flag: boolean;\n  children: JSX.Element;\n  onCancel: () => void;\n  right?: boolean,\n};\n\nconst PopupMenu = ({ flag, onCancel, children, right }: PopupMenuProps) => {\n  const popupClasses = classNames('popupMenu popupMenu__bottom', {\n    'popupMenu--isActive': flag,\n    'popupMenu--isRight': right,\n  });\n\n  return (\n    <div className={popupClasses}>\n      <div className=\"popupMenu__overlay\"\n           onClick={onCancel} />\n      <div className='popupMenu__body'>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default PopupMenu;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './TabsTitles.styles.scss';\n\ntype TabObject = {\n  label?: string,\n  value: string,\n}\n\ntype TabsTitlesProps = {\n  selectedTitleKey: string,\n  setSelectedTitleKey: (arg0: string) => void,\n  titlesArray: Array<TabObject>;\n  selectedLanguageKey?: AppState[\"userData\"][\"settings\"][\"selectedLanguageKey\"];\n};\n\nconst TabsTitles = ({ titlesArray, selectedTitleKey, setSelectedTitleKey }: TabsTitlesProps) => {\n  const isTabActive = (item: TabObject, index: number) => {\n    return (selectedTitleKey === item.value) || (!selectedTitleKey && (index === 0));\n  }\n\n  const tabClasses = (item: TabObject, index: number) => {\n    return classNames('tabsTitles__tab', `tabsTitles__tab--${index}`,\n      { 'tabsTitles__tab--isActive': isTabActive(item, index) })\n  };\n\n  return (\n    <ul className='tabsTitles element-has-ar'>\n      {\n        titlesArray.map((item, index) =>\n          <li className={tabClasses(item, index)}\n              key={index}\n              onClick={() => setSelectedTitleKey(item.value)}>\n            {item.label}\n          </li>)\n      }\n    </ul>\n  );\n};\n\nexport default TabsTitles;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport _sortBy from 'lodash/sortBy';\nimport { Box, Button } from '@chakra-ui/react'\n\nimport strings from '../../locales';\nimport PopupMenu from '../PopupMenu/PopupMenu.view';\nimport TabsTitles from '../TabsTitles/TabsTitles.view';\nimport { _AR } from '../../utils/constants';\nimport getVerse from '../../utils/getVerse';\nimport useLocalizeNumbers from '../../utils/useLocalizeNumbers';\nimport CustomText from \"../CustomText/CustomText.view\";\nimport useSetVerse from \"../../utils/useSetVerse\";\n\nimport './Favourites.styles.scss';\n\ntype FavouritesProps = {\n  favouritesData: {\n    [key: string]: any\n  },\n  selectedLanguageKey: string,\n}\n\ntype TabObject = {\n  label?: string,\n  value: string,\n  surahNumber?: number;\n  ayaNumber?: number;\n};\n\ntype TabsArray = Array<TabObject>;\n\nconst Favourites = ({\n                      favouritesData,\n                      selectedLanguageKey,\n                    }: FavouritesProps) => {\n  const { localizeNumbers } = useLocalizeNumbers();\n\n  const setVerse = useSetVerse();\n\n  const [popupFlag, setPopupFlag] = useState(false);\n\n  const [tabsTitlesArray, setTabsTitlesArray] = useState<TabsArray>([]);\n\n  const [selectedSurahKey, setSelectedSurahKey] = useState('');\n\n  const [tabData, setTabData] = useState<TabsArray>([]);\n\n  useEffect(() => {\n    generateTabsTitles();\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [favouritesData, selectedLanguageKey]);\n\n  useEffect(() => {\n    generateTabData();\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [selectedSurahKey, favouritesData]);\n\n  const generateTabsTitles = async () => {\n    const arr: TabsArray = [];\n\n    if (!_isEmpty(favouritesData)) {\n      const { data } = await axios.get(`data/surah.json`);\n      const orderedData = _sortBy(Object.keys(favouritesData), o => parseInt(o.split('_')[1]));\n\n      orderedData.forEach(surahKey => {\n        const surahIndex = parseInt(surahKey.split('_')[1]) - 1;\n        const surahTitle = selectedLanguageKey === _AR ? data[surahIndex].name : data[surahIndex].englishName;\n        const ayaLength = Object.keys(favouritesData[surahKey]).length;\n\n        arr.push({\n          label: `${surahTitle} (${localizeNumbers(ayaLength)})`,\n          value: surahKey\n        });\n      });\n\n      setTabsTitlesArray(arr);\n      setSelectedSurahKey(Object.keys(favouritesData)[0]);\n    }\n  };\n\n  const generateTabData = async () => {\n    if (_get(favouritesData, selectedSurahKey)) {\n      const arr: TabsArray = [];\n\n      const orderedData = _sortBy(Object.keys(favouritesData[selectedSurahKey]), o => parseInt(o.split('_')[1]));\n\n      orderedData.map(async (ayaKey) => {\n        const surahNumber = parseInt(selectedSurahKey.split('_')[1]);\n        const ayaNumber = parseInt(ayaKey.split('_')[1]);\n\n        const obj = await getVerse(surahNumber, ayaNumber);\n\n        arr.push({\n          label: obj.currentAyaText,\n          value: ayaKey,\n          surahNumber,\n          ayaNumber,\n        });\n      });\n\n      setTimeout(() => setTabData(arr), 100);\n    }\n  };\n\n  return (\n    <Box className='favourites'\n         display={{ base: \"none\", sm: \"flex\" }}>\n      <Button variant=\"ghost\"\n              onClick={() => setPopupFlag(!popupFlag)}>\n        <CustomText hasArabic>{strings.favourites}</CustomText>\n      </Button>\n      <PopupMenu flag={popupFlag}\n                 onCancel={() => setPopupFlag(false)}\n                 right>\n        <Fragment>\n          {_isEmpty(favouritesData) ?\n            <div className='favourites__empty'>{strings.favouritesEmpty}</div>\n            :\n            <div className='favourites__content'>\n              <TabsTitles titlesArray={tabsTitlesArray}\n                          selectedTitleKey={selectedSurahKey}\n                          setSelectedTitleKey={setSelectedSurahKey} />\n              <ul className='favourites__tabsContent element-has-ar'>\n                {tabData.map((data) =>\n                  <li className=\"favourites__tabContent favourites__tabContent--ar\"\n                      key={data.label}\n                      onClick={() => setVerse(data.surahNumber || 1, data.ayaNumber || 1)}>\n                    {data.label}\n                  </li>)}\n              </ul>\n            </div>}\n        </Fragment>\n      </PopupMenu>\n    </Box>\n  );\n};\n\nexport default Favourites;\n","import React from 'react';\nimport Favourites from './Favourites.view';\nimport shallow from \"zustand/shallow\";\n\nimport { useStore } from \"../../store\";\n\nexport default () => {\n  const [\n    favouritesData,\n    selectedLanguageKey,\n    favouritesFlag,\n  ] = useStore(state => [\n    state.userData.quranData.favourites,\n    state.userData.settings.selectedLanguageKey,\n    state.userData.settings.favouritesFlag,\n  ], shallow);\n\n  if (!favouritesFlag) {\n    return null\n  }\n\n  return (<Favourites favouritesData={favouritesData}\n                      selectedLanguageKey={selectedLanguageKey} />);\n}\n","import React from 'react';\nimport _get from 'lodash/get';\nimport { Box } from '@chakra-ui/react'\n\nimport './CreditAuthor.styles.scss'\n\ntype CreditAuthorProps = {\n  backgroundData: AppState[\"userData\"][\"backgroundData\"];\n  backgroundFlag: AppState[\"userData\"][\"settings\"][\"backgroundFlag\"];\n}\nconst CreditAuthor = ({ backgroundData, backgroundFlag }: CreditAuthorProps) => {\n  const params = '?utm_source=quran_tab&utm_medium=referral';\n\n  if (!_get(backgroundData, 'username') || backgroundFlag === false) return null;\n\n  return (\n    <Box className='creditAuthor'\n         display={{ base: \"none\", sm: \"flex\" }}\n         mx={2}>\n      Photo by\n      <a className='creditAuthor__link'\n         href={`${backgroundData.profile_url}${params}`}\n         target='_blank'\n         rel='noopener noreferrer'>\n        {backgroundData.username}\n      </a>\n      on\n      <a className='creditAuthor__link'\n         href={`https://unsplash.com${params}`}\n         target='_blank'\n         rel='noopener noreferrer'>\n        Unsplash\n      </a>\n    </Box>\n  );\n};\n\nexport default CreditAuthor;\n","import React from 'react'\nimport { useStore } from \"../../store\";\nimport CreditAuthor from \"./CreditAuthor.view\";\n\nexport default () => {\n  const backgroundData = useStore(state => state.userData.backgroundData);\n\n  const backgroundFlag = useStore(state => state.userData.settings.backgroundFlag);\n\n  return (<CreditAuthor backgroundData={backgroundData}\n                        backgroundFlag={backgroundFlag} />)\n}\n","export default (e: { key: string; }) => {\n  const isPopupOpen = document.querySelector('.popupMenu--isActive');\n  const isChakraOpen = document.querySelector('.chakra-portal');\n\n  if (!isChakraOpen && !isPopupOpen) {\n    if (e.key === 'ArrowLeft') {\n      const prevBtn = document.querySelector('.verseContent__iconsContent [data-hotkeys=\"previous\"]');\n      // @ts-ignore\n      prevBtn && prevBtn.click();\n    }\n    else if (e.key === 'ArrowRight') {\n      const nextBtn = document.querySelector('.verseContent__iconsContent [data-hotkeys=\"next\"]');\n      // @ts-ignore\n      nextBtn && nextBtn.click();\n    }\n    else if (e.key === 'l') {\n      const favBtn = document.querySelector('.verseContent__iconsContent [data-hotkeys=\"favourite\"]');\n      // @ts-ignore\n      favBtn.click();\n    }\n    else if (e.key === ' ') {\n      const playBtn = document.querySelector('.verseContent__iconsContent [data-hotkeys=\"play\"]');\n      // @ts-ignore\n      playBtn && playBtn.click();\n    }\n    else if (e.key === 't') {\n      const tafseerBtn = document.querySelector('.verseContent__iconsContent [data-hotkeys=\"tafseer\"]');\n      // @ts-ignore\n      tafseerBtn && tafseerBtn.click();\n    }\n  }\n}\n","import axios, { AxiosResponse } from 'axios';\nimport _get from 'lodash/get'\nimport { JALALAYN, MUYASSAR } from './constants';\n\ntype GetTafseer = (surahNumber: number, ayaNumber: number) => Promise<{\n  surahNumber: number;\n  ayaNumber: number;\n  muyassar: string;\n  jalalayn: string;\n}>;\n\nconst getTafseerMuyassar = (surahNumber: number, ayaNumber: number): Promise<AxiosResponse> => {\n  const url = `http://api.alquran.cloud/ayah/${surahNumber}:${ayaNumber}/editions/ar.muyassar`;\n\n  return axios.get(url);\n};\n\nconst getTafseerJalalayn = (surahNumber: number, ayaNumber: number): Promise<AxiosResponse> => {\n  const url2 = `http://api.alquran.cloud/ayah/${surahNumber}:${ayaNumber}/editions/ar.jalalayn`;\n\n  return axios.get(url2);\n};\n\nconst getTafseer: GetTafseer = async (surahNumber, ayaNumber) => {\n  const [tafseerMuyassar, tafseerJalalayn] = await Promise.all([\n    getTafseerMuyassar(surahNumber, ayaNumber),\n    getTafseerJalalayn(surahNumber, ayaNumber),\n  ]);\n\n  return {\n    surahNumber,\n    ayaNumber,\n    [MUYASSAR]: _get(tafseerMuyassar, 'data.data[0].text'),\n    [JALALAYN]: _get(tafseerJalalayn, 'data.data[0].text'),\n  };\n};\n\nexport default getTafseer;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\n\nimport useCustomToast from '../../utils/useCustomToast';\nimport { JALALAYN, MUYASSAR } from '../../utils/constants';\nimport data from '../../locales/ar';\nimport CustomModal from '../CustomModal/CustomModal.view';\nimport getTafseer from '../../utils/getTafseer';\nimport strings from \"../../locales\";\n\ntype TafseerModalProps = {\n  tafseerObj: {\n    surahNumber?: number;\n    ayaNumber?: number;\n  };\n  surahNumber: number;\n  ayaNumber: number;\n  setTafseerObj: (obj: any) => void;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst TafseerModal = ({\n                        tafseerObj,\n                        surahNumber,\n                        ayaNumber,\n                        setTafseerObj,\n                        isOpen,\n                        onClose,\n                      }: TafseerModalProps) => {\n  const toast = useCustomToast();\n\n  const [selectedTab, setSelectedTab] = useState(MUYASSAR);\n\n  const [loadingFlag, setLoadingFlag] = useState(false);\n\n  const getTafseerData = async (): Promise<void> => {\n    if (_isEmpty(tafseerObj)\n      || tafseerObj.surahNumber !== surahNumber\n      || tafseerObj.ayaNumber !== ayaNumber) {\n      setLoadingFlag(true);\n      try {\n        const tafseerObjResult = await getTafseer(surahNumber, ayaNumber);\n        setTafseerObj(tafseerObjResult);\n      }\n      catch{\n        const description = strings.formatString(strings.fetchError, strings.tafseer);\n        toast({ description });\n      }\n\n      setLoadingFlag(false);\n    }\n  };\n\n  useEffect(() => {\n    /*update the tafseer when user changes the current aya using shortcuts*/\n    getTafseerData();\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [surahNumber, ayaNumber]);\n\n  const changeSelectedTab = (tabKey: string): void => {\n    setSelectedTab(tabKey);\n  };\n\n  const tafseerTabClasses = (tabKey: string): string => classNames('tafseer__tab', {\n    'tafseer__tab--isActive': selectedTab === tabKey,\n  });\n\n  const tafseerTabContentClasses = classNames('tafseer__tabContent', {\n    'tafseer__tabContent--isLoading': loadingFlag,\n  });\n\n  return (\n    <CustomModal isOpen={isOpen}\n                 onClose={onClose}>\n      <>\n        <ul className=\"tafseer__tabs\">\n          <button\n            type=\"button\"\n            className={tafseerTabClasses(MUYASSAR)}\n            onClick={(): void => changeSelectedTab(MUYASSAR)}\n          >\n            {data.muyassar}\n          </button>\n          <button\n            type=\"button\"\n            className={tafseerTabClasses(JALALAYN)}\n            onClick={(): void => changeSelectedTab(JALALAYN)}\n          >\n            {data.jalalayn}\n          </button>\n        </ul>\n\n        <div className={tafseerTabContentClasses}>\n          {selectedTab === MUYASSAR ? _get(tafseerObj, MUYASSAR) : _get(tafseerObj, JALALAYN)}\n        </div>\n      </>\n    </CustomModal>\n  );\n};\n\nexport default TafseerModal;\n","import React from 'react';\nimport { Button, Box } from \"@chakra-ui/react\";\n\nimport CustomTooltip from \"../CustomTooltip/CustomTooltip.view\";\n\ntype VerseContentIconProps = {\n  onClick: () => void;\n  children: {};\n  tooltipText: string;\n  isLoading?: boolean;\n  [key: string]: any;\n}\n\nconst VerseContentIcon = ({ onClick, children, tooltipText, isLoading, ...props }: VerseContentIconProps) => {\n  return (\n    <Button\n      variant=\"ghost\"\n      onClick={onClick}\n      isLoading={isLoading}\n      aria-label={tooltipText}\n      {...props}>\n      <CustomTooltip label={tooltipText}>\n        <Box fontSize=\"22px\">\n          {children}\n        </Box>\n      </CustomTooltip>\n    </Button>\n  );\n};\n\nexport default VerseContentIcon;\n","import React, { useState } from 'react';\nimport { GoBook } from 'react-icons/go';\nimport { useDisclosure } from \"@chakra-ui/react\"\n\nimport TafseerModal from '../TafseerModal/TafseerModal.view';\nimport strings from \"../../locales\";\n\nimport './Tafseer.styles.scss';\nimport VerseContentIcon from \"../VerseContentIcon/VerseContentIcon.view\";\n\ntype TafseerProps = {\n  surahNumber: number;\n  ayaNumber: number;\n}\n\nconst Tafseer = ({ surahNumber, ayaNumber }: TafseerProps) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [tafseerObj, setTafseerObj] = useState({});\n\n  return (\n    <>\n      {isOpen && <TafseerModal\n        surahNumber={surahNumber}\n        ayaNumber={ayaNumber}\n        tafseerObj={tafseerObj}\n        setTafseerObj={setTafseerObj}\n        isOpen={isOpen}\n        onClose={onClose}\n      />}\n      <VerseContentIcon onClick={onOpen}\n                        tooltipText={strings.tafseer}\n                        data-hotkeys=\"tafseer\">\n        <GoBook />\n      </VerseContentIcon>\n    </>\n  );\n};\n\nexport default Tafseer;\n","import React from 'react';\nimport { useStore } from '../../store';\n\nimport Tafseer from \"./Tafseer.view\";\nimport shallow from 'zustand/shallow'\n\nexport default () => {\n  const [\n    surahNumber,\n    currentAyaNumber\n  ] = useStore(state => [\n    state.userData.quranData.surahNumber,\n    state.userData.quranData.currentAyaNumber,\n  ], shallow);\n\n  return (\n    <Tafseer surahNumber={surahNumber}\n             ayaNumber={currentAyaNumber} />\n  );\n}\n","import { useStore } from \"../store\";\nimport useSetVerse from \"../utils/useSetVerse\";\nimport _random from \"lodash/random\";\nimport axios from \"axios\";\nimport getVerse from \"./getVerse\";\n\ntype GetRandomVerseReturn = {\n  randomSurahNumber?: number;\n  randomAyaNumber?: number;\n  shouldIgnoreRandomVerseFlag?: boolean;\n};\n\ntype GetNextVerseDataReturn = {\n  nextSurahNumber: number;\n  nextAyaNumber: number;\n};\n\nexport default () => {\n  const setVerse = useSetVerse();\n\n  const randomVerseFlag = useStore((state: AppState) => state.userData.settings.randomVerseFlag);\n\n  const quranData = useStore((state: AppState) => state.userData.quranData);\n\n  const getRandomVerse = async (): Promise<GetRandomVerseReturn> => {\n    const randomSurahNumber = _random(1, 114);\n    const result = await axios.get(`data/surah/surah_${randomSurahNumber}.json`);\n    const randomAyaNumber = _random(1, result.data.numberOfAyahs);\n\n    return ({ randomSurahNumber, randomAyaNumber });\n  };\n\n  const getNextVerseData = async (surahNumber?: number, ayaNumber?: number, shouldIgnoreRandomVerseFlag?: boolean): Promise<GetNextVerseDataReturn> => {\n    let currentSurahNumber = quranData.surahNumber;\n    let currentAyaNumber = quranData.currentAyaNumber;\n    let currentSurahEnd = quranData.surahEnd;\n\n    if (surahNumber && ayaNumber) {\n      const { surahEnd } = await getVerse(surahNumber, ayaNumber);\n      currentSurahNumber = surahNumber;\n      currentAyaNumber = ayaNumber;\n      currentSurahEnd = surahEnd;\n    }\n\n    if (!shouldIgnoreRandomVerseFlag && randomVerseFlag) {\n      const data = await getRandomVerse();\n\n      return ({ nextSurahNumber: data.randomSurahNumber || 1, nextAyaNumber: data.randomAyaNumber || 1 })\n    }\n    else if (currentSurahEnd && currentAyaNumber < currentSurahEnd) {\n      const nextAyaNumber = currentAyaNumber + 1;\n\n      return ({ nextSurahNumber: quranData.surahNumber, nextAyaNumber })\n    }\n    else if (currentSurahNumber !== 114) {\n      const nextAyaNumber = 1;\n      const nextSurahNumber = currentSurahNumber + 1;\n\n      return ({ nextSurahNumber, nextAyaNumber })\n    }\n    // Go to the first surah, first aya in the Quran\n    return ({ nextSurahNumber: 1, nextAyaNumber: 1 })\n  };\n\n  const nextAya = async (shouldIgnoreRandomVerseFlag?: boolean): Promise<void> => {\n    const { nextSurahNumber, nextAyaNumber } = await getNextVerseData(undefined, undefined, shouldIgnoreRandomVerseFlag);\n    await setVerse(nextSurahNumber, nextAyaNumber);\n  };\n\n  const previousAya = async (): Promise<void> => {\n    if (randomVerseFlag) {\n      const data = await getRandomVerse();\n\n      await setVerse(data.randomSurahNumber || 1, data.randomAyaNumber || 1);\n    }\n    else if (quranData.currentAyaNumber === 1 && quranData.surahNumber > 1) { //Get last aya of previous surah\n      const previousSurah = quranData.surahNumber - 1;\n\n      //Get last aya of previous surah\n      axios.get(`data/surah/surah_${previousSurah}.json`)\n        .then(async (result) => {\n          await setVerse(previousSurah, parseInt(result.data.numberOfAyahs))\n        });\n    }\n    else if (quranData.currentAyaNumber > 1) { //Get previous aya\n      const previousAyaNumber = quranData.currentAyaNumber - 1;\n\n      await setVerse(quranData.surahNumber, previousAyaNumber);\n    }\n    else { //Go to the last surah and last aya in the Quran\n      await setVerse(114, 6);\n    }\n  };\n\n  return ({ previousAya, nextAya, getNextVerseData })\n};\n","export default (param: string | number) => ('000' + param).substr(-3);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { MdPlayArrow, MdPause, MdRepeat } from 'react-icons/md';\n\nimport VerseContentIcon from \"../VerseContentIcon/VerseContentIcon.view\";\nimport strings from \"../../locales\";\nimport useVerseFunctions from \"../../utils/useVerseFunctions\";\nimport zeroFilled from \"../../utils/zeroFilled\";\nimport { NASSER_ALQATAMI, YASSER_ALDOSSARY } from \"../../utils/constants\";\n\ntype VerseAudioProps = {\n  quranData: AppState[\"userData\"][\"quranData\"];\n  verseAudioLevel: AppState[\"userData\"][\"verseAudioLevel\"];\n  selectedReciter: AppState[\"userData\"][\"settings\"][\"selectedReciter\"];\n  continuesPlayingVerseFlag: AppState[\"userData\"][\"settings\"][\"continuesPlayingVerseFlag\"];\n  updateSettingsProperty: AppState[\"updateSettingsProperty\"];\n};\n\nconst VerseAudio = ({\n                      quranData,\n                      verseAudioLevel,\n                      selectedReciter,\n                      continuesPlayingVerseFlag,\n                      updateSettingsProperty,\n                    }: VerseAudioProps) => {\n  const { nextAya } = useVerseFunctions();\n\n  const [audioURLsArray, setAudioURLsArray] = useState<string[]>([]);\n\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\n\n  const [isAudioLoading, setIsAudioLoading] = useState(false);\n\n  const audioRef: React.MutableRefObject<null | HTMLAudioElement> = useRef(null);\n\n  useEffect(() => {\n    generateAudioURLs();\n    isAudioPlaying && continuesPlayingVerseFlag && playVerse();\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [quranData.number, selectedReciter]);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = verseAudioLevel\n    }\n  }, [verseAudioLevel]);\n\n  const togglePlay = () => {\n    if (isAudioPlaying) {\n      pauseVerse();\n    }\n    else {\n      playVerse();\n    }\n  }\n\n  const playVerse = async () => {\n    setIsAudioPlaying(true);\n    audioRef.current?.load();\n  };\n\n  const pauseVerse = () => {\n    audioRef.current && audioRef.current.pause();\n    setIsAudioPlaying(false);\n  };\n\n  const onLoadedData = () => {\n    setIsAudioLoading(false);\n\n    if (isAudioPlaying && audioRef.current) {\n      audioRef.current.play();\n    }\n  };\n\n  const onError = () => {\n    setIsAudioPlaying(false);\n    setIsAudioLoading(false);\n\n    console.log('AudioOnError: ', strings.verseAudioError);\n    // toast({ description: strings.verseAudioError });\n  };\n\n  const onEnded = () => {\n    if (continuesPlayingVerseFlag) {\n      nextAya(true);\n    }\n    else {\n      setIsAudioPlaying(false);\n    }\n  };\n\n  const toggleContinuesPlayingVerseFlag = () => {\n    const value = continuesPlayingVerseFlag === false;\n    updateSettingsProperty('continuesPlayingVerseFlag', value);\n  };\n\n  const generateAudioURLs = () => {\n    let urls = [\n      `https://cdn.alquran.cloud/media/audio/ayah/${selectedReciter}/${quranData.number}`,\n      `https://cdn.islamic.network/quran/audio/64/${selectedReciter}/${quranData.number}.mp3`,\n      `https://cdn.islamic.network/quran/audio/128/${selectedReciter}/${quranData.number}.mp3`\n    ];\n\n    if (selectedReciter === NASSER_ALQATAMI || selectedReciter === YASSER_ALDOSSARY) {\n      const { surahNumber, currentAyaNumber } = quranData;\n      const selectedVerseNumber = `${zeroFilled(surahNumber)}${zeroFilled(currentAyaNumber)}`;\n\n      urls = [\n        `https://verse.mp3quran.net/arabic/${selectedReciter}/64/${selectedVerseNumber}.mp3`,\n        `https://verse.mp3quran.net/arabic/${selectedReciter}/128/${selectedVerseNumber}.mp3`,\n      ]\n    }\n\n    setAudioURLsArray(urls);\n  }\n\n  return (\n    <>\n      <VerseContentIcon onClick={toggleContinuesPlayingVerseFlag}\n                        {...!continuesPlayingVerseFlag && { opacity: 0.4, boxShadow: \"none\" }}\n                        tooltipText={strings.continuesPlayingVerse}>\n        <MdRepeat />\n      </VerseContentIcon>\n      <VerseContentIcon onClick={togglePlay}\n                        tooltipText={strings.playPauseAudio}\n                        isLoading={isAudioLoading}\n                        data-hotkeys=\"play\">\n        {isAudioPlaying ? <MdPause /> : <MdPlayArrow />}\n      </VerseContentIcon>\n      <audio ref={audioRef}\n             onEnded={onEnded}\n             onLoadedData={onLoadedData}\n             onLoadStart={() => setIsAudioLoading(true)}\n             onError={onError}\n             onPlaying={() => setIsAudioPlaying(true)}>\n        {audioURLsArray.map((url, index) => <source src={url} key={index} />)}\n      </audio>\n    </>\n  );\n};\n\nexport default VerseAudio;\n\n/*Todo: change the current shape of the audioObj\n *audioObj: {surahnumber-ayanumber-selectedReciter: audio object}\n*onPlay: check for the id, if found then play the audio, if not then load the audio and add it to the object\n*Todo: cache the verses\n* instead of getting 1 verse, get 3 verses from the API\n* put them in the audioObj\n*Todo: check if the next verse is ready or not\n* if verse is cached, then check for the next verse\n* get the next verse data\n* generate the audioObj id from the verse data\n* check if it's in the audioObj\n* if yes then do nothing\n* if no then load another batch and put them in audioObj\n* */\n","import React from 'react';\nimport shallow from \"zustand/shallow\";\n\nimport { useStore } from \"../../store\";\nimport { _INITIAL_USER_DATA } from \"../../utils/constants\";\nimport VerseAudio from './VerseAudio.view';\n\nexport default () => {\n  const {\n    quranData,\n    verseAudioLevel,\n    selectedReciter,\n    continuesPlayingVerseFlag,\n  } = useStore(state => ({\n    quranData: state.userData.quranData,\n    verseAudioLevel: state.userData.verseAudioLevel,\n    selectedReciter: state.userData.settings.selectedReciter,\n    continuesPlayingVerseFlag: state.userData.settings.continuesPlayingVerseFlag,\n  }), shallow);\n\n  const updateSettingsProperty = useStore(state => state.updateSettingsProperty);\n\n  return (<VerseAudio quranData={quranData || _INITIAL_USER_DATA.quranData}\n                      verseAudioLevel={verseAudioLevel ?? 1}\n                      selectedReciter={selectedReciter}\n                      continuesPlayingVerseFlag={continuesPlayingVerseFlag !== false}\n                      updateSettingsProperty={updateSettingsProperty} />)\n}\n","import React from 'react';\nimport strings from \"../../locales\";\nimport VerseContentIcon from \"../VerseContentIcon/VerseContentIcon.view\";\nimport CustomText from \"../CustomText/CustomText.view\";\n\ntype NextVerseButtonProps = {\n  onClickEvent: () => void;\n};\n\nconst NextVerseButton = ({ onClickEvent }: NextVerseButtonProps) => {\n  return (\n    <VerseContentIcon onClick={onClickEvent}\n                      tooltipText={strings.next}\n                      data-hotkeys=\"next\">\n      <CustomText fontSize=\"md\"\n                  hasArabic>\n        {strings.next}\n      </CustomText>\n    </VerseContentIcon>\n  );\n}\n\nexport default NextVerseButton;\n","import React from 'react';\nimport strings from \"../../locales\";\nimport VerseContentIcon from \"../VerseContentIcon/VerseContentIcon.view\";\nimport CustomText from \"../CustomText/CustomText.view\";\n\ntype PreviousVerseButtonProps = {\n  onClickEvent: () => void;\n};\n\nconst PreviousVerseButton = ({ onClickEvent }: PreviousVerseButtonProps) => {\n  return (\n    <VerseContentIcon onClick={onClickEvent}\n                      tooltipText={strings.previous}\n                      data-hotkeys=\"previous\">\n      <CustomText fontSize=\"md\"\n                  hasArabic>\n        {strings.previous}\n      </CustomText>\n    </VerseContentIcon>\n  );\n}\n\nexport default PreviousVerseButton;\n","import React from 'react';\nimport strings from \"../../locales\";\nimport { MdFavorite, MdFavoriteBorder } from \"react-icons/md\";\nimport VerseContentIcon from \"../VerseContentIcon/VerseContentIcon.view\";\n\ntype AddToFavButtonProps = {\n  isActive: boolean;\n  onClickEvent: () => void;\n}\n\nconst AddToFavButton = ({ isActive, onClickEvent }: AddToFavButtonProps) => {\n  return (\n    <VerseContentIcon onClick={onClickEvent}\n                      tooltipText={strings.addToFavourites}\n                      data-hotkeys=\"favourite\">\n      {isActive\n        ? <MdFavorite style={{ color: 'var(--color-red)' }} />\n        : <MdFavoriteBorder />}\n    </VerseContentIcon>\n  );\n}\n\nexport default AddToFavButton;\n","import React, { useEffect, useState } from 'react';\nimport { MdTranslate } from 'react-icons/md';\nimport { Box, Button, Text, useDisclosure } from '@chakra-ui/react'\nimport axios from 'axios';\nimport _sortBy from 'lodash/sortBy'\nimport ReactGA from \"react-ga\";\n\nimport useCustomToast from '../../utils/useCustomToast'\nimport strings from \"../../locales\";\nimport CustomModal from \"../CustomModal/CustomModal.view\";\nimport CustomSelect from \"../CustomSelect/CustomSelect.view\";\nimport { TranslationButtonProps, RawTranslationObject, TranslationData, TranslationObject } from \"./TranslationButton\";\nimport getDateString from \"../../utils/getDateString\";\nimport VerseContentIcon from \"../VerseContentIcon/VerseContentIcon.view\";\nimport useSetVerse from \"../../utils/useSetVerse\";\n\nconst TranslationButton = ({\n                             quranData,\n                             selectedTranslationKey,\n                             translationsExpire,\n                             translationsData,\n                             updateSelectedTranslationKey,\n                             updateTranslationsData,\n                           }: TranslationButtonProps) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toast = useCustomToast();\n\n  const setVerse = useSetVerse();\n\n  const [selectedTranslationValue, setSelectedTranslationValue] = useState<string>(selectedTranslationKey);\n\n  const [translationArray, setTranslationArray] = useState<TranslationData | []>([]);\n\n  useEffect(() => {\n    getTranslationData();\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [])\n\n  const buildTranslationArray = (data: RawTranslationObject[]): TranslationData => {\n    const orderedList = _sortBy(data, [\"language\"]);\n    return orderedList\n      .filter((obj: RawTranslationObject) => obj.language !== \"ar\")\n      .map((obj: RawTranslationObject) => ({\n        label: `${obj.language} - ${obj.englishName}`,\n        value: obj.identifier,\n      }));\n  };\n\n  const fetchTranslationData = async (): Promise<TranslationData | []> => {\n    const url = \"http://api.alquran.cloud/v1/edition?type=translation&format=text\";\n    const result = await axios.get(url);\n\n    try {\n      if (result.data.code === 200) {\n        return buildTranslationArray(result.data.data);\n      }\n      else {\n        const description = strings.formatString(strings.fetchError, strings.translations);\n        // toast({ description });\n        console.log('fetchTranslationData: ', description);\n      }\n    }\n    catch {\n      const description = strings.formatString(strings.fetchError, strings.translations);\n      // toast({ description });\n      console.log('fetchTranslationData: ', description);\n    }\n\n    return [];\n  }\n\n  const getTranslationData = async () => {\n    const translationsExpiryDate = getDateString();\n    let result = [...translationsData];\n\n    if (translationsExpiryDate !== translationsExpire) {\n      result = await fetchTranslationData();\n      updateTranslationsData(translationsExpiryDate, result);\n    }\n\n    setTranslationArray(result);\n  };\n\n  const getSelectedTranslation = () => {\n    const result = translationArray.find(obj => obj.value === selectedTranslationValue);\n\n    return result || {};\n  }\n\n  const changeTranslationValue = (obj: TranslationObject) => {\n    setSelectedTranslationValue(obj.value);\n  };\n\n  const submitNewTranslation = async () => {\n    if (selectedTranslationValue !== selectedTranslationKey) {\n      setIsLoading(true);\n      try {\n        await setVerse(quranData.surahNumber, quranData.currentAyaNumber, selectedTranslationValue);\n        updateSelectedTranslationKey(selectedTranslationValue);\n      }\n      catch {\n        const description = strings.formatString(strings.fetchError, strings.translations);\n        toast({ description });\n      }\n      setIsLoading(false);\n      ReactGA.event({\n        category: \"Translation Button\",\n        action: `${selectedTranslationValue}.clicked`,\n      });\n    }\n    onClose();\n  }\n\n  return (\n    <>\n      <VerseContentIcon onClick={onOpen}\n                        tooltipText={strings.translation}>\n        <MdTranslate />\n      </VerseContentIcon>\n      <CustomModal isOpen={isOpen}\n                   onClose={onClose}\n                   header={<Text className=\"element-has-ar\">{strings.translations}</Text>}\n                   footer={<Button onClick={submitNewTranslation}\n                                   className=\"element-has-ar\"\n                                   isLoading={isLoading}\n                                   loadingText={strings.apply}>{strings.apply}</Button>}\n                   size=\"xs\">\n        <Box mt=\"var(--default-padding)\">\n          <CustomSelect options={translationArray}\n                        value={getSelectedTranslation()}\n                        onChange={changeTranslationValue}\n                        isSearchable\n                        fullWidth />\n        </Box>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default TranslationButton;\n\n//todo\n// Add unit test\n","import React from 'react';\nimport shallow from 'zustand/shallow'\n\nimport TranslationButton from './TranslationButton.view'\nimport { useStore } from '../../store';\nimport { _INITIAL_USER_DATA } from \"../../utils/constants\";\n\nexport default () => {\n  const [\n    selectedTranslationKey,\n    quranData,\n    translationsExpire,\n    translationsData,\n    updateTranslationsData,\n  ] = useStore(state => [\n    state.userData.selectedTranslationKey,\n    state.userData.quranData,\n    state.userData.translationsExpire,\n    state.userData.translationsData,\n    state.updateTranslationsData,\n  ], shallow);\n\n  const updateSelectedTranslationKey = useStore(state => state.updateSelectedTranslationKey);\n\n  const result = selectedTranslationKey || _INITIAL_USER_DATA.selectedTranslationKey;\n\n  return (\n    <TranslationButton selectedTranslationKey={result}\n                       quranData={quranData}\n                       translationsExpire={translationsExpire}\n                       translationsData={translationsData || []}\n                       updateSelectedTranslationKey={updateSelectedTranslationKey}\n                       updateTranslationsData={updateTranslationsData} />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport _get from 'lodash/get';\nimport { Spinner } from '@chakra-ui/react';\nimport initHotkeys from '../../utils/initHotkeys';\n\nimport Tafseer from '../Tafseer/index';\nimport VerseAudio from '../VerseAudio/VerseAudio.index';\nimport NextVerseButton from \"../NextVerseButton/NextVerseButton.view\";\nimport PreviousVerseButton from \"../PreviousVerseButton/PreviousVerseButton.view\";\nimport AddToFavButton from \"../AddToFavButton/AddToFavButton.view\";\nimport TranslationButton from \"../TranslationButton/index\";\nimport CustomText from \"../CustomText/CustomText.view\";\nimport useSetVerse from \"../../utils/useSetVerse\";\nimport useVerseFunctions from \"../../utils/useVerseFunctions\";\n\nimport './VerseContent.styles.scss';\n\ntype VerseContentProps = {\n  quranData: AppState[\"userData\"][\"quranData\"];\n  translationFlag: AppState[\"userData\"][\"settings\"][\"translationFlag\"];\n  autoSwitchVerse?: AppState[\"userData\"][\"settings\"][\"autoSwitchVerse\"];\n  selectedLanguageKey?: AppState[\"userData\"][\"settings\"][\"selectedLanguageKey\"],\n  addNewSurahToFavourites: AppState[\"addNewSurahToFavourites\"];\n  addNewAyaToFavourites: AppState[\"addNewAyaToFavourites\"];\n  removeAyaFromFavourites: AppState[\"removeAyaFromFavourites\"];\n}\n\nconst VerseContent = ({\n                        quranData,\n                        translationFlag,\n                        autoSwitchVerse,\n                        addNewSurahToFavourites,\n                        addNewAyaToFavourites,\n                        removeAyaFromFavourites,\n                      }: VerseContentProps) => {\n  const { previousAya, nextAya } = useVerseFunctions();\n\n  const setVerse = useSetVerse();\n\n  const [autoSwitchVerseDoneFlag, setAutoSwitchVerseDoneFlag] = useState(false);\n\n  const [isLoadingFlag, setIsLoadingFlag] = useState(false);\n\n  useEffect(() => {\n    const shouldFillTranslationText = translationFlag && !quranData.currentTranslationText;\n    const shouldFillAyaText = !quranData.currentAyaText && quranData.currentAyaNumber;\n\n    if (shouldFillAyaText || shouldFillTranslationText || !quranData.number) {\n      //for people who comes from the old version\n      loadVerse();\n    }\n\n    if (autoSwitchVerse && !autoSwitchVerseDoneFlag) {\n      nextAya();\n      setAutoSwitchVerseDoneFlag(true);\n    }\n\n    document.addEventListener('keydown', initHotkeys);\n\n    return () => document.removeEventListener('keydown', initHotkeys);\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [translationFlag]);\n\n  const addToFavourites = (): void => {\n    const surahKey = `surah_${quranData.surahNumber}`;\n    const ayaKey = `verse_${quranData.currentAyaNumber}`;\n    const fav = quranData.favourites;\n\n    if (!_get(fav, surahKey)) { //Surah is not found in the favourite list\n      addNewSurahToFavourites(surahKey, ayaKey);\n    }\n    else if (!fav[surahKey][ayaKey]) {\n      //Surah is already in the favourite list but the aya is not found yet\n      addNewAyaToFavourites(surahKey, ayaKey);\n    }\n    else { //Surah and aya are already in the favourite list\n      removeAyaFromFavourites(surahKey, ayaKey);\n    }\n  };\n\n  const loadVerse = async () => {\n    setIsLoadingFlag(true);\n    await setVerse(quranData.surahNumber, quranData.currentAyaNumber);\n    setIsLoadingFlag(false);\n  }\n\n  const getNextVerse = async () => {\n    setIsLoadingFlag(true);\n    await nextAya();\n    setIsLoadingFlag(false);\n  }\n\n  const getPreviousVerse = async () => {\n    setIsLoadingFlag(true);\n    await previousAya();\n    setIsLoadingFlag(false);\n  }\n\n  const shouldShowBasmallah = () => {\n    //exclude first aya of the quran and \"At-Tawba\" surah because it doesn't have basmallah\n    return (quranData.currentAyaNumber === 1 && quranData.number !== 1 && quranData.surahNumber !== 9);\n  }\n\n  return (\n    <div className=\"verseContent\">\n      <div className=\"verseContent__text\">\n        {shouldShowBasmallah() && <CustomText className=\"verseContent__text--ar\"\n                                              fontSize=\"24px\">بِسْمِ اللَّهِ الرَّحْمَٰنِ الرَّحِيمِ</CustomText>}\n        <CustomText className=\"verseContent__text--ar\">\n          {quranData.currentAyaText}\n        </CustomText>\n        {translationFlag &&\n        (isLoadingFlag ?\n          <Spinner /> :\n          <CustomText {...quranData.direction === \"rtl\" && { dir: 'rtl' }}>\n            {quranData.currentTranslationText}\n          </CustomText>)\n        }\n      </div>\n\n      <div className=\"verseContent__iconsContent\">\n        <PreviousVerseButton onClickEvent={getPreviousVerse} />\n\n        <AddToFavButton\n          isActive={_get(quranData, `favourites.surah_${quranData.surahNumber}.verse_${quranData.currentAyaNumber}`)}\n          onClickEvent={addToFavourites} />\n\n        <VerseAudio />\n\n        <TranslationButton />\n\n        <Tafseer />\n\n        <NextVerseButton onClickEvent={getNextVerse} />\n      </div>\n    </div>\n  );\n};\n\nexport default VerseContent;\n\n","import React from 'react';\nimport shallow from \"zustand/shallow\";\n\nimport VerseContent from './VerseContent.view';\nimport { useStore } from '../../store';\n\nexport default () => {\n  const {\n    quranData,\n    autoSwitchVerse,\n    verseFlag,\n    translationFlag,\n    selectedLanguageKey,\n  } = useStore(state => ({\n    quranData: state.userData.quranData,\n    autoSwitchVerse: state.userData.settings.autoSwitchVerse,\n    verseFlag: state.userData.settings.verseFlag,\n    translationFlag: state.userData.settings.translationFlag,\n    selectedLanguageKey: state.userData.settings.selectedLanguageKey,\n  }), shallow);\n\n  const addNewSurahToFavourites = useStore(state => state.addNewSurahToFavourites);\n\n  const addNewAyaToFavourites = useStore(state => state.addNewAyaToFavourites);\n\n  const removeAyaFromFavourites = useStore(state => state.removeAyaFromFavourites);\n\n  if (verseFlag === false) {\n    // verseFlag could be undefined for old users\n    return null;\n  }\n\n  return (<VerseContent quranData={quranData}\n                        autoSwitchVerse={autoSwitchVerse}\n                        translationFlag={translationFlag !== false}\n                        addNewSurahToFavourites={addNewSurahToFavourites}\n                        addNewAyaToFavourites={addNewAyaToFavourites}\n                        removeAyaFromFavourites={removeAyaFromFavourites}\n                        selectedLanguageKey={selectedLanguageKey} />)\n}\n","import { _FRIDAY } from './constants';\n\ntype IsTodayFriday = (date: Date) => boolean;\n\nconst isTodayFriday: IsTodayFriday = date => {\n  const weekDay = date.toLocaleDateString('en-US', { weekday: 'long' });\n\n  return weekDay === _FRIDAY;\n};\n\nexport default isTodayFriday;\n","export const _MUSLIM_WORLD_LEAGUE = 'MuslimWorldLeague';\nexport const _NORTH_AMERICA = 'NorthAmerica';\nexport const _EGYPTIAN = 'Egyptian';\nexport const _UMM_ALQURA = 'UmmAlQura';\nexport const _KARACHI = 'Karachi';\nexport const _DUBAI = 'Dubai';\nexport const _QATAR = 'Qatar';\nexport const _KUWAIT = 'Kuwait';\nexport const _MOONSIGHTING_COMMITTEE = 'MoonsightingCommittee';\nexport const _SINGAPORE = 'Singapore';\nexport const _TURKEY = 'Turkey';\nexport const _TEHRAN = 'Tehran';\n","import {\n  _EGYPTIAN,\n  _MUSLIM_WORLD_LEAGUE,\n  _NORTH_AMERICA,\n  _UMM_ALQURA,\n} from '../components/PrayerTab/PrayerTab.constant';\nimport _get from 'lodash/get';\n\nexport default (name: string): string => {\n  const calculationMethodNames = [\n    { old: 'MWL', new: _MUSLIM_WORLD_LEAGUE },\n    { old: 'ISNA', new: _NORTH_AMERICA },\n    { old: 'Egypt', new: _EGYPTIAN },\n    { old: 'Makkah', new: _UMM_ALQURA },\n  ];\n  const result = calculationMethodNames.find(item => item.old === name);\n\n  return _get(result, 'new', name);\n};\n","export const ADHAN_VOICES_ARRAY = [\n  'no-audio',\n  'adhan-abdulbasit-abdusamad',\n  'adhan-abul-ainain-shuaisha',\n  'adhan-ali-ibn-ahmad-mala',\n  'adhan-mahmoud-ali-al-banna',\n  'adhan-muhammad-refaat',\n  'adhan-mustafa-ismail',\n  'adhan-nasser-al-qatami',\n]\n","import shallow from \"zustand/shallow\";\nimport _isEmpty from 'lodash/isEmpty';\nimport _get from 'lodash/get';\nimport { useStore } from \"../store\";\nimport { ADHAN_VOICES_ARRAY } from \"../components/AdhanVoice/AdhanVoice.constants\";\n\nexport default () => {\n  const {\n    selectedAdhanVoice,\n    prayerTimesObject,\n  } = useStore((state: AppState) => ({\n    selectedAdhanVoice: state.userData.selectedAdhanVoice,\n    prayerTimesObject: state.userData.prayerTimesObject,\n  }), shallow);\n\n  const updateSelectedAdhanVoice = useStore((state: AppState) => state.updateSelectedAdhanVoice);\n\n  const sendMessageToSetAlarms = () => {\n    try {\n      window.chrome.runtime.sendMessage({ name: 'setPrayerAlarms' }, () => {\n        // eslint-disable-next-line no-console\n        console.log('Prayer alarms are set successfully');\n      });\n    }\n    catch (error) {\n      console.warn(\"Couldn't set prayer alarms:\", error.message);\n    }\n  }\n\n  const setPrayerAlarms = (shouldForceAlarms?: boolean) => {\n    //set default value for selectedAdhanVoice\n    !selectedAdhanVoice && updateSelectedAdhanVoice(ADHAN_VOICES_ARRAY[1]);\n\n    try {\n      window.chrome.alarms.getAll(result => {\n        const timeNow = Date.now();\n        const ishaTime = _get(prayerTimesObject, ['isha', 'timeValue']);\n        const isDayEnded = timeNow >= ishaTime;\n        const shouldSetAlarms = !isDayEnded && (_isEmpty(result) || shouldForceAlarms);\n\n        if (shouldSetAlarms) {\n          sendMessageToSetAlarms();\n        }\n        else {\n          console.log('Prayer alarms are already set');\n          isDayEnded && console.log('Day is ended so no more alarms');\n        }\n      })\n    }\n    catch (error) {\n      console.warn(\"Couldn't get prayer alarms:\", error.message);\n    }\n  }\n\n  const clearPrayerAlarms = () => {\n    try {\n      window.chrome.runtime.sendMessage({ name: 'clearPrayerAlarms' },\n        () => {\n          // eslint-disable-next-line no-console\n          console.log('Prayer alarms are cleared successfully');\n        });\n    }\n    catch (error) {\n      console.warn(\"Couldn't clear prayer alarms:\", error.message);\n    }\n  }\n\n  return { setPrayerAlarms, clearPrayerAlarms };\n}\n","import React, { useEffect, useState } from 'react';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport adhan from 'adhan';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport duration from 'dayjs/plugin/duration';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { Box, Button } from '@chakra-ui/react';\n\nimport strings from '../../locales';\nimport { _ASR, _DHUHR, _FAJR, _ISHA, _JUMAA, _MAGHRIB, _SUNRISE } from '../../utils/constants';\nimport isTodayFriday from '../../utils/isTodayFriday';\nimport convertOldCalculationMethodNames from \"../../utils/convertOldCalculationMethodNames\";\nimport CustomText from \"../CustomText/CustomText.view\";\nimport usePrayerTimes from \"../../utils/usePrayerTimes\";\nimport en from \"../../locales/en\";\nimport ar from \"../../locales/ar\";\n\nimport './PrayerTimes.styles.scss';\n\ndayjs.extend(duration);\ndayjs.extend(utc);\ndayjs.extend(customParseFormat);\n\nconst PrayerTimes = ({\n                       prayerMethod,\n                       dayNightFlag,\n                       clock24Flag,\n                       manualPrayerTimes,\n                       timeNow,\n                       location,\n                       prayerTimesObject,\n                       updatePrayerTimesObject,\n                     }: PrayerTimesProps) => {\n  useEffect(() => {\n    initPrayerTimes();\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [\n    prayerMethod,\n    dayNightFlag,\n    clock24Flag,\n    manualPrayerTimes,\n    timeNow,\n    location,\n  ]);\n\n  const { setPrayerAlarms } = usePrayerTimes();\n\n  const [nextPrayerObject, setNextPrayerObject] = useState<NextPrayerObject>({});\n\n  const generatePrayerTimesObject = (times: adhan.PrayerTimes) => {\n    const prayerKeys = [_FAJR, _SUNRISE, _DHUHR, _ASR, _MAGHRIB, _ISHA];\n    const prayerTimesObject: { [key: string]: any } = {};\n\n    prayerKeys.forEach(key => {\n      // @ts-ignore\n      let timeValue = dayjs(times[key]);\n\n      if (dayNightFlag) {\n        timeValue = dayjs(timeValue).add(1, 'hour');\n      }\n\n      prayerTimesObject[key] = {\n        label: (isTodayFriday(new Date()) && key === _DHUHR) ? _JUMAA : key,\n        value: timeValue.format(clock24Flag ? 'HH:mm' : 'hh:mm a'),\n        timeValue: timeValue.valueOf(),\n        // @ts-ignore\n        labelEn: en[key], //for alarms in background.js\n        // @ts-ignore\n        labelAr: ar[key], //for alarms in background.js\n      };\n    });\n\n    updatePrayerTimesObject(prayerTimesObject);\n\n    return prayerTimesObject;\n  };\n\n  const generateTimes = () => {\n    const date = new Date();\n    const coordinates = new adhan.Coordinates(location.lat, location.lng);\n    const calculationMethod = convertOldCalculationMethodNames(prayerMethod);\n    // @ts-ignore\n    const params = adhan.CalculationMethod[calculationMethod]();\n\n    params.highLatitudeRule = adhan.HighLatitudeRule.TwilightAngle; //fix issue of isha having same time of fajr\n    params.adjustments = { ...manualPrayerTimes };\n\n    return new adhan.PrayerTimes(coordinates, date, params);\n  };\n\n  const initPrayerTimes = async () => {\n    if (location) {\n      const times = generateTimes();\n      const prayerTimesObject = generatePrayerTimesObject(times);\n\n      setPrayerAlarms();\n      getNextPrayer(prayerTimesObject);\n    }\n  };\n\n  const getNextPrayer = (prayerTimesObject: PrayerTimesObject) => {\n    //logic is on this link: https://www.notion.so/mohamedabusrea/Quran-Tab-dbf87314a7f742aabe5588d232aa6790\n    const prayerKeysArray = Object.keys(prayerTimesObject);\n    let diff; //hold diff between prev/next prayer\n    let prayerTime; //hold the prayer time that will be compare with the timeNow\n    let prevPrayerKey;\n\n    const nextPrayerIndex = prayerKeysArray.findIndex((key) => {\n      prayerTime = dayjs(prayerTimesObject[key].value, clock24Flag ? 'HH:mm' : 'hh:mm a');\n      diff = prayerTime.diff(timeNow); //diff in milliseconds by default\n\n      return diff > 0;\n    });\n\n    if (nextPrayerIndex <= 0) {\n      //Next prayer is the Fajr of the following day\n      prayerTime = dayjs(prayerTimesObject[prayerKeysArray[0]].value, clock24Flag ? 'HH:mm' : 'hh:mm a');\n\n      if (nextPrayerIndex < 0) {\n        prayerTime = dayjs(prayerTime).add(1, 'day');\n      }\n      diff = prayerTime.diff(timeNow); //diff in milliseconds by default\n      prevPrayerKey = prayerKeysArray[prayerKeysArray.length - 1];\n    }\n    else {\n      prevPrayerKey = prayerKeysArray[nextPrayerIndex - 1];\n    }\n\n    let prevPrayerTime = dayjs(prayerTimesObject[prevPrayerKey].value, clock24Flag ? 'HH:mm' : 'hh:mm a');\n\n    if (nextPrayerIndex === 0) {\n      prevPrayerTime = dayjs(prevPrayerTime).subtract(1, 'day');\n    }\n\n    // @ts-ignore\n    const prevNextPrayersDiff = prayerTime.diff(prevPrayerTime);\n    // @ts-ignore\n    const remainingTime = dayjs.utc(prayerTime.diff(timeNow)).format('HH:mm');\n    // @ts-ignore\n    const remainingPercentage = Math.abs((diff / prevNextPrayersDiff) * 100);\n\n    setNextPrayerObject({\n      key: prayerKeysArray[nextPrayerIndex < 0 ? 0 : nextPrayerIndex],\n      remainingTime,\n      remainingPercentage,\n    });\n  };\n\n  const shouldShowRedLine = () => {\n    const remainingTimeSplit = _get(nextPrayerObject, 'remainingTime', '00:00').split(':');\n    const remainingMinutes = dayjs.duration({\n      hours: remainingTimeSplit[0],\n      minutes: remainingTimeSplit[1]\n    }).asMinutes();\n\n    return remainingMinutes < 60;\n  };\n\n  const getPrayerTimesRowClasses = (key: string) => {\n    return classNames('prayerTimes__row',\n      'overlay',\n      { 'prayerTimes__row--active': key === nextPrayerObject.key });\n  }\n\n  const getRemainingLineClasses = () => {\n    return classNames('prayerTimes__remainingLine',\n      { 'prayerTimes__remainingLine--red': shouldShowRedLine() })\n  };\n\n  const chooseLocation = () => {\n    //I'm too lazy to pass props\n    const settingsElem = document.querySelector('.settings .chakra-button');\n    const prayerTabElem = document.querySelector('.settings .tabsTitles__tab--2');\n    // @ts-ignore\n    settingsElem && settingsElem.click();\n    // @ts-ignore\n    prayerTabElem && prayerTabElem.click();\n  }\n\n  if (_isEmpty(location)) {\n    return (\n      <Box className=\"prayerTimes\"\n           p={0}>\n        <Button\n          width=\"100px\"\n          height=\"300px\"\n          variant=\"ghost\"\n          color=\"var(--color-light1)\"\n          whiteSpace=\"inherit\"\n          onClick={chooseLocation}\n        >\n          <CustomText hasArabic>\n            {strings.chooseLocation}\n          </CustomText>\n        </Button>\n      </Box>\n    )\n  }\n\n  if (_isEmpty(prayerTimesObject)) {\n    console.log('prayerTimesObject is empty');\n    return null;\n  }\n\n  return (\n    <Box as=\"ul\" className=\"prayerTimes element-has-ar\" display={{ base: \"none\", sm: \"flex\" }}>\n      {\n        Object.keys(prayerTimesObject)\n          .map(key => <li className={getPrayerTimesRowClasses(key)}\n                          key={key}>\n            <div className=\"prayerTimes__data\">\n              <p className=\"prayerTimes__title\">\n                {strings[prayerTimesObject[key].label]}\n              </p>\n              <p className=\"prayerTimes__value\">{prayerTimesObject[key].value}</p>\n            </div>\n            <div className=\"prayerTimes__remaining\">\n              <p>Remaining</p>\n              <p className=\"prayerTimes__remainingTime\">{nextPrayerObject.remainingTime}</p>\n            </div>\n            <div className={getRemainingLineClasses()}\n                 style={{ 'width': nextPrayerObject.remainingPercentage + '%' }} />\n          </li>)}\n    </Box>\n  );\n}\n\nexport default PrayerTimes;\n\n","import React, { useEffect, useState } from 'react';\nimport shallow from 'zustand/shallow';\nimport dayjs from 'dayjs';\n\nimport { useStore } from '../../store'\nimport PrayerTimes from './PrayerTimes.view';\n\nlet timeNowInterval: NodeJS.Timeout;\n\nexport default () => {\n  const [timeNow, setTimeNow] = useState(dayjs());\n\n  useEffect(() => {\n    timeNowInterval && clearInterval(timeNowInterval);\n    timeNowInterval = setInterval(() => {\n      setTimeNow(dayjs());\n    }, 60000);\n\n    return () => clearInterval(timeNowInterval);\n  }, []);\n\n  const {\n    prayerMethod,\n    dayNightFlag,\n    clock24Flag,\n    manualPrayerTimes,\n    prayerTimesFlag,\n    location,\n    prayerTimesObject,\n  } = useStore(state => ({\n    prayerMethod: state.userData.settings.prayerTimes.prayerMethod,\n    dayNightFlag: state.userData.settings.prayerTimes.dayNightFlag,\n    clock24Flag: state.userData.settings.clock24Flag,\n    manualPrayerTimes: state.userData.settings.manualPrayerTimes,\n    prayerTimesFlag: state.userData.settings.prayerTimesFlag,\n    location: state.userData.location,\n    prayerTimesObject: state.userData.prayerTimesObject,\n  }), shallow);\n\n  const updatePrayerTimesObject = useStore(state => state.updatePrayerTimesObject);\n\n  if (!prayerTimesFlag) {\n    return null;\n  }\n\n  return (<PrayerTimes prayerMethod={prayerMethod}\n                       dayNightFlag={dayNightFlag}\n                       clock24Flag={clock24Flag}\n                       manualPrayerTimes={manualPrayerTimes}\n                       timeNow={timeNow}\n                       location={location}\n                       prayerTimesObject={prayerTimesObject}\n                       updatePrayerTimesObject={updatePrayerTimesObject} />);\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types'\n\nimport './Toggle.styles.scss';\n\nconst Toggle = ({ flag, onClick }) => {\n  const toggleClasses = classNames('toggle', { 'toggle--active': flag });\n\n  return (\n    <div className={toggleClasses}\n         onClick={onClick}>\n      <div className='toggle__circle' />\n    </div>\n  );\n};\n\nToggle.propTypes = {\n  flag: PropTypes.bool,\n  onClick: PropTypes.func,\n}\n\nexport default Toggle;\n","import * as React from 'react';\n\nimport usePrayerTimes from '../../utils/usePrayerTimes';\nimport Toggle from '../Toggle/Toggle.view.jsx';\nimport { _AR, _EN } from '../../utils/constants';\nimport CustomSelect from '../CustomSelect/CustomSelect.view';\nimport strings from '../../locales/index';\nimport changeLanguage from '../../utils/changeLanguage';\n\ntype GeneralTabProps = {\n  className: string;\n  settings: AppState[\"userData\"][\"settings\"];\n  updateSettingsProperty: AppState[\"updateSettingsProperty\"];\n}\n\nconst GeneralTab = ({ className, settings, updateSettingsProperty }: GeneralTabProps) => {\n  const { clearPrayerAlarms } = usePrayerTimes();\n\n  const generalToggles = [\n    {\n      title: 'darkTheme',\n      flag: settings.darkThemeFlag,\n      onClick: () => updateSettingsProperty('darkThemeFlag', !settings.darkThemeFlag),\n    },\n    {\n      title: 'date',\n      flag: settings.dateFlag !== false, // dateFlag could be undefined for old users\n      onClick: () => updateSettingsProperty('dateFlag', !settings.dateFlag),\n    },\n    {\n      title: 'clock',\n      flag: settings.clockFlag,\n      onClick: () => updateSettingsProperty('clockFlag', !settings.clockFlag),\n    },\n    {\n      title: 'clock24',\n      flag: settings.clock24Flag,\n      onClick: () => updateSettingsProperty('clock24Flag', !settings.clock24Flag),\n    },\n    {\n      title: 'favourites',\n      flag: settings.favouritesFlag,\n      onClick: () => updateSettingsProperty('favouritesFlag', !settings.favouritesFlag),\n    },\n    {\n      title: 'prayerTimes',\n      flag: settings.prayerTimesFlag,\n      onClick: () => {\n        if (settings.prayerTimesFlag !== false) {\n          clearPrayerAlarms();\n        }\n        updateSettingsProperty('prayerTimesFlag', !settings.prayerTimesFlag)\n      },\n    },\n  ];\n\n  const languageOptions = [\n    { value: _AR, label: strings.ar },\n    { value: _EN, label: strings.en },\n  ];\n\n  const getDropdownValue = languageOptions.find(obj => obj.value === settings.selectedLanguageKey) || languageOptions[1];\n\n  const changeSelectedLanguageKey = ({ value }: { value: string }) => {\n    updateSettingsProperty('selectedLanguageKey', value);\n    changeLanguage(value);\n  };\n\n  return (<ul className={className}>\n    <li className='popupMenu__row'>\n      <div>{strings.language}</div>\n      <CustomSelect options={languageOptions}\n                    value={getDropdownValue}\n                    onChange={changeSelectedLanguageKey} />\n    </li>\n    {generalToggles.map((item, index) =>\n      <li className='popupMenu__row' key={index}>\n        <div>\n          {strings[item.title]}\n        </div>\n        <Toggle flag={item.flag}\n                onClick={item.onClick} />\n      </li>)}\n  </ul>);\n};\n\nexport default GeneralTab;\n","import React from 'react';\nimport GeneralTab from './GeneralTab.view';\nimport { useStore } from \"../../store\";\n\ntype Props = {\n  className: string;\n}\n\nexport default ({ className }: Props) => {\n  const settings = useStore(state => state.userData.settings);\n\n  const updateSettingsProperty = useStore(state => state.updateSettingsProperty);\n\n  return (<GeneralTab className={className}\n                      settings={settings}\n                      updateSettingsProperty={updateSettingsProperty} />);\n};\n","import {\n  ABDULBASIT_MURATTAL,\n  ABDULLAH_BASFAR,\n  ABDULSAMAD,\n  ABDURRAHMAAN_SUDAIS,\n  AHMED_AJAMY,\n  ALAFASY,\n  AYMAN_SWOAID,\n  HANI_RIFAI,\n  HUDHAIFY,\n  HUSARY,\n  HUSARY_MUJAWWAD,\n  IBRAHIM_AKHBAR,\n  MAHER_MUAIQLY,\n  MINSHAWI,\n  MINSHAWI_MUJAWWAD,\n  MUHAMMAD_AYYOUB,\n  MUHAMMAD_JIBREEL,\n  NASSER_ALQATAMI,\n  PARHIZGAR,\n  SAOOD_SHURAYM,\n  SHAATREE,\n  YASSER_ALDOSSARY,\n} from \"../../utils/constants\";\n\nexport default [\n  ABDULBASIT_MURATTAL,\n  ABDULLAH_BASFAR,\n  ABDURRAHMAAN_SUDAIS,\n  ABDULSAMAD,\n  SHAATREE,\n  AHMED_AJAMY,\n  ALAFASY,\n  HANI_RIFAI,\n  HUSARY,\n  HUSARY_MUJAWWAD,\n  HUDHAIFY,\n  IBRAHIM_AKHBAR,\n  MAHER_MUAIQLY,\n  MINSHAWI,\n  MINSHAWI_MUJAWWAD,\n  MUHAMMAD_AYYOUB,\n  MUHAMMAD_JIBREEL,\n  SAOOD_SHURAYM,\n  PARHIZGAR,\n  AYMAN_SWOAID,\n  NASSER_ALQATAMI,\n  YASSER_ALDOSSARY,\n];\n","import React from 'react';\nimport { Box, Select } from '@chakra-ui/react';\n\nimport strings from '../../locales';\nimport { _INITIAL_USER_DATA } from '../../utils/constants';\nimport recitersDataArray from './recitersDataArray.const';\nimport Toggle from '../Toggle/Toggle.view.jsx';\n\n\ntype VerseTabProps = {\n  className: string,\n  settings: AppState[\"userData\"][\"settings\"],\n  updateSettingsProperty: (arg1: string, arg2: {}) => void,\n};\n\nconst VerseTab = ({ settings, className, updateSettingsProperty }: VerseTabProps) => {\n  const verseToggles = [\n    {\n      title: 'showVerse',\n      flag: settings.verseFlag !== false,\n      onClick: () => updateSettingsProperty('verseFlag', !settings.verseFlag),\n    },\n    {\n      title: 'showTranslation',\n      flag: settings.translationFlag !== false,\n      onClick: () => {\n        const flagValue = settings.translationFlag !== false;\n        updateSettingsProperty('translationFlag', !flagValue)\n      },\n    },\n    {\n      title: 'autoSwitchVerse',\n      flag: settings.autoSwitchVerse,\n      onClick: () => updateSettingsProperty('autoSwitchVerse', !settings.autoSwitchVerse),\n    },\n    {\n      title: 'randomVerse',\n      flag: settings.randomVerseFlag,\n      onClick: () => updateSettingsProperty('randomVerseFlag', !settings.randomVerseFlag),\n    },\n    {\n      title: 'continuesPlayingVerse',\n      flag: settings.continuesPlayingVerseFlag !== false,\n      onClick: () => {\n        const value = settings.continuesPlayingVerseFlag === false;\n        updateSettingsProperty('continuesPlayingVerseFlag', value);\n      },\n    },\n  ];\n\n  const changeRecitersOptions = (value: string) => {\n    updateSettingsProperty('selectedReciter', value);\n  };\n\n  const selectedReciterValue = settings.selectedReciter || _INITIAL_USER_DATA.settings.selectedReciter\n\n  return (\n    <ul className={className}>\n      <li className='popupMenu__row'>\n        <Box mr={24}>{strings.reciters}</Box>\n        <Select defaultValue={selectedReciterValue}\n                onChange={event => changeRecitersOptions(event.target.value)}>\n          {recitersDataArray.map(identifier => <option key={identifier}\n                                                       value={identifier}>\n            {strings[identifier]}\n          </option>)}\n        </Select>\n      </li>\n      {\n        verseToggles.map((item, index) => <li className='popupMenu__row' key={index}>\n          <div>\n            {strings[item.title]}\n          </div>\n          <Toggle flag={item.flag}\n                  onClick={item.onClick} />\n        </li>)\n      }\n    </ul>\n  );\n};\n\nexport default VerseTab;\n","import React from 'react';\nimport { useStore } from '../../store';\nimport VerseTab from \"./VerseTab.view\";\n\ntype props = {\n  className: string\n}\n\nexport default ({ className }: props) => {\n  const settings = useStore(state => state.userData.settings);\n\n  const updateSettingsProperty = useStore(state => state.updateSettingsProperty);\n\n  return (<VerseTab className={className}\n                    settings={settings}\n                    updateSettingsProperty={updateSettingsProperty} />);\n};\n","import React, { useState } from 'react';\nimport { Box, Select } from \"@chakra-ui/react\";\nimport _isEqual from \"lodash/isEqual\";\nimport _debounce from \"lodash/debounce\";\nimport countries from \"../../assets/countries.json\";\n\nimport strings from \"../../locales\";\nimport usePrayerTimes from \"../../utils/usePrayerTimes\";\n\ntype SelectLocationProps = {\n  location: AppState[\"userData\"][\"location\"];\n  updateLocation: AppState[\"updateLocation\"];\n}\n\ntype CitiesType = {\n  \"country\": string;\n  \"name\": string;\n  \"lat\": string;\n  \"lng\": string;\n}[];\n\nconst SelectLocation = ({ location, updateLocation }: SelectLocationProps) => {\n  const { setPrayerAlarms } = usePrayerTimes();\n\n  const updatePrayerAlarms = _debounce(() => setPrayerAlarms(true), 500);\n\n  const getCountry = () => {\n    if (location && location.country !== \"IL\") {\n      return location.country\n    }\n    return '';\n  };\n\n  const [selectedCountry, setSelectedCountry] = useState(getCountry());\n\n  const generateCountriesList = () => {\n    return Object.entries(countries).map(([key, value]) =>\n      <option key={key} value={key}>{value.name}</option>\n    );\n  }\n\n  const generateCitiesList = () => {\n    if (selectedCountry && selectedCountry !== \"IL\") {\n      // @ts-ignore\n      const citiesArray: CitiesType = require(`../../assets/cities/${selectedCountry}.json`);\n\n      return (\n        citiesArray\n          .map(item => <option key={`${item.name},${item.lat},${item.lng}`}\n                               value={`${item.name},${item.lat},${item.lng}`}>{item.name}</option>)\n      )\n    }\n    return null;\n  }\n\n  const updateLocationData = (value: string) => {\n    const [city, lat, lng] = value.split(',');\n    const result = {\n      country: selectedCountry,\n      city,\n      lat: parseFloat(lat),\n      lng: parseFloat(lng),\n    };\n\n    if (!_isEqual(location, result)) {\n      updateLocation(result);\n      updatePrayerAlarms();\n    }\n  }\n\n  return (\n    <>\n      <li className='popupMenu__row'>\n        <Box mr={12}>\n          {strings.country}\n        </Box>\n        <Select placeholder={strings.selectCountry}\n                maxW=\"240px\"\n                defaultValue={location && location.country}\n                onChange={event => setSelectedCountry(event.target.value)}>\n          {generateCountriesList()}\n        </Select>\n      </li>\n      <li className='popupMenu__row'>\n        <Box mr={12}>\n          {strings.city}\n        </Box>\n        <Select placeholder={strings.selectCity}\n                maxW=\"240px\"\n                defaultValue={location && `${location.city},${location.lat},${location.lng}`}\n                onChange={event => updateLocationData(event.target.value)}>\n          {generateCitiesList()}\n        </Select>\n      </li>\n    </>\n  );\n}\n\nexport default React.memo(SelectLocation);\n","import React from 'react';\nimport { useStore } from '../../store';\nimport SelectLocation from './SelectLocation.view'\n\nexport default () => {\n  const location = useStore(state => state.userData.location);\n\n  const updateLocation = useStore(state => state.updateLocation);\n\n  return (<SelectLocation location={location}\n                          updateLocation={updateLocation} />);\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Box, IconButton, Select } from \"@chakra-ui/react\";\nimport { MdVolumeUp } from \"react-icons/md\";\n\nimport strings from \"../../locales\";\nimport { ADHAN_VOICES_ARRAY } from \"./AdhanVoice.constants\";\n\ntype AdhanVoiceProps = {\n  selectedAdhanVoice: AppState[\"userData\"][\"selectedAdhanVoice\"];\n  adhanAudioLevel: AppState[\"userData\"][\"adhanAudioLevel\"];\n  updateSelectedAdhanVoice: AppState[\"updateSelectedAdhanVoice\"];\n}\n\nconst AdhanVoice = ({ selectedAdhanVoice, adhanAudioLevel, updateSelectedAdhanVoice }: AdhanVoiceProps) => {\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = adhanAudioLevel;\n    }\n  }, [adhanAudioLevel]);\n\n  const audioRef: React.MutableRefObject<null | HTMLAudioElement> = useRef(null);\n\n  const [isAdhanVoicePlaying, setIsAdhanVoicePlaying] = useState(false);\n\n  const shouldShowAdhanAudioIcon = selectedAdhanVoice && selectedAdhanVoice !== 'no-audio';\n\n  const toggleAdhanVoice = () => {\n    setIsAdhanVoicePlaying(!isAdhanVoicePlaying);\n  }\n\n  const updateAdhanVoice = (adhanVoice: string) => {\n    isAdhanVoicePlaying && toggleAdhanVoice();\n    updateSelectedAdhanVoice(adhanVoice);\n  }\n\n  const onLoadedData = () => {\n    if (audioRef.current) {\n      audioRef.current.play();\n    }\n  };\n\n  return (\n    <li className='popupMenu__row'>\n      <Box mr={12}>\n        {strings.adhanVoice}\n      </Box>\n      {shouldShowAdhanAudioIcon &&\n      <IconButton\n        variant=\"ghost\"\n        aria-label=\"About me\"\n        fontSize=\"xl\"\n        color=\"var(--color-light1)\"\n        icon={<MdVolumeUp />}\n        onClick={toggleAdhanVoice} />}\n      <Select maxW=\"240px\"\n              defaultValue={selectedAdhanVoice}\n              onChange={event => updateAdhanVoice(event.target.value)}>\n        {ADHAN_VOICES_ARRAY.map(item => <option key={item} value={item}>{strings[item]}</option>)}\n      </Select>\n      {isAdhanVoicePlaying &&\n      <audio ref={audioRef}\n             onLoadedData={onLoadedData}>\n        <source src={`${process.env.PUBLIC_URL}/data/adhan/${selectedAdhanVoice}.mp3`}\n                type=\"audio/mpeg\" />\n      </audio>\n      }\n    </li>\n  );\n}\n\nexport default AdhanVoice;\n","import React from 'react';\nimport { useStore } from '../../store';\nimport AdhanVoice from \"./AdhanVoice.view\";\n\nexport default () => {\n  const selectedAdhanVoice = useStore(state => state.userData.selectedAdhanVoice);\n\n  const adhanAudioLevel = useStore(state => state.userData.adhanAudioLevel);\n\n  const updateSelectedAdhanVoice = useStore(state => state.updateSelectedAdhanVoice);\n\n  return (<AdhanVoice selectedAdhanVoice={selectedAdhanVoice}\n                      adhanAudioLevel={adhanAudioLevel ?? 1}\n                      updateSelectedAdhanVoice={updateSelectedAdhanVoice} />);\n\n};\n","import React from 'react';\nimport {\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\"\n\ntype CustomInputProps = {\n  value: number | string;\n  onChange: (arg0: number | string) => void;\n}\n\nconst CustomInput = ({\n                       value,\n                       onChange,\n                     }: CustomInputProps) => {\n\n  return (\n    <NumberInput value={value}\n                 size=\"sm\"\n                 onChange={onChange}>\n      <NumberInputField />\n      <NumberInputStepper>\n        <NumberIncrementStepper />\n        <NumberDecrementStepper />\n      </NumberInputStepper>\n    </NumberInput>\n  );\n};\n\nexport default CustomInput;\n","import React from 'react';\nimport { Box } from \"@chakra-ui/react\";\nimport _debounce from 'lodash/debounce';\n\nimport strings from \"../../locales\";\nimport CustomInput from \"../CustomInput/CustomInput.view\";\nimport usePrayerTimes from \"../../utils/usePrayerTimes\";\n\ntype ManuelPrayerTimesKey = string | \"fajr\" | \"dhuhr\" | \"asr\" | \"maghrib\" | \"isha\";\n\ntype ManuelPrayerTimesSettingsProps = {\n  manualPrayerTimes: AppState[\"userData\"][\"settings\"][\"manualPrayerTimes\"];\n  updateManuelPrayerTime: AppState[\"updateManuelPrayerTime\"];\n};\n\nconst prayerTimesKeys = [\"fajr\", \"dhuhr\", \"asr\", \"maghrib\", \"isha\"];\n\nconst ManuelPrayerTimesSettings = ({ manualPrayerTimes, updateManuelPrayerTime }: ManuelPrayerTimesSettingsProps) => {\n  const { setPrayerAlarms } = usePrayerTimes();\n\n  const updatePrayerAlarms = _debounce(() => setPrayerAlarms(true), 500);\n\n  const updatePrayerTime = (key: string, value: string | number) => {\n    updateManuelPrayerTime(key, value);\n    updatePrayerAlarms();\n  }\n\n  return (\n    <li className='popupMenu__column'>\n      <div>{strings.adjustPrayerTimes}</div>\n      <ul>\n        {\n          prayerTimesKeys.map((key: ManuelPrayerTimesKey) =>\n            <li className='popupMenu__row'\n                style={{ paddingLeft: 0, paddingRight: 0 }}\n                key={key}>\n              <div>{strings[key]}</div>\n              <Box maxWidth=\"100px\">\n                <CustomInput value={manualPrayerTimes[key]}\n                             onChange={(value) => updatePrayerTime(key, value)} />\n              </Box>\n            </li>)\n        }\n      </ul>\n    </li>\n  );\n}\n\nexport default ManuelPrayerTimesSettings;\n","import React from 'react';\nimport { useStore } from '../../store';\nimport ManuelPrayerTimesSettings from \"./ManuelPrayerTimesSettings.view\";\nimport { _INITIAL_USER_DATA } from \"../../utils/constants\";\n\nexport default () => {\n  const manualPrayerTimes = useStore(state => state.userData.settings.manualPrayerTimes);\n\n  const updateManuelPrayerTime = useStore(state => state.updateManuelPrayerTime);\n\n  return (\n    <ManuelPrayerTimesSettings manualPrayerTimes={manualPrayerTimes || _INITIAL_USER_DATA.settings.manualPrayerTimes}\n                               updateManuelPrayerTime={updateManuelPrayerTime} />)\n}\n","import React from 'react';\nimport { Box, Select } from '@chakra-ui/react';\n\nimport strings from '../../locales';\nimport Toggle from '../Toggle/Toggle.view.jsx';\nimport {\n  _MUSLIM_WORLD_LEAGUE,\n  _EGYPTIAN,\n  _KARACHI,\n  _NORTH_AMERICA,\n  _UMM_ALQURA,\n  _DUBAI,\n  _QATAR,\n  _KUWAIT,\n  _MOONSIGHTING_COMMITTEE,\n  _SINGAPORE,\n  _TURKEY,\n  _TEHRAN,\n} from './PrayerTab.constant';\nimport convertOldCalculationMethodNames from \"../../utils/convertOldCalculationMethodNames\";\nimport SelectLocation from \"../SelectLocation/SelectLocation.index\";\nimport AdhanVoice from \"../AdhanVoice/AdhanVoice.index\";\nimport ManuelPrayerTimesSettings from \"../ManuelPrayerTimesSettings/ManuelPrayerTimesSettings.index\";\n\ntype PrayerTabProps = {\n  className: string;\n  prayerMethod: AppState['userData']['settings']['prayerTimes']['prayerMethod'];\n  dayNightFlag: AppState['userData']['settings']['prayerTimes']['dayNightFlag'];\n  playDoaaFlag: AppState['userData']['settings']['playDoaaFlag'];\n  location: AppState['userData']['location'];\n  updatePrayerMethod: AppState['updatePrayerMethod'];\n  toggleDayNightFlag: AppState['toggleDayNightFlag'];\n  togglePlayDoaaFlag: AppState['togglePlayDoaaFlag'];\n  updateLocation: AppState['updateLocation'];\n}\n\nconst PrayerTab = ({\n                     className,\n                     prayerMethod,\n                     dayNightFlag,\n                     playDoaaFlag,\n                     updatePrayerMethod,\n                     toggleDayNightFlag,\n                     togglePlayDoaaFlag,\n                   }: PrayerTabProps) => {\n    const calculationMethodOptions = [\n      { value: _MUSLIM_WORLD_LEAGUE, label: strings['calculationMethodMwl'] },\n      { value: _NORTH_AMERICA, label: strings['calculationMethodIsna'] },\n      { value: _EGYPTIAN, label: strings['calculationMethodEgypt'] },\n      { value: _UMM_ALQURA, label: strings['calculationMethodMakkah'] },\n      { value: _KARACHI, label: strings['calculationMethodKarachi'] },\n      { value: _DUBAI, label: strings['calculationMethodDubai'] },\n      { value: _QATAR, label: strings['calculationMethodQatar'] },\n      { value: _KUWAIT, label: strings['calculationMethodKuwait'] },\n      { value: _MOONSIGHTING_COMMITTEE, label: strings['calculationMethodMoonsightingCommittee'] },\n      { value: _SINGAPORE, label: strings['calculationMethodSingapore'] },\n      { value: _TURKEY, label: strings['calculationMethodTurkey'] },\n      { value: _TEHRAN, label: strings['calculationMethodTehran'] },\n    ];\n\n    const selectStyles = { maxW: \"240px\" };\n\n    const getSelectedCalculationMethod = () => {\n      const result = convertOldCalculationMethodNames(prayerMethod);\n      const selectedPrayerMethod = calculationMethodOptions.find(obj => obj.value === result) || calculationMethodOptions[0];\n\n      return selectedPrayerMethod.value;\n    };\n\n    return (\n      <ul className={className}>\n        <SelectLocation />\n        <li className='popupMenu__row'>\n          <Box mr={12}>\n            {strings.calculationMethod}\n          </Box>\n          <Select defaultValue={getSelectedCalculationMethod()}\n                  {...selectStyles}\n                  onChange={event => updatePrayerMethod(event.target.value)}>\n            {calculationMethodOptions.map(item => <option key={item.value}\n                                                          value={item.value}>{item.label}</option>)}\n          </Select>\n        </li>\n        <AdhanVoice />\n        <li className='popupMenu__row'>\n          <div>\n            {strings.daylightSavingTime}\n          </div>\n          <Toggle flag={dayNightFlag}\n                  onClick={toggleDayNightFlag} />\n        </li>\n        <li className='popupMenu__row'>\n          <div>\n            {strings.playDoaa}\n          </div>\n          <Toggle flag={playDoaaFlag}\n                  onClick={togglePlayDoaaFlag} />\n        </li>\n        <ManuelPrayerTimesSettings />\n      </ul>);\n  }\n;\n\nexport default PrayerTab;\n","import React from 'react';\nimport shallow from 'zustand/shallow'\n\nimport { useStore } from '../../store';\nimport PrayerTab from \"./PrayerTab.view\";\n\ntype Props = {\n  className: string;\n}\n\nexport default ({ className }: Props) => {\n  const [\n    prayerMethod,\n    dayNightFlag,\n    playDoaaFlag,\n    location,\n  ] = useStore(state => [\n    state.userData.settings.prayerTimes.prayerMethod,\n    state.userData.settings.prayerTimes.dayNightFlag,\n    state.userData.settings.playDoaaFlag,\n    state.userData.location,\n  ], shallow);\n\n  const updatePrayerMethod = useStore(state => state.updatePrayerMethod);\n\n  const toggleDayNightFlag = useStore(state => state.toggleDayNightFlag);\n\n  const togglePlayDoaaFlag = useStore(state => state.togglePlayDoaaFlag);\n\n  const updateLocation = useStore(state => state.updateLocation);\n\n  return (<PrayerTab className={className}\n                     prayerMethod={prayerMethod}\n                     dayNightFlag={dayNightFlag}\n                     playDoaaFlag={playDoaaFlag !== false}\n                     location={location}\n                     updatePrayerMethod={updatePrayerMethod}\n                     toggleDayNightFlag={toggleDayNightFlag}\n                     togglePlayDoaaFlag={togglePlayDoaaFlag}\n                     updateLocation={updateLocation}\n  />)\n};\n","type log = {\n  date: string;\n  changes: {\n    type: \"added\" | \"removed\" | \"changed\" | \"fixed\" | \"upcoming\";\n    value: string;\n  }[];\n};\n\nexport const _CHANGE_LOG: Array<log> = [//Types are => added, fixed, changed\n  {\n    date: 'January 26, 2021',\n    changes: [\n      { type: \"added\", value: 'إضافة رقم الحزب ورقم الجزء الي تفاصيل الأية' },\n      { type: \"fixed\", value: 'إصلاح بعض المشاكل وإضافة بعض التحسينات' },\n    ],\n  },\n  {\n    date: 'January 24, 2021',\n    changes: [\n      { type: \"added\", value: 'إمكانية إيقاف الأذان عن طريق الضغط علي إشعار الأذان' },\n      { type: \"fixed\", value: 'إصلاح بعض المشاكل وإضافة بعض التحسينات' },\n    ],\n  },\n  {\n    date: 'January 15, 2021',\n    changes: [\n      { type: \"fixed\", value: 'إصلاح بعض المشاكل في إعدادات التحكم في صوت الأذان والأيات' },\n      { type: \"fixed\", value: 'إصلاح بعض المشاكل في قائمة الاذكار' },\n    ],\n  },\n  {\n    date: 'January 15, 2021',\n    changes: [\n      { type: \"added\", value: 'إضافة المزيد من القراء مثل \"ياسر الدوسري\" و \"ناصر القطامي\"' },\n      { type: \"added\", value: 'إمكانية إيقاف تشغيل الدعاء ما بعد الأذان من الإعدادات' },\n      { type: \"added\", value: 'إضافة التاريخ الميلادي للبرنامج من خلال الضغط علي التاريخ الهجري' },\n      { type: \"added\", value: 'إضافة عدّاد لاذكار الصباح والمساء' },\n      { type: \"added\", value: 'إضافة إعدادات للتحكم في صوت الأذان والأيات' },\n      { type: \"added\", value: 'إضافة أدعية من القران الكريم' },\n      { type: \"added\", value: 'إمكانية إضافة روابط سريعة' },\n      { type: \"fixed\", value: 'إصلاح بعض المشاكل في البرنامج' },\n    ],\n  },\n  {\n    date: 'December 21, 2020',\n    changes: [\n      { type: \"changed\", value: \"Update the extension's logo 🎉\" },\n      { type: \"fixed\", value: \"Increase the quality of the background 🌄\" },\n      { type: \"removed\", value: \"حذف جميع المستوطنات الخاصة بدولة الإحتلال من قائمة المدن 🇵🇸\" },\n    ],\n  },\n  {\n    date: 'December 20, 2020',\n    changes: [\n      { type: \"fixed\", value: \"Fix some issues in prayer alarms\" },\n    ],\n  },\n  {\n    date: 'December 19, 2020',\n    changes: [\n      { type: \"fixed\", value: \"تم تعديل قائمة الدول و إستبدال دولة الإحتلال بدولة فلسطين ❤️\" },\n    ],\n  },\n  {\n    date: 'December 18, 2020',\n    changes: [\n      { type: \"added\", value: \"Add alarms for prayer times\" },\n      { type: \"added\", value: \"Add different sounds for prayer alarms in settings\" },\n      { type: \"added\", value: \"Add Duaa that plays after each prayer alarm\" },\n      { type: \"added\", value: \"Add Morning and Evening Adhkar\" },\n      { type: \"added\", value: \"Add new prayer methods in settings\" },\n      { type: \"added\", value: \"Enter your location manually to get accurate prayer times\" },\n      { type: \"fixed\", value: \"When you play audio in random mode, the app will change the verses in order\" },\n      { type: \"removed\", value: \"Remove the location permission\" },\n    ],\n  },\n  {\n    date: 'November 3, 2020',\n    changes: [\n      { type: \"added\", value: \"Open quick tabs in a new window to avoid any interruption to the Quran\" },\n      { type: \"added\", value: \"Disable nature's background and use solid colors instead\" },\n      { type: \"added\", value: \"Choose your own background solid color\" },\n      { type: \"added\", value: \"Add Basmallah at the beginning of every surah\" },\n      { type: \"changed\", value: \"Change play-verse's hotkey from P to Space\" },\n      { type: \"changed\", value: \"Change add-to-favourite's hotkey from F to L\" },\n      { type: \"fixed\", value: \"Disable hotkeys when you open a modal or popup\" },\n      { type: \"fixed\", value: \"In 24h system, chrome was showing 24:00 instead of 00:00\" },\n      { type: \"removed\", value: \"Removed the weather widget because the weather's service is costing money\" },\n    ],\n  },\n  {\n    date: 'October 25, 2020',\n    changes: [\n      { type: \"added\", value: \"The verse audio will continue playing automatically 🥳🎙\" },\n      { type: \"added\", value: \"New Arabic verse font 🖌\" },\n      { type: \"added\", value: \"Quick links feature 🔗\" },\n      { type: \"added\", value: \"Show Arabic verse with the translation 🤩\" },\n      { type: \"added\", value: \"Add keyboard shortcuts ⌨️\" },\n      { type: \"added\", value: \"Increase the accessibility so you can use the App with the keyboard easily 👓\" },\n      { type: \"fixed\", value: \"Fix prayer settings issue 🛠\" },\n    ],\n  },\n  {\n    date: 'October 20, 2020',\n    changes: [\n      { type: \"added\", value: \"Build the app from the ground up using new technologies 🥳🌟\" },\n      { type: \"added\", value: \"Add Arabic language to the app ✅\" },\n      { type: \"added\", value: \"Add 15+ translations 🎉\" },\n      { type: \"added\", value: \"Add new reciter (Al-Minshawi) to the list 🎉\" },\n      { type: \"added\", value: \"Improve the performance and stability 🚀\" },\n      {\n        type: \"added\",\n        value: \"Add new ways to contribute to share thawab 🤲 and help me make more Apps like this one 😊\",\n      },\n      { type: \"fixed\", value: \"Enhance the design and usability 🤩\" },\n      { type: \"upcoming\", value: \"Add continues-audio-play with no need to change the verse manually\" },\n      { type: \"upcoming\", value: \"Add islamic-events with reminders\" },\n      { type: \"upcoming\", value: \"Add better reminders for prayer-times\" },\n      { type: \"upcoming\", value: \"Add more options to the prayer-times to be more accurate\" },\n    ],\n  },\n  {\n    date: 'April 9, 2019',\n    changes: [\n      {\n        type: 'added',\n        value: 'Added a link for the iOS version of \"Wazaker\" app',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed issues and performance enhancements',\n      },\n    ],\n  },\n  {\n    date: 'February 20, 2019',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Fixed some issues with the Hijri date',\n      },\n    ],\n  },\n  {\n    date: 'February 1, 2019',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Fixed wrong url for the mobile app image',\n      },\n    ],\n  },\n  {\n    date: 'February 1, 2019',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Added scrolling to the Favourites tab',\n      },\n      {\n        type: 'added',\n        value: 'Added new link for the mobile app',\n      },\n    ],\n  },\n  {\n    date: 'December 12, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Now, the prayer notification won\\'t show if you disabled the prayer sound.',\n      },\n    ],\n  },\n  {\n    date: 'December 11, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'In some cases the verse was overlapping the prayer times.',\n      },\n    ],\n  },\n  {\n    date: 'November 16, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Fixed some issues with Daily goal feature.',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed alignment of the Arabic verse',\n      },\n    ],\n  },\n  {\n    date: 'October 3, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Fixed an issue related to long Verses appearence.',\n      },\n    ],\n  },\n  {\n    date: 'September 1, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Fixed some issues.',\n      },\n    ],\n  },\n  {\n    date: 'April 15, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Fixed some issues with Todo.',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed some issues with random change verse feature.',\n      },\n    ],\n  },\n  {\n    date: 'April 13, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Now you can focus on your next todo. you can select which list you wanna focus on by clicking on the pin icon beside the list name. you can enable/disable this feature from settings/Todos.',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed some issues.',\n      },\n    ],\n  },\n  {\n    date: 'April 8, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Added new settings tab called \"Thank you\" to thank our contributors.',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed some issues.',\n      },\n    ],\n  },\n  {\n    date: 'April 3, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Added hijri date.',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed some issues in Todo.',\n      },\n    ],\n  },\n  {\n    date: 'March 28, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Now you can reorder the todo items and lists.',\n      },\n      {\n        type: 'fixed',\n        value: 'fixed some issues.',\n      },\n    ],\n  },\n  {\n    date: 'March 24, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'We added Todo list to the extension.',\n      },\n      {\n        type: 'added',\n        value: 'We added todo tab to the settings so you can show/hide todo and show/hide completed todos.',\n      },\n      {\n        type: 'changed',\n        value:\n          'We made some changes to the background feature so now it should have more and better images.',\n      },\n    ],\n  },\n  {\n    date: 'March 14, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'We added sound option to the prayer notification.',\n      },\n      {\n        type: 'added',\n        value: 'Now you can mark prayer as \"Done\" by clicking on it.',\n      },\n      {\n        type: 'added',\n        value: 'Added an icon under the prayer times to enable/disable sound notification.',\n      },\n    ],\n  },\n  {\n    date: 'March 9, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Now you can create an account to save and sync your data easily 🎉🎉🎉.',\n      },\n      {\n        type: 'added',\n        value: 'Added tafseer \"aljalalyn\" to the Tafseer.',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed some issues with photo categories section.',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed some issues with \"Go to\" feature.',\n      },\n    ],\n  },\n  {\n    date: 'February 28, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Now you can edit the prayer times manually.',\n      },\n      {\n        type: 'added',\n        value: 'Now you can activate the dark theme from \"General\" tab.',\n      },\n      {\n        type: 'added',\n        value: 'Now you can go to a specific verse using \"go to\" menu.',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed a small issue with prayer times.',\n      },\n    ],\n  },\n  {\n    date: 'February 26, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Fixed some issues with location and weather.',\n      },\n    ],\n  },\n  {\n    date: 'February 24, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Fixed some issues in prayer times.',\n      },\n    ],\n  },\n  {\n    date: 'February 22, 2018',\n    changes: [\n      {\n        type: 'changed',\n        value: 'Daily goal will increase automatically with every new verse.',\n      },\n      {\n        type: 'added',\n        value: 'Now you can find the Tafseer of each verse.',\n      },\n      {\n        type: 'added',\n        value: 'Added a hotkey for tafseer.',\n      },\n      {\n        type: 'fixed',\n        value: 'Fixed some issues in prayer times.',\n      },\n      {\n        type: 'added',\n        value: 'Added tooltips to the controls.',\n      },\n    ],\n  },\n  {\n    date: 'February 21, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'Fixed some issues in prayer times.',\n      },\n    ],\n  },\n  {\n    date: 'February 16, 2018',\n    changes: [\n      {\n        type: 'changed',\n        value: 'Moved \"Translation\" option to verse settings.',\n      },\n      {\n        type: 'changed',\n        value: 'Changed the design of the prayer times.',\n      },\n      {\n        type: 'added',\n        value: 'Changed the style of the custom scrollbar.',\n      },\n      {\n        type: 'added',\n        value:\n          'Added countdown bar to the active prayer time to reflect the remaing time till azan.',\n      },\n      {\n        type: 'added',\n        value:\n          'You can hover on the active prayer time to see the remaining time till azan.',\n      },\n      {\n        type: 'added',\n        value:\n          'Now you will see a success message when you achieve your daily goal.',\n      },\n      {\n        type: 'added',\n        value:\n          'Now you will get a notification when it\\'s time for the next Salah.',\n      },\n    ],\n  },\n  {\n    date: 'February 13, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Added the ability to hear the verse from your favourite reciter.',\n      },\n      {\n        type: 'added',\n        value: 'Added multiple Reciters to the verse settings to choose your favourite from them.',\n      },\n      {\n        type: 'added',\n        value: 'Added new shortcut. Now you can play/pause the audio by pressing the \"P\" button.',\n      },\n    ],\n  },\n  {\n    date: 'February 12, 2018',\n    changes: [\n      {\n        type: 'added',\n        value:\n          'Now you can disable the \"background auto change\" in case you loved a specific background and wanted to keep it for a while.',\n      },\n      {\n        type: 'added',\n        value:\n          'Added tooltip to \"daily goal\" box to help people to understand how it works.',\n      },\n      {\n        type: 'fixed',\n        value:\n          'fixed an issue with prayer times.',\n      },\n    ],\n  },\n  {\n    date: 'February 11, 2018',\n    changes: [\n      {\n        type: 'fixed',\n        value: 'when Auto switch is on and the verse is the last verse, the verse breaks.',\n      },\n    ],\n  },\n  {\n    date: 'February 10, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Now you can activate the daily goal option from Verse settings.',\n      },\n      {\n        type: 'added',\n        value: 'Added new hot keys for daily goal.',\n      },\n      {\n        type: 'fixed',\n        value: 'Sometimes locations and prayer times not work properly.',\n      },\n    ],\n  },\n  {\n    date: 'February 8, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Now you can random verse selection.',\n      },\n      {\n        type: 'fixed',\n        value: 'changed favourite icon from star to heart and fixed some UI issues.',\n      },\n      {\n        type: 'added',\n        value: 'you will find a green dot over settings icon that indicates that there are new updates.',\n      },\n    ],\n  },\n  {\n    date: 'February 7, 2018',\n    changes: [\n      {\n        type: 'changed',\n        value: 'Show the total number of verses of Surah in the top left.',\n      },\n      {\n        type: 'changed',\n        value: 'Added transparent background to verse to be more visible over light backgrounds.',\n      },\n      {\n        type: 'changed',\n        value: 'Added shadow to prayer times to be more visible over light backgrounds.',\n      },\n    ],\n  },\n  {\n    date: 'February 5, 2018',\n    changes: [\n      {\n        type: 'added',\n        value: 'Show/hide (weather, location, clock, translation, favourites) from settings.',\n      },\n      {\n        type: 'added',\n        value: 'Change weather type.',\n      },\n      {\n        type: 'added',\n        value: 'Change background from settings.',\n      },\n      {\n        type: 'added',\n        value: 'Select photo categories.',\n      },\n      {\n        type: 'added',\n        value: 'Prayer times.',\n      },\n    ],\n  },\n];\n","import * as React from 'react';\nimport { _CHANGE_LOG } from './WhatsNewTab.constant';\nimport CustomText from \"../CustomText/CustomText.view\";\n\ntype props = {\n  className: string\n}\n\nconst WhatsNewTab = ({ className }: props) => {\n  return (<ul className={className}>\n    {_CHANGE_LOG.map((item, index) =>\n      <li className='popupMenu__row popupMenu__whatsNewContent'\n          key={index}>\n        <div className='popupMenu__whatsNewDate'>{item.date}</div>\n        <ul className='popupMenu__whatsNewChanges'>\n          {item.changes.map((change, index) =>\n            <li className='popupMenu__whatsNewChangesRow'\n                key={index}>\n              <div className='popupMenu__whatsNewValue'\n                   dir=\"auto\">\n                <CustomText forceArabicMode>\n                  {change.value}\n                </CustomText>\n              </div>\n              <div className={`popupMenu__whatsNewType popupMenu__whatsNewType--${change.type}`}>\n                {change.type}\n              </div>\n            </li>,\n          )}\n        </ul>\n      </li>,\n    )}\n  </ul>);\n};\n\nexport default WhatsNewTab;\n","import React from 'react';\nimport { Box, Kbd } from '@chakra-ui/react'\nimport strings from \"../../locales\";\nimport CustomText from \"../CustomText/CustomText.view\";\n\nconst HotkeysTab = () => {\n  const hotKeys = [\n    {\n      key: '←',\n      value: 'previousVerse',\n    },\n    {\n      key: '→',\n      value: 'nextVerse',\n    },\n    {\n      key: 'L',\n      value: 'bookmarkVerse',\n    },\n    {\n      key: 'SPACE',\n      value: 'playPauseAudio',\n    },\n    {\n      key: 'T',\n      value: 'showTafseer',\n    },\n  ];\n\n  return (\n    <Box as=\"ul\"\n         className=\"popupMenu__tabContent\"\n         mt={1}>\n      {hotKeys.map(item =>\n        <li key={item.key}\n            className='popupMenu__row'>\n          <Kbd>{item.key}</Kbd>\n          <CustomText hasArabic>\n            {strings[item.value]}\n          </CustomText>\n        </li>)}\n    </Box>\n  );\n};\n\nexport default HotkeysTab;\n","import React, { useState } from 'react';\nimport { Box, IconButton } from '@chakra-ui/react';\nimport { BsArrowRepeat } from \"react-icons/bs\";\n\nimport strings from \"../../locales\";\nimport Toggle from \"../Toggle/Toggle.view\";\nimport bgImg from \"../../assets/imgs/bg.jpg\";\nimport useBackgroundFunctions from '../../utils/useBackgroundFunctions';\n\ntype BackgroundTabProps = {\n  className: string;\n  backgroundFlag: AppState[\"userData\"][\"settings\"][\"backgroundFlag\"];\n  autoChangeBackgroundFlag: AppState[\"userData\"][\"settings\"][\"autoChangeBackgroundFlag\"];\n  selectedSolidColor: AppState[\"userData\"][\"settings\"][\"selectedSolidColor\"];\n  backgroundList: AppState[\"userData\"][\"backgroundData\"][\"backgroundList\"];\n  toggleBackgroundFlag: AppState[\"toggleBackgroundFlag\"];\n  toggleAutoChangeBackgroundFlag: AppState[\"toggleAutoChangeBackgroundFlag\"];\n  updateSelectedSolidColor: AppState[\"updateSelectedSolidColor\"];\n  updateBackgroundData: AppState[\"updateBackgroundData\"];\n}\n\nconst BackgroundTab = ({\n                         className,\n                         backgroundFlag,\n                         autoChangeBackgroundFlag,\n                         selectedSolidColor,\n                         backgroundList,\n                         toggleBackgroundFlag,\n                         toggleAutoChangeBackgroundFlag,\n                         updateSelectedSolidColor,\n                         updateBackgroundData,\n                       }: BackgroundTabProps) => {\n  const { fetchNewBackground, setNewBackground } = useBackgroundFunctions();\n\n  const [isImageLoading, setIsImageLoading] = useState(false);\n\n  const shouldBeDisabled = (condition: boolean): {} => {\n    if (condition) {\n      return ({\n        opacity: 0.4,\n        cursor: \"not-allowed\",\n        pointerEvents: 'none'\n      });\n    }\n    return {};\n  };\n\n  const loadNewBackground = async () => {\n    setIsImageLoading(true);\n    if (backgroundList && backgroundList.length) {\n      await setNewBackground(backgroundList);\n    }\n    else {\n      try {\n        await fetchNewBackground();\n      }\n      catch (error) {\n        updateBackgroundData({ backgroundUrl: bgImg });\n      }\n    }\n    setIsImageLoading(false);\n  };\n\n  return (\n    <ul className={className}>\n      <li className='popupMenu__row'>\n        <div>\n          {strings.natureBackgrounds}\n        </div>\n        <Toggle flag={backgroundFlag}\n                onClick={toggleBackgroundFlag} />\n      </li>\n      <Box as=\"li\"\n           className='popupMenu__row'\n           {...shouldBeDisabled(backgroundFlag === false)}>\n        <div>\n          {strings.autoChangeBackground}\n        </div>\n        <Toggle flag={autoChangeBackgroundFlag}\n                onClick={toggleAutoChangeBackgroundFlag} />\n      </Box>\n      <Box as=\"li\"\n           className='popupMenu__row'\n           {...shouldBeDisabled(backgroundFlag === false)}>\n        <div>\n          {strings.loadNewBackground}\n        </div>\n        <IconButton\n          variant=\"ghost\"\n          aria-label=\"About me\"\n          fontSize=\"xl\"\n          color=\"var(--color-light1)\"\n          icon={<BsArrowRepeat />}\n          isLoading={isImageLoading}\n          onClick={loadNewBackground}\n          {...shouldBeDisabled(isImageLoading)} />\n      </Box>\n      <Box as=\"li\"\n           className='popupMenu__row'\n           {...shouldBeDisabled(backgroundFlag !== false)}>\n        <div>\n          {strings.selectedSolidColor}\n        </div>\n        <input type=\"color\"\n               defaultValue={selectedSolidColor}\n               onChange={e => updateSelectedSolidColor(e.target.value)}\n        />\n      </Box>\n    </ul>\n  );\n}\n\nexport default BackgroundTab;\n","import React from 'react';\nimport shallow from \"zustand/shallow\";\nimport _get from 'lodash/get'\n\nimport BackgroundTab from './BackgroundTab.view';\nimport { useStore } from \"../../store\";\n\ntype Props = {\n  className: string;\n}\n\nexport default ({ className }: Props) => {\n  const {\n    backgroundFlag,\n    autoChangeBackgroundFlag,\n    selectedSolidColor,\n    backgroundList,\n  } = useStore(state => ({\n    backgroundFlag: state.userData.settings.backgroundFlag,\n    autoChangeBackgroundFlag: state.userData.settings.autoChangeBackgroundFlag,\n    selectedSolidColor: state.userData.settings.selectedSolidColor,\n    backgroundList: _get(state.userData, 'backgroundData.backgroundList'),\n  }), shallow);\n\n  const toggleBackgroundFlag = useStore(state => state.toggleBackgroundFlag);\n\n  const toggleAutoChangeBackgroundFlag = useStore(state => state.toggleAutoChangeBackgroundFlag);\n\n  const updateSelectedSolidColor = useStore(state => state.updateSelectedSolidColor);\n\n  const updateBackgroundData = useStore(state => state.updateBackgroundData);\n\n  return (<BackgroundTab className={className}\n                         backgroundFlag={backgroundFlag !== false}\n                         autoChangeBackgroundFlag={autoChangeBackgroundFlag !== false}\n                         selectedSolidColor={selectedSolidColor}\n                         backgroundList={backgroundList}\n                         toggleBackgroundFlag={toggleBackgroundFlag}\n                         toggleAutoChangeBackgroundFlag={toggleAutoChangeBackgroundFlag}\n                         updateSelectedSolidColor={updateSelectedSolidColor}\n                         updateBackgroundData={updateBackgroundData} />);\n}\n","import React, { useState, Fragment } from 'react';\nimport { Box } from \"@chakra-ui/react\";\n\nimport { useStore } from '../../store'\nimport {\n  _GENERAL,\n  _PRAYER,\n  _VERSE,\n  _WHATSNEW,\n  _HOTKEYS,\n  _BACKGROUND,\n} from '../../utils/constants';\nimport strings from '../../locales';\nimport TabsTitles from '../TabsTitles/TabsTitles.view';\nimport PopupMenu from '../PopupMenu/PopupMenu.view';\nimport GeneralTab from \"../GeneralTab/index\";\nimport VerseTab from \"../VerseTab/index\";\nimport PrayerTab from \"../PrayerTab/PrayerTab.index\";\nimport WhatsNewTab from \"../WhatsNewTab/WhatsNewTab.view\";\nimport HotkeysTab from \"../HotkeysTab/HotkeysTab.view\";\nimport BackgroundTab from \"../BackgroundTab/BackgroundTab.index\";\n\ntype SettingsPopupProps = {\n  flag: boolean,\n  onCancel: () => void,\n}\n\nconst SettingsPopup = ({ flag, onCancel }: SettingsPopupProps) => {\n  const checkedChangeLog = useStore(state => state.userData.checkedChangeLog);\n\n  const selectedLanguageKey = useStore(state => state.userData.settings.selectedLanguageKey);\n\n  const menuTitles = [\n    { label: strings[_GENERAL], value: _GENERAL },\n    { label: strings[_VERSE], value: _VERSE },\n    { label: strings[_PRAYER], value: _PRAYER },\n    { label: strings[_BACKGROUND], value: _BACKGROUND },\n    // {label: strings[_TODO], value: _TODO},\n    { label: strings[_WHATSNEW], value: _WHATSNEW },\n    { label: strings[_HOTKEYS], value: _HOTKEYS },\n    // { label: strings[_CONTACT], value: _CONTACT },\n  ];\n\n  const [selectedTabKey, setSelectedTabKey] = useState(!checkedChangeLog ? _WHATSNEW : _GENERAL);\n\n  return (\n    <PopupMenu flag={flag}\n               onCancel={onCancel}>\n      <Fragment>\n        <TabsTitles titlesArray={menuTitles}\n                    selectedTitleKey={selectedTabKey}\n                    setSelectedTitleKey={setSelectedTabKey}\n                    selectedLanguageKey={selectedLanguageKey} />\n        <Box className={'popupMenu__tabsContent'}\n             width={{ base: \"auto\", sm: \"400px\" }}>\n          {selectedTabKey === _GENERAL && <GeneralTab className='popupMenu__tabContent element-has-ar' />}\n          {selectedTabKey === _VERSE && <VerseTab className='popupMenu__tabContent element-has-ar' />}\n          {selectedTabKey === _PRAYER && <PrayerTab className='popupMenu__tabContent element-has-ar' />}\n          {selectedTabKey === _BACKGROUND && <BackgroundTab className='popupMenu__tabContent element-has-ar' />}\n          {/*{selectedTabKey === _TODO && <TodoTab className='popupMenu__tabContent' />}*/}\n          {selectedTabKey === _WHATSNEW && <WhatsNewTab className='popupMenu__tabContent' />}\n          {selectedTabKey === _HOTKEYS && <HotkeysTab />}\n          {/*{selectedTabKey === _CONTACT && <ContactTab className='popupMenu__tabContent' />}*/}\n        </Box>\n      </Fragment>\n    </PopupMenu>\n  );\n};\n\nexport default SettingsPopup;\n\n//todo add translation to the whatsNew content\n","import React, { useState } from 'react';\nimport { MdSettings } from 'react-icons/md';\nimport classNames from 'classnames';\nimport { IconButton } from \"@chakra-ui/react\";\n\nimport SettingsPopup from '../SettingsPopup/SettingsPopup.view';\n\nimport './Settings.styles.scss';\n\ntype SettingsProps = {\n  checkedChangeLog: AppState[\"userData\"][\"checkedChangeLog\"],\n  updateCheckedChangeLog: AppState[\"updateCheckedChangeLog\"],\n};\n\nconst Settings = ({ checkedChangeLog, updateCheckedChangeLog }: SettingsProps) => {\n  const [popupMenuFlag, setPopupMenuFlag] = useState(false);\n\n  const settingsClasses = classNames('settings', {\n    'settings--hasUpdate': !checkedChangeLog,\n    'settings--isActive': popupMenuFlag,\n  });\n\n  const togglePopupMenuFlag = () => {//todo combine the 2 func\n    /* istanbul ignore else */\n    if (!checkedChangeLog && !popupMenuFlag) {\n      updateCheckedChangeLog(true);\n    }\n\n    setPopupMenuFlag(!popupMenuFlag);\n  };\n\n  return (\n    <div className={settingsClasses}>\n      <IconButton\n        variant=\"ghost\"\n        aria-label=\"About me\"\n        fontSize=\"xl\"\n        color=\"var(--color-light1)\"\n        icon={<MdSettings />}\n        onClick={togglePopupMenuFlag} />\n      <SettingsPopup flag={popupMenuFlag}\n                     onCancel={togglePopupMenuFlag} />\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\nimport Settings from \"./Settings.view\";\nimport {useStore} from \"../../store\";\n\nexport default () => {\n    const updateCheckedChangeLog = useStore(state => state.updateCheckedChangeLog);\n    const checkedChangeLog = useStore(state => state.userData.checkedChangeLog);\n\n    return (<Settings checkedChangeLog={checkedChangeLog}\n                      updateCheckedChangeLog={updateCheckedChangeLog}/>);\n}\n","export default __webpack_public_path__ + \"static/media/personal-pic.6116dcd7.jpg\";","import React from 'react';\nimport { Player } from '@lottiefiles/react-lottie-player';\nimport {\n  SiFacebook,\n  SiTwitter,\n  SiYoutube,\n  SiPatreon,\n  SiPaypal,\n} from 'react-icons/si';\nimport { FaStar } from 'react-icons/fa';\nimport {\n  IconButton,\n  useDisclosure,\n  Link,\n  Stack,\n  Text,\n  Avatar,\n  Button,\n  Divider,\n  HStack,\n} from \"@chakra-ui/react\";\nimport ReactGA from 'react-ga';\n\nimport {\n  _FACEBOOK_LINK,\n  _PATREON_LINK,\n  _PAYPAL_LINK,\n  _QT_FACEBOOK_LINK,\n  _QURAN_TAB_CHROME_LINK,\n  _TWITTER_LINK,\n  _WAZAKER_ANDROID_LINK,\n  _WAZAKER_IOS_LINK,\n  _YOUTUBE_LINK\n} from \"../../utils/constants\";\nimport strings from '../../locales/index'\nimport personalPic from \"../../assets/imgs/personal-pic.jpg\";\nimport CustomModal from \"../CustomModal/CustomModal.view\";\n\nimport './AboutMe.styles.scss'\n\nconst defaultOptions = {\n  autoplay: false,\n  loop: false,\n  src: require(\"../../assets/star-burst.json\"),\n  style: { height: '300px', width: '300px' },\n};\n\nconst AboutMe = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const buttonStyles = {\n    fontSize: \"sm\",\n    size: \"lg\",\n    variant: \"solid\",\n  }\n\n  const linkStyles = {\n    isExternal: true,\n    rel: \"noopener noreferrer\",\n    style: {\n      textDecoration: \"inherit\",\n      marginLeft: 0\n    }\n  };\n\n  const QuranTabLink = () => {\n    return (\n      <HStack dir=\"ltr\" mt={1}>\n        <Text mr={2}>Quran Tab:</Text>\n        <Link {...linkStyles}\n              color=\"inherit\"\n              href={_QURAN_TAB_CHROME_LINK}\n              onClick={() => trackEvent(\"quranTab_chrome.clicked\")}>\n          <Text as=\"u\">Chrome extension</Text>\n        </Link>\n      </HStack>);\n  };\n\n  const WazakerLinks = () => {\n    return (\n      <HStack dir=\"ltr\" mt={1}>\n        <Text mr={2}>Wazaker:</Text>\n        <Link {...linkStyles}\n              color=\"inherit\"\n              href={_WAZAKER_IOS_LINK}\n              onClick={() => trackEvent(\"wazaker_ios_link.clicked\")}>\n          <Text as=\"u\">iOS App</Text>\n        </Link>\n        <Text mx={2}>-</Text>\n        <Link {...linkStyles}\n              color=\"inherit\"\n              href={_WAZAKER_ANDROID_LINK}\n              onClick={() => trackEvent(\"wazaker_android_link.clicked\")}>\n          <Text as=\"u\">Android App</Text>\n        </Link>\n      </HStack>\n    );\n  };\n\n  const trackEvent = (action: string) => {\n    ReactGA.event({\n      category: \"About Me\",\n      action,\n    });\n  }\n\n  const openModal = () => {\n    onOpen();\n    trackEvent(\"modal.opened\");\n    runAnimation();\n  };\n\n  const burstRef: React.MutableRefObject<null | Player> = React.useRef(null);\n\n  const runAnimation = () => {\n    if (burstRef && burstRef.current) {\n      burstRef.current.play();\n    }\n  };\n\n  return (\n    <div className=\"AboutMe\">\n      <div className=\"AboutMe__burst\">\n        <Player\n          ref={burstRef} // set the ref to your class instance\n          {...defaultOptions}\n        />\n      </div>\n      <IconButton\n        d=\"flex\"\n        aria-label=\"About me\"\n        fontSize=\"xl\"\n        isRound\n        mx={2}\n        color=\"yellow.300\"\n        bg=\"rgba(255,255,255,0.1)\"\n        _hover={{ bg: \"rgba(255,255,255,0.16)\" }}\n        icon={<FaStar className=\"AboutMe__icon\" />}\n        onClick={openModal} />\n      <CustomModal onClose={onClose}\n                   isOpen={isOpen}>\n        <div className=\"AboutMe__body\">\n          <Stack alignItems=\"center\" py=\"1rem\">\n            <Avatar name=\"Mohamed Abusrea\"\n                    size=\"xl\"\n                    src={personalPic} />\n          </Stack>\n          <Text className=\"element-has-ar\">\n            {strings.whoAmI}\n          </Text>\n          <QuranTabLink />\n          <WazakerLinks />\n\n          <Divider my=\"calc(var(--default-padding)/2)\" />\n\n          <Text className=\"element-has-ar\"\n                pb=\"calc(var(--default-padding)/3)\">{strings.supportMe}</Text>\n          <HStack mt={2}\n                  spacing={4}\n                  justify=\"center\"\n                  dir=\"ltr\"\n                  fontFamily=\"var(--en-font-family)\">\n            {/*<Button {...buttonStyles}\n                    leftIcon={<SiBuymeacoffee />}\n                    color=\"#e4c600\"\n                    onClick={() => trackEvent(\"by_me_coffee.clicked\")}>\n              <Link {...linkStyles}\n                    href={_BY_ME_COFFEE_LINK}>\n                Buy Me a Coffee\n              </Link>\n            </Button>*/}\n            <Button {...buttonStyles}\n                    leftIcon={<SiPatreon />}\n                    color=\"#ff6c72\"\n                    onClick={() => trackEvent(\"patreon.clicked\")}>\n              <Link {...linkStyles}\n                    href={_PATREON_LINK}>\n                Patreon\n              </Link>\n            </Button>\n            <Button {...buttonStyles}\n                    leftIcon={<SiPaypal />}\n                    color=\"#5599e0\"\n                    onClick={() => trackEvent(\"paypal.clicked\")}>\n              <Link {...linkStyles}\n                    href={_PAYPAL_LINK}>\n                Paypal\n              </Link>\n            </Button>\n          </HStack>\n\n          <Divider my=\"calc(var(--default-padding)/2)\" />\n\n          <HStack align=\"center\">\n            <Text className=\"element-has-ar\">{strings.findMeHere}</Text>\n            <Link {...linkStyles}\n                  href={_FACEBOOK_LINK}\n                  onClick={() => trackEvent(\"facebook.clicked\")}>\n              <IconButton\n                variant=\"ghost\"\n                aria-label=\"Facebook Account\"\n                fontSize=\"xl\"\n                color=\"#2D88FF\"\n                icon={<SiFacebook />} />\n            </Link>\n            <Link {...linkStyles}\n                  href={_TWITTER_LINK}\n                  onClick={() => trackEvent(\"twitter.clicked\")}>\n              <IconButton\n                variant=\"ghost\"\n                aria-label=\"Twitter Account\"\n                fontSize=\"xl\"\n                color=\"#1B91DA\"\n                icon={<SiTwitter />} />\n            </Link>\n            <Link {...linkStyles}\n                  href={_YOUTUBE_LINK}\n                  onClick={() => trackEvent(\"youtube.clicked\")}>\n              <IconButton\n                variant=\"ghost\"\n                aria-label=\"Youtube Account\"\n                fontSize=\"xl\"\n                color=\"#FF0102\"\n                icon={<SiYoutube size=\"1.125rem\" />} />\n            </Link>\n          </HStack>\n          <HStack align=\"center\" isInline>\n            <Text className=\"element-has-ar\">{strings.QT_page}</Text>\n            <Link {...linkStyles}\n                  href={_QT_FACEBOOK_LINK}\n                  onClick={() => trackEvent(\"QT_facebook.clicked\")}>\n              <IconButton\n                variant=\"ghost\"\n                aria-label=\"Facebook Account\"\n                fontSize=\"xl\"\n                color=\"#2D88FF\"\n                icon={<SiFacebook />} />\n            </Link>\n          </HStack>\n        </div>\n      </CustomModal>\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import React from 'react';\nimport { Box } from \"@chakra-ui/react\";\nimport _get from \"lodash/get\";\n\nimport bgImg from \"../../assets/imgs/bg.jpg\";\nimport { _INITIAL_USER_DATA } from \"../../utils/constants\";\n\nimport './Background.styles.scss';\n\ntype BackgroundProps = {\n  backgroundFlag: AppState[\"userData\"][\"settings\"][\"backgroundFlag\"];\n  selectedSolidColor: AppState[\"userData\"][\"settings\"][\"selectedSolidColor\"];\n  backgroundData: AppState[\"userData\"][\"backgroundData\"];\n}\nconst Background = ({\n                      backgroundFlag,\n                      selectedSolidColor,\n                      backgroundData,\n                    }: BackgroundProps) => {\n  const getBackground = () => {\n    if (backgroundFlag !== false) {\n      return { backgroundImage: `url(${_get(backgroundData, 'backgroundUrl', bgImg)})` };\n    }\n    return { backgroundColor: selectedSolidColor || _INITIAL_USER_DATA.settings.selectedSolidColor };\n  }\n\n  return (\n    <Box className=\"Background\"\n         {...getBackground()} />\n  );\n}\n\nexport default Background;\n","/*istanbul ignore file*/\nimport React from 'react';\nimport { useStore } from \"../../store\";\nimport Background from \"./Background.view\";\n\nexport default () => {\n  const backgroundFlag = useStore(state => state.userData.settings.backgroundFlag);\n\n  const selectedSolidColor = useStore(state => state.userData.settings.selectedSolidColor);\n\n  const backgroundData = useStore(state => state.userData.backgroundData);\n\n  return <Background backgroundFlag={backgroundFlag}\n                     selectedSolidColor={selectedSolidColor}\n                     backgroundData={backgroundData} />\n}\n","import React, { useEffect } from 'react';\nimport { useColorMode, Box } from \"@chakra-ui/react\";\n\nimport initGA from \"./utils/initGA\";\nimport { useStore } from './store';\nimport Clock from \"./components/Clock/index\";\nimport Header from \"./components/Header/index\";\nimport Login from \"./components/Login/Login.view\";\nimport Favourites from \"./components/Favourites/index\";\nimport CreditAuthor from \"./components/CreditAuthor/index\";\nimport VerseContent from \"./components/VerseContent/index\";\nimport PrayerTimes from \"./components/PrayerTimes/PrayerTimes.index\";\nimport Settings from \"./components/Settings/index\";\nimport AboutMe from \"./components/AboutMe/AboutMe.view\";\nimport Background from \"./components/Background/Background.index\";\n\nimport './App.scss';\n\nfunction App() {\n  useEffect(() => {\n    initGA();\n  }, []);\n\n  const { setColorMode } = useColorMode();\n\n  const darkThemeFlag = useStore(state => state.userData.settings.darkThemeFlag);\n\n  useStore(state => state.userData.settings.selectedLanguageKey);\n\n  useEffect(() => {\n    darkThemeFlag ? setColorMode(\"dark\") : setColorMode(\"light\");\n    /*eslint-disable react-hooks/exhaustive-deps*/\n  }, [darkThemeFlag]);\n\n  return (\n    <Box className=\"App\">\n      <Background />\n      <Header />\n      <div className=\"App__body\">\n        <Clock />\n        <VerseContent />\n        <PrayerTimes />\n      </div>\n      <footer className=\"App__footer\">\n        <div className=\"App__footerContent\">\n          <Settings />\n          <Login />\n          <CreditAuthor />\n        </div>\n        <div className=\"App__footerContent\">\n          <Favourites />\n          <AboutMe />\n        </div>\n      </footer>\n    </Box>\n  );\n}\n\nexport default App;\n","import ReactGA from \"react-ga\";\n\nexport default () => {\n  ReactGA.initialize(\"UA-113590967-1\");\n  ReactGA.ga('set', 'checkProtocolTask', null);\n  ReactGA.pageview('/home');\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport 'focus-visible/dist/focus-visible'\nimport { Global, css } from '@emotion/core'\n\nimport customTheme from './theme';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst GlobalStyles = css`\n  /*\n    This will hide the focus indicator if the element receives focus via the mouse,\n    but it will still show up on keyboard focus.\n  */\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n     outline: none;\n     box-shadow: none;\n   }\n`;\n\nReactDOM.render(\n  <ChakraProvider theme={customTheme} resetCSS>\n    <Global styles={GlobalStyles} />\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}